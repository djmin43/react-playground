{"version":3,"file":"initialize.js","names":["process","env","gatsby_executing_command","GATSBY_EXPERIMENTAL_FAST_DEV","isCI","GATSBY_WORKER_POOL_WORKER","GATSBY_EXPERIMENTAL_DEV_SSR","PRESERVE_FILE_DOWNLOAD_CACHE","PRESERVE_WEBPACK_CACHE","reporter","info","telemetry","trackFeatureIsUsed","on","reason","panic","initialize","program","args","parentSpan","GATSBY_DISABLE_CACHE_PERSISTENCE","setStore","store","_registerAdditionalDiagnosticOutputHandler","logPendingJobs","outputs","job","getState","jobsV2","incomplete","push","length","size","JSON","stringify","directory","slash","extensions","browserslist","getBrowsersList","dispatch","type","payload","activityForJobs","emitter","phantomActivity","start","onEndJob","jobs","active","end","siteDirectory","activity","activityTimer","compileGatsbyFiles","config","loadConfig","processFlags","flattenedPlugins","loadPlugins","GATSBY_EXPERIMENTAL_QUERY_ON_DEMAND","GATSBY_QUERY_ON_DEMAND_LOADING_INDICATOR","lmdbStoreIsUsed","detectLmdbStore","GATSBY_DETECT_NODE_MUTATIONS","enableNodeMutationsDetection","polyfill","warn","CYPRESS_SUPPORT","verbose","removeStaleJobs","pluginsStr","map","p","name","version","decorateEvent","plugins","startPluginRunner","apiRunnerNode","span","lmdbCacheDirectoryName","cacheDirectory","publicDirectory","workerCacheDirectory","lmdbCacheDirectory","cacheJsonDirExists","fs","existsSync","publicDirExists","workerCacheDirExists","lmdbCacheDirExists","cacheDirExists","NODE_ENV","files","glob","cwd","Promise","all","file","remove","GATSBY_EXPERIMENTAL_PARALLEL_QUERY_RUNNING","catch","emptyDir","pluginVersions","optionalFiles","state","hashes","md5File","trailingSlash","concat","f","pluginsHash","crypto","createHash","update","digest","oldPluginsHash","status","PLUGINS_HASH","stripIndent","cacheIsCorrupt","deleteGlobs","GATSBY_EXPERIMENTAL_PRESERVE_FILE_DOWNLOAD_CACHE","GATSBY_EXPERIMENTAL_PRESERVE_WEBPACK_CACHE","e","error","releaseAllMutexes","pluginCachesPurged","ensureDir","srcDir","__dirname","siteDir","tryRequire","copy","overwrite","err","hasAPIFile","plugin","skipSSR","undefined","envAPIs","modulePath","path","join","resolve","resolveModule","Array","isArray","isResolved","isResolvedSSR","ssrPlugins","options","pluginOptions","filter","browserPlugins","browserPluginsRequires","relativePluginPath","relative","browserAPIRunner","sSRAPIRunner","readFileSync","ssrPluginsRequires","writeFileSync","apiResults","traceId","workerPool","WorkerPool","create","graphqlTypegen","writeGraphQLConfig"],"sources":["../../src/services/initialize.ts"],"sourcesContent":["import _ from \"lodash\"\nimport { slash, isCI } from \"gatsby-core-utils\"\nimport * as fs from \"fs-extra\"\nimport { releaseAllMutexes } from \"gatsby-core-utils/mutex\"\nimport md5File from \"md5-file\"\nimport crypto from \"crypto\"\nimport path from \"path\"\nimport telemetry from \"gatsby-telemetry\"\nimport glob from \"globby\"\n\nimport apiRunnerNode from \"../utils/api-runner-node\"\nimport { getBrowsersList } from \"../utils/browserslist\"\nimport { Store, AnyAction } from \"redux\"\nimport * as WorkerPool from \"../utils/worker/pool\"\nimport { startPluginRunner } from \"../redux/plugin-runner\"\nimport { store, emitter } from \"../redux\"\nimport reporter from \"gatsby-cli/lib/reporter\"\nimport { removeStaleJobs } from \"../bootstrap/remove-stale-jobs\"\nimport { IPluginInfoOptions } from \"../bootstrap/load-plugins/types\"\nimport { IGatsbyState, IStateProgram } from \"../redux/types\"\nimport { IBuildContext } from \"./types\"\nimport { detectLmdbStore } from \"../datastore\"\nimport { loadConfig } from \"../bootstrap/load-config\"\nimport { loadPlugins } from \"../bootstrap/load-plugins\"\nimport type { InternalJob } from \"../utils/jobs/types\"\nimport { enableNodeMutationsDetection } from \"../utils/detect-node-mutations\"\nimport { compileGatsbyFiles } from \"../utils/parcel/compile-gatsby-files\"\nimport { resolveModule } from \"../utils/module-resolver\"\nimport { writeGraphQLConfig } from \"../utils/graphql-typegen/file-writes\"\n\ninterface IPluginResolution {\n  resolve: string\n  options: IPluginInfoOptions\n}\n\ninterface IPluginResolutionSSR extends IPluginResolution {\n  name: string\n}\n\n// If the env variable GATSBY_EXPERIMENTAL_FAST_DEV is set, enable\n// all DEV experimental changes (but only during development & not on CI).\nif (\n  process.env.gatsby_executing_command === `develop` &&\n  process.env.GATSBY_EXPERIMENTAL_FAST_DEV &&\n  !isCI() &&\n  // skip FAST_DEV handling in workers, all env vars will be handle\n  // by main process already and passed to worker\n  !process.env.GATSBY_WORKER_POOL_WORKER\n) {\n  process.env.GATSBY_EXPERIMENTAL_DEV_SSR = `true`\n  process.env.PRESERVE_FILE_DOWNLOAD_CACHE = `true`\n  process.env.PRESERVE_WEBPACK_CACHE = `true`\n\n  reporter.info(`\nThree fast dev experiments are enabled: Development SSR, preserving file download cache and preserving webpack cache.\n\nPlease give feedback on their respective umbrella issues!\n\n- https://gatsby.dev/dev-ssr-feedback\n- https://gatsby.dev/cache-clearing-feedback\n  `)\n\n  telemetry.trackFeatureIsUsed(`FastDev`)\n}\n\n// Show stack trace on unhandled promises.\nprocess.on(`unhandledRejection`, (reason: unknown) => {\n  // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/33636\n  reporter.panic((reason as Error) || `Unhandled rejection`)\n})\n\n// Override console.log to add the source file + line number.\n// Useful for debugging if you lose a console.log somewhere.\n// Otherwise leave commented out.\n// require(`../bootstrap/log-line-function`)\n\nexport async function initialize({\n  program: args,\n  parentSpan,\n}: IBuildContext): Promise<{\n  store: Store<IGatsbyState, AnyAction>\n  workerPool: WorkerPool.GatsbyWorkerPool\n}> {\n  if (process.env.GATSBY_DISABLE_CACHE_PERSISTENCE) {\n    reporter.info(\n      `GATSBY_DISABLE_CACHE_PERSISTENCE is enabled. Cache won't be persisted. Next builds will not be able to reuse any work done by current session.`\n    )\n    telemetry.trackFeatureIsUsed(`DisableCachePersistence`)\n  }\n  if (!args) {\n    reporter.panic(`Missing program args`)\n  }\n\n  /* Time for a little story...\n   * When running `gatsby develop`, the globally installed gatsby-cli starts\n   * and sets up a Redux store (which is where logs are now stored). When gatsby\n   * finds your project's locally installed gatsby-cli package in node_modules,\n   * it switches over. This instance will have a separate redux store. We need to\n   * ensure that the correct store is used which is why we call setStore\n   * (/packages/gatsby-cli/src/reporter/redux/index.js)\n   *\n   * This function\n   * - copies over the logs from the global gatsby-cli to the local one\n   * - sets the store to the local one (so that further actions dispatched by\n   * the global gatsby-cli are handled by the local one)\n   */\n  if (args.setStore) {\n    args.setStore(store)\n  }\n\n  if (reporter._registerAdditionalDiagnosticOutputHandler) {\n    reporter._registerAdditionalDiagnosticOutputHandler(\n      function logPendingJobs(): string {\n        const outputs: Array<InternalJob> = []\n\n        for (const [, { job }] of store.getState().jobsV2.incomplete) {\n          outputs.push(job)\n          if (outputs.length >= 5) {\n            // 5 not finished jobs should be enough to track down issues\n            // this is just limiting output \"spam\"\n            break\n          }\n        }\n\n        return outputs.length\n          ? `Unfinished jobs (showing ${outputs.length} of ${\n              store.getState().jobsV2.incomplete.size\n            } jobs total):\\n\\n` + JSON.stringify(outputs, null, 2)\n          : ``\n      }\n    )\n  }\n\n  const directory = slash(args.directory)\n\n  const program: IStateProgram = {\n    ...args,\n    extensions: [],\n    browserslist: getBrowsersList(directory),\n    // Fix program directory path for windows env.\n    directory,\n  }\n\n  store.dispatch({\n    type: `SET_PROGRAM`,\n    payload: program,\n  })\n\n  let activityForJobs\n\n  emitter.on(`CREATE_JOB`, () => {\n    if (!activityForJobs) {\n      activityForJobs = reporter.phantomActivity(`Running jobs`)\n      activityForJobs.start()\n    }\n  })\n\n  const onEndJob = (): void => {\n    if (activityForJobs && store.getState().jobs.active.length === 0) {\n      activityForJobs.end()\n      activityForJobs = null\n    }\n  }\n\n  emitter.on(`END_JOB`, onEndJob)\n\n  const siteDirectory = program.directory\n\n  // Compile root gatsby files\n  let activity = reporter.activityTimer(`compile gatsby files`)\n  activity.start()\n  await compileGatsbyFiles(siteDirectory)\n  activity.end()\n\n  // Load gatsby config\n  activity = reporter.activityTimer(`load gatsby config`, {\n    parentSpan,\n  })\n  activity.start()\n  const config = await loadConfig({\n    siteDirectory,\n    processFlags: true,\n  })\n  activity.end()\n\n  // Load plugins\n  activity = reporter.activityTimer(`load plugins`, {\n    parentSpan,\n  })\n  activity.start()\n  const flattenedPlugins = await loadPlugins(config, siteDirectory)\n  activity.end()\n\n  // TODO: figure out proper way of disabling loading indicator\n  // for now GATSBY_QUERY_ON_DEMAND_LOADING_INDICATOR=false gatsby develop\n  // will work, but we don't want to force users into using env vars\n  if (\n    process.env.GATSBY_EXPERIMENTAL_QUERY_ON_DEMAND &&\n    !process.env.GATSBY_QUERY_ON_DEMAND_LOADING_INDICATOR\n  ) {\n    // if query on demand is enabled and GATSBY_QUERY_ON_DEMAND_LOADING_INDICATOR was not set at all\n    // enable loading indicator\n    process.env.GATSBY_QUERY_ON_DEMAND_LOADING_INDICATOR = `true`\n  }\n  const lmdbStoreIsUsed = detectLmdbStore()\n\n  if (process.env.GATSBY_DETECT_NODE_MUTATIONS) {\n    enableNodeMutationsDetection()\n  }\n\n  if (config && config.polyfill) {\n    reporter.warn(\n      `Support for custom Promise polyfills has been removed in Gatsby v2. We only support Babel 7's new automatic polyfilling behavior.`\n    )\n  }\n\n  if (process.env.GATSBY_EXPERIMENTAL_QUERY_ON_DEMAND) {\n    if (process.env.gatsby_executing_command !== `develop`) {\n      // we don't want to ever have this flag enabled for anything than develop\n      // in case someone have this env var globally set\n      delete process.env.GATSBY_EXPERIMENTAL_QUERY_ON_DEMAND\n    } else if (isCI() && !process.env.CYPRESS_SUPPORT) {\n      delete process.env.GATSBY_EXPERIMENTAL_QUERY_ON_DEMAND\n      reporter.verbose(\n        `Experimental Query on Demand feature is not available in CI environment. Continuing with eager query running.`\n      )\n    }\n  }\n\n  // run stale jobs\n  // @ts-ignore we'll need to fix redux typings https://redux.js.org/usage/usage-with-typescript\n  store.dispatch(removeStaleJobs(store.getState().jobsV2))\n\n  // Multiple occurrences of the same name-version-pair can occur,\n  // so we report an array of unique pairs\n  const pluginsStr = _.uniq(flattenedPlugins.map(p => `${p.name}@${p.version}`))\n  telemetry.decorateEvent(`BUILD_END`, {\n    plugins: pluginsStr,\n  })\n\n  telemetry.decorateEvent(`DEVELOP_STOP`, {\n    plugins: pluginsStr,\n  })\n\n  // Start plugin runner which listens to the store\n  // and invokes Gatsby API based on actions.\n  startPluginRunner()\n\n  // onPreInit\n  activity = reporter.activityTimer(`onPreInit`, {\n    parentSpan,\n  })\n  activity.start()\n  await apiRunnerNode(`onPreInit`, { parentSpan: activity.span })\n  activity.end()\n\n  const lmdbCacheDirectoryName = `caches-lmdb`\n\n  const cacheDirectory = `${program.directory}/.cache`\n  const publicDirectory = `${program.directory}/public`\n  const workerCacheDirectory = `${program.directory}/.cache/worker`\n  const lmdbCacheDirectory = `${program.directory}/.cache/${lmdbCacheDirectoryName}`\n\n  const cacheJsonDirExists = fs.existsSync(`${cacheDirectory}/json`)\n  const publicDirExists = fs.existsSync(publicDirectory)\n  const workerCacheDirExists = fs.existsSync(workerCacheDirectory)\n  const lmdbCacheDirExists = fs.existsSync(lmdbCacheDirectory)\n\n  // check the cache file that is used by the current configuration\n  const cacheDirExists = lmdbStoreIsUsed\n    ? lmdbCacheDirExists\n    : cacheJsonDirExists\n\n  // For builds in case public dir exists, but cache doesn't, we need to clean up potentially stale\n  // artifacts from previous builds (due to cache not being available, we can't rely on tracking of artifacts)\n  if (\n    process.env.NODE_ENV === `production` &&\n    publicDirExists &&\n    !cacheDirExists\n  ) {\n    activity = reporter.activityTimer(\n      `delete html and css files from previous builds`,\n      {\n        parentSpan,\n      }\n    )\n    activity.start()\n    const files = await glob(\n      [\n        `public/**/*.{html,css}`,\n        `!public/page-data/**/*`,\n        `!public/static`,\n        `!public/static/**/*.{html,css}`,\n      ],\n      {\n        cwd: program.directory,\n      }\n    )\n    await Promise.all(files.map(file => fs.remove(file)))\n    activity.end()\n  }\n\n  // When the main process and workers communicate they save parts of their redux state to .cache/worker\n  // We should clean this directory to remove stale files that a worker might accidentally reuse then\n  if (\n    workerCacheDirExists &&\n    process.env.GATSBY_EXPERIMENTAL_PARALLEL_QUERY_RUNNING\n  ) {\n    activity = reporter.activityTimer(\n      `delete worker cache from previous builds`,\n      {\n        parentSpan,\n      }\n    )\n    activity.start()\n    await fs\n      .remove(workerCacheDirectory)\n      .catch(() => fs.emptyDir(workerCacheDirectory))\n    activity.end()\n  }\n\n  activity = reporter.activityTimer(`initialize cache`, {\n    parentSpan,\n  })\n  activity.start()\n  // Check if any plugins have been updated since our last run. If so\n  // we delete the cache is there's likely been changes\n  // since the previous run.\n  //\n  // We do this by creating a hash of all the version numbers of installed\n  // plugins, the site's package.json, gatsby-config.js, and gatsby-node.js.\n  // The last, gatsby-node.js, is important as many gatsby sites put important\n  // logic in there e.g. generating slugs for custom pages.\n  const pluginVersions = flattenedPlugins.map(p => p.version)\n  const optionalFiles = [\n    `${program.directory}/gatsby-config.js`,\n    `${program.directory}/gatsby-node.js`,\n    `${program.directory}/gatsby-config.ts`,\n    `${program.directory}/gatsby-node.ts`,\n  ] as Array<string>\n\n  const state = store.getState()\n\n  const hashes = await Promise.all(\n    // Ignore optional files with .catch() as these are not required\n    [md5File(`package.json`), state.config.trailingSlash as string].concat(\n      optionalFiles.map(f => md5File(f).catch(() => ``))\n    )\n  )\n\n  const pluginsHash = crypto\n    .createHash(`md5`)\n    .update(JSON.stringify(pluginVersions.concat(hashes)))\n    .digest(`hex`)\n\n  const oldPluginsHash = state && state.status ? state.status.PLUGINS_HASH : ``\n\n  // Check if anything has changed. If it has, delete the site's .cache\n  // directory and tell reducers to empty themselves.\n  //\n  // Also if the hash isn't there, then delete things just in case something\n  // is weird.\n  if (oldPluginsHash && pluginsHash !== oldPluginsHash) {\n    reporter.info(reporter.stripIndent`\n      One or more of your plugins have changed since the last time you ran Gatsby. As\n      a precaution, we're deleting your site's cache to ensure there's no stale data.\n    `)\n  }\n\n  // .cache directory exists in develop at this point\n  // so checking for .cache/json or .cache/caches-lmdb as a heuristic (could be any expected file)\n  const cacheIsCorrupt = cacheDirExists && !publicDirExists\n  if (cacheIsCorrupt) {\n    reporter.info(reporter.stripIndent`\n      We've detected that the Gatsby cache is incomplete (the .cache directory exists\n      but the public directory does not). As a precaution, we're deleting your site's\n      cache to ensure there's no stale data.\n    `)\n  }\n\n  if (!oldPluginsHash || pluginsHash !== oldPluginsHash || cacheIsCorrupt) {\n    try {\n      // Comment out inviet until we can test perf impact\n      //\n      // let sourceFileSystemVersion = flattenedPlugins.find(\n      // plugin => plugin.name === `gatsby-source-filesystem`\n      // )?.version\n\n      // // The site might be using a plugin which uses \"createRemoteFileNode\" but\n      // // doesn't have gatsby-source-filesystem in their gatsby-config.js. So lets\n      // // also try requiring it.\n      // if (!sourceFileSystemVersion) {\n      // try {\n      // sourceFileSystemVersion = require(`gatsby-source-filesystem/package.json`)\n      // ?.version\n      // } catch {\n      // // ignore require errors\n      // }\n      // }\n      // } else if (\n      // sourceFileSystemVersion &&\n      // semver.lt(sourceFileSystemVersion, `2.9.0`)\n      // ) {\n      // // If the site has more than 50 downloaded files in it, tell them\n      // // how to save time.\n      // try {\n      // // Divide by two as the directory as both cache files + the actual downloaded files so\n      // // two results / downloaded file.\n      // const filesCount =\n      // (await fs.readdir(`.cache/caches/gatsby-source-filesystem`))\n      // .length / 2\n      // if (filesCount > 50) {\n      // reporter.info(stripIndent`\\n\\n\n\n      // Your local development experience is about to get better, faster, and stronger!\n\n      // Your friendly Gatsby maintainers detected your site downloads quite a few files and that we're about to delete all ${Math.round(\n      // filesCount\n      // )} of them 😅. We're working right now to make our caching smarter which means we won't delete your downloaded files any more.\n\n      // If you're interested in trialing the new caching behavior *today* — which should make your local development environment faster, go ahead and enable the PRESERVE_FILE_DOWNLOAD_CACHE flag and run your develop server again.\n\n      // To do so, add to your gatsby-config.js:\n\n      // flags: {\n      // preserve_file_download_cache: true,\n      // }\n\n      // visit the umbrella issue to learn more: https://github.com/gatsbyjs/gatsby/discussions/28331\n      // `)\n      // }\n      // } catch {\n      // // ignore errors (mostly will just be directory not found).\n      // }\n      // }\n\n      const deleteGlobs = [\n        // By default delete all files & subdirectories\n        `.cache/**`,\n        `.cache/data/**`,\n        `!.cache/data/gatsby-core-utils/**`,\n        `!.cache/compiled`,\n      ]\n\n      if (process.env.GATSBY_EXPERIMENTAL_PRESERVE_FILE_DOWNLOAD_CACHE) {\n        // Stop the caches directory from being deleted, add all sub directories,\n        // but remove gatsby-source-filesystem\n        deleteGlobs.push(`!.cache/caches`)\n        deleteGlobs.push(`.cache/caches/*`)\n        deleteGlobs.push(`!.cache/caches/gatsby-source-filesystem`)\n      }\n\n      if (process.env.GATSBY_EXPERIMENTAL_PRESERVE_WEBPACK_CACHE) {\n        // Add webpack\n        deleteGlobs.push(`!.cache/webpack`)\n      }\n\n      const files = await glob(deleteGlobs, {\n        cwd: program.directory,\n      })\n\n      await Promise.all(files.map(file => fs.remove(file)))\n    } catch (e) {\n      reporter.error(`Failed to remove .cache files.`, e)\n    }\n    // Tell reducers to delete their data (the store will already have\n    // been loaded from the file system cache).\n    store.dispatch({\n      type: `DELETE_CACHE`,\n      cacheIsCorrupt,\n    })\n\n    // make sure all previous mutexes are released\n    await releaseAllMutexes()\n\n    // in future this should show which plugin's caches are purged\n    // possibly should also have which plugins had caches\n    telemetry.decorateEvent(`BUILD_END`, {\n      pluginCachesPurged: [`*`],\n    })\n    telemetry.decorateEvent(`DEVELOP_STOP`, {\n      pluginCachesPurged: [`*`],\n    })\n  }\n\n  // Update the store with the new plugins hash.\n  store.dispatch({\n    type: `UPDATE_PLUGINS_HASH`,\n    payload: pluginsHash,\n  })\n\n  // Now that we know the .cache directory is safe, initialize the cache\n  // directory.\n  await fs.ensureDir(cacheDirectory)\n\n  // Ensure the public/static directory\n  await fs.ensureDir(`${publicDirectory}/static`)\n\n  // Init plugins once cache is initialized\n  if (_CFLAGS_.GATSBY_MAJOR === `4`) {\n    await apiRunnerNode(`onPluginInit`, {\n      parentSpan: activity.span,\n    })\n  } else {\n    await apiRunnerNode(`unstable_onPluginInit`, {\n      parentSpan: activity.span,\n    })\n  }\n\n  activity.end()\n\n  activity = reporter.activityTimer(`copy gatsby files`, {\n    parentSpan,\n  })\n  activity.start()\n  const srcDir = `${__dirname}/../../cache-dir`\n  const siteDir = cacheDirectory\n  const tryRequire = `${__dirname}/../utils/test-require-error.js`\n  try {\n    await fs.copy(srcDir, siteDir, {\n      overwrite: true,\n    })\n    await fs.copy(tryRequire, `${siteDir}/test-require-error.js`)\n    if (lmdbStoreIsUsed) {\n      await fs.ensureDir(`${cacheDirectory}/${lmdbCacheDirectoryName}`)\n    } else {\n      await fs.ensureDir(`${cacheDirectory}/json`)\n    }\n\n    // Ensure .cache/fragments exists and is empty. We want fragments to be\n    // added on every run in response to data as fragments can only be added if\n    // the data used to create the schema they're dependent on is available.\n    await fs.emptyDir(`${cacheDirectory}/fragments`)\n  } catch (err) {\n    reporter.panic(`Unable to copy site files to .cache`, err)\n  }\n\n  // Find plugins which implement gatsby-browser and gatsby-ssr and write\n  // out api-runners for them.\n  const hasAPIFile = (env, plugin): string | undefined => {\n    // The plugin loader has disabled SSR APIs for this plugin. Usually due to\n    // multiple implementations of an API that can only be implemented once\n    if (env === `ssr` && plugin.skipSSR === true) return undefined\n\n    const envAPIs = plugin[`${env}APIs`]\n\n    // Always include gatsby-browser.js files if they exist as they're\n    // a handy place to include global styles and other global imports.\n    try {\n      if (env === `browser`) {\n        const modulePath = path.join(plugin.resolve, `gatsby-${env}`)\n        return slash(resolveModule(modulePath) as string)\n      }\n    } catch (e) {\n      // ignore\n    }\n\n    if (envAPIs && Array.isArray(envAPIs) && envAPIs.length > 0) {\n      const modulePath = path.join(plugin.resolve, `gatsby-${env}`)\n      return slash(resolveModule(modulePath) as string)\n    }\n    return undefined\n  }\n\n  const isResolved = (plugin): plugin is IPluginResolution => !!plugin.resolve\n  const isResolvedSSR = (plugin): plugin is IPluginResolutionSSR =>\n    !!plugin.resolve\n\n  const ssrPlugins: Array<IPluginResolutionSSR> = flattenedPlugins\n    .map(plugin => {\n      return {\n        name: plugin.name,\n        resolve: hasAPIFile(`ssr`, plugin),\n        options: plugin.pluginOptions,\n      }\n    })\n    .filter(isResolvedSSR)\n\n  const browserPlugins: Array<IPluginResolution> = flattenedPlugins\n    .map(plugin => {\n      return {\n        resolve: hasAPIFile(`browser`, plugin),\n        options: plugin.pluginOptions,\n      }\n    })\n    .filter(isResolved)\n\n  const browserPluginsRequires = browserPlugins\n    .map(plugin => {\n      // we need a relative import path to keep contenthash the same if directory changes\n      const relativePluginPath = path.relative(siteDir, plugin.resolve)\n      return `{\n      plugin: require('${slash(relativePluginPath)}'),\n      options: ${JSON.stringify(plugin.options)},\n    }`\n    })\n    .join(`,`)\n\n  const browserAPIRunner = `module.exports = [${browserPluginsRequires}]\\n`\n\n  let sSRAPIRunner = ``\n\n  try {\n    sSRAPIRunner = fs.readFileSync(`${siteDir}/api-runner-ssr.js`, `utf-8`)\n  } catch (err) {\n    reporter.panic(`Failed to read ${siteDir}/api-runner-ssr.js`, err)\n  }\n\n  const ssrPluginsRequires = ssrPlugins\n    .map(\n      plugin =>\n        `{\n      name: '${plugin.name}',\n      plugin: require('${plugin.resolve}'),\n      options: ${JSON.stringify(plugin.options)},\n    }`\n    )\n    .join(`,`)\n  sSRAPIRunner = `var plugins = [${ssrPluginsRequires}]\\n${sSRAPIRunner}`\n\n  fs.writeFileSync(\n    `${siteDir}/api-runner-browser-plugins.js`,\n    browserAPIRunner,\n    `utf-8`\n  )\n  fs.writeFileSync(`${siteDir}/api-runner-ssr.js`, sSRAPIRunner, `utf-8`)\n\n  activity.end()\n  /**\n   * Start the main bootstrap processes.\n   */\n\n  // onPreBootstrap\n  activity = reporter.activityTimer(`onPreBootstrap`, {\n    parentSpan,\n  })\n  activity.start()\n  await apiRunnerNode(`onPreBootstrap`, {\n    parentSpan: activity.span,\n  })\n  activity.end()\n\n  // Track trailing slash option used in config\n  telemetry.trackFeatureIsUsed(`trailingSlash:${state.config.trailingSlash}`)\n\n  // Collect resolvable extensions and attach to program.\n  const extensions = [`.mjs`, `.js`, `.jsx`, `.wasm`, `.json`]\n  // Change to this being an action and plugins implement `onPreBootstrap`\n  // for adding extensions.\n  const apiResults = await apiRunnerNode(`resolvableExtensions`, {\n    traceId: `initial-resolvableExtensions`,\n    parentSpan,\n  })\n\n  store.dispatch({\n    type: `SET_PROGRAM_EXTENSIONS`,\n    payload: _.flattenDeep([extensions, apiResults]),\n  })\n\n  const workerPool = WorkerPool.create()\n\n  // This is only run during `gatsby develop`\n  if (state.config.graphqlTypegen) {\n    telemetry.trackFeatureIsUsed(`GraphQLTypegen`)\n    writeGraphQLConfig(program)\n  }\n\n  return {\n    store,\n    workerPool,\n  }\n}\n"],"mappings":"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"}