{"version":3,"file":"create-pages.js","names":["isInitialCreatePages","createPagesCount","createPages","parentSpan","gatsbyNodeGraphQLFunction","store","deferNodeMutation","shouldRunCreatePagesStatefully","assertStore","activity","reporter","activityTimer","start","timestamp","Date","now","currentPages","Map","getState","pages","originalGraphQL","wrappedGraphQL","returnValue","apply","arguments","end","totalMS","warn","traceId","apiRunnerNode","graphql","waitForCascadingActions","span","dataStore","getDataStore","info","countNodes","size","process","env","gatsby_log_level","types","getTypes","verbose","length","map","type","join","deletedPages","deleteUntouchedPages","tim","changedPages","findChangedPages","dispatch","actions","apiFinished","apiName"],"sources":["../../src/services/create-pages.ts"],"sourcesContent":["import reporter from \"gatsby-cli/lib/reporter\"\nimport apiRunnerNode from \"../utils/api-runner-node\"\nimport { IDataLayerContext } from \"../state-machines/data-layer/types\"\nimport { assertStore } from \"../utils/assert-store\"\nimport { IGatsbyPage } from \"../redux/types\"\nimport { actions } from \"../redux/actions\"\nimport { deleteUntouchedPages, findChangedPages } from \"../utils/changed-pages\"\nimport { getDataStore } from \"../datastore\"\n\nconst isInitialCreatePages = true\nlet createPagesCount = 0\nexport async function createPages({\n  parentSpan,\n  gatsbyNodeGraphQLFunction,\n  store,\n  deferNodeMutation,\n  shouldRunCreatePagesStatefully,\n}: Partial<IDataLayerContext>): Promise<{\n  deletedPages: Array<string>\n  changedPages: Array<string>\n}> {\n  assertStore(store)\n  const activity = reporter.activityTimer(`createPages`, {\n    parentSpan,\n  })\n  activity.start()\n  const timestamp = Date.now()\n  const currentPages = new Map<string, IGatsbyPage>(store.getState().pages)\n\n  // Wrap the GraphQL function so we can measure how long it takes to run.\n  const originalGraphQL = gatsbyNodeGraphQLFunction\n  // eslint-disable-next-line\n  async function wrappedGraphQL() {\n    const start = Date.now()\n    // @ts-ignore not sure how to type the following\n    const returnValue = await originalGraphQL.apply(this, arguments) // eslint-disable-line\n    const end = Date.now()\n    const totalMS = end - start\n    if (totalMS > 10000) {\n      reporter.warn(\n        `Your GraphQL query in createPages took ${\n          totalMS / 1000\n        } seconds which is an unexpectedly long time. See https://gatsby.dev/create-pages-performance for tips on how to improve this.`\n      )\n    }\n    return returnValue\n  }\n\n  createPagesCount += 1\n  const traceId = isInitialCreatePages\n    ? `initial-createPages`\n    : `createPages #${createPagesCount}`\n  await apiRunnerNode(\n    `createPages`,\n    {\n      graphql: wrappedGraphQL,\n      traceId,\n      waitForCascadingActions: true,\n      parentSpan: activity.span,\n      deferNodeMutation,\n    },\n    { activity }\n  )\n  activity.end()\n\n  if (shouldRunCreatePagesStatefully) {\n    const activity = reporter.activityTimer(`createPagesStatefully`, {\n      parentSpan,\n    })\n    activity.start()\n    await apiRunnerNode(\n      `createPagesStatefully`,\n      {\n        graphql: gatsbyNodeGraphQLFunction,\n        traceId: `initial-createPagesStatefully`,\n        waitForCascadingActions: true,\n        parentSpan: activity.span,\n        deferNodeMutation,\n      },\n      {\n        activity,\n      }\n    )\n    activity.end()\n  }\n\n  const dataStore = getDataStore()\n  reporter.info(\n    `Total nodes: ${dataStore.countNodes()}, ` +\n      `SitePage nodes: ${\n        store.getState().pages.size\n      } (use --verbose for breakdown)`\n  )\n\n  if (process.env.gatsby_log_level === `verbose`) {\n    const types = dataStore.getTypes()\n    reporter.verbose(\n      `Number of node types: ${types.length}. Nodes per type: ${types\n        .map(type => type + `: ` + dataStore.countNodes(type))\n        .join(`, `)}`\n    )\n  }\n\n  reporter.verbose(`Checking for deleted pages`)\n\n  const deletedPages = deleteUntouchedPages(\n    store.getState().pages,\n    timestamp,\n    !!shouldRunCreatePagesStatefully\n  )\n\n  reporter.verbose(\n    `Deleted ${deletedPages.length} page${deletedPages.length === 1 ? `` : `s`}`\n  )\n\n  const tim = reporter.activityTimer(`Checking for changed pages`, {\n    parentSpan,\n  })\n  tim.start()\n\n  const { changedPages } = findChangedPages(\n    currentPages,\n    store.getState().pages\n  )\n\n  reporter.verbose(\n    `Found ${changedPages.length} changed page${\n      changedPages.length === 1 ? `` : `s`\n    }`\n  )\n\n  tim.end()\n\n  store.dispatch(actions.apiFinished({ apiName: `createPages` }))\n\n  return {\n    changedPages,\n    deletedPages,\n  }\n}\n"],"mappings":"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"}