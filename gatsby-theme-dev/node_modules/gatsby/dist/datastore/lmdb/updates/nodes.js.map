{"version":3,"file":"nodes.js","names":["updateNodes","nodesDb","action","type","put","payload","id","remove","path","node","get","Error","mode","pageMode"],"sources":["../../../../src/datastore/lmdb/updates/nodes.ts"],"sourcesContent":["import { ActionsUnion, IGatsbyNode } from \"../../../redux/types\"\nimport type { Database } from \"lmdb\"\n\ntype NodeId = string\n\nexport function updateNodes(\n  nodesDb: Database<IGatsbyNode, NodeId>,\n  action: ActionsUnion\n): Promise<boolean> | boolean {\n  switch (action.type) {\n    case `CREATE_NODE`:\n    case `ADD_FIELD_TO_NODE`:\n    case `ADD_CHILD_NODE_TO_PARENT_NODE`: {\n      return nodesDb.put(action.payload.id, action.payload)\n    }\n    case `DELETE_NODE`: {\n      if (action.payload) {\n        return nodesDb.remove(action.payload.id)\n      }\n\n      return false\n    }\n    case `MATERIALIZE_PAGE_MODE`: {\n      const id = `SitePage ${action.payload.path}`\n      const node = nodesDb.get(id)\n      if (!node) {\n        throw new Error(`Could not find SitePage node by id: ${id}`)\n      }\n      node.mode = action.payload.pageMode\n      return nodesDb.put(id, node)\n    }\n  }\n  return false\n}\n"],"mappings":";;;;;AAKO,SAASA,WAAT,CACLC,OADK,EAELC,MAFK,EAGuB;EAC5B,QAAQA,MAAM,CAACC,IAAf;IACE,KAAM,aAAN;IACA,KAAM,mBAAN;IACA,KAAM,+BAAN;MAAsC;QACpC,OAAOF,OAAO,CAACG,GAAR,CAAYF,MAAM,CAACG,OAAP,CAAeC,EAA3B,EAA+BJ,MAAM,CAACG,OAAtC,CAAP;MACD;;IACD,KAAM,aAAN;MAAoB;QAClB,IAAIH,MAAM,CAACG,OAAX,EAAoB;UAClB,OAAOJ,OAAO,CAACM,MAAR,CAAeL,MAAM,CAACG,OAAP,CAAeC,EAA9B,CAAP;QACD;;QAED,OAAO,KAAP;MACD;;IACD,KAAM,uBAAN;MAA8B;QAC5B,MAAMA,EAAE,GAAI,YAAWJ,MAAM,CAACG,OAAP,CAAeG,IAAK,EAA3C;QACA,MAAMC,IAAI,GAAGR,OAAO,CAACS,GAAR,CAAYJ,EAAZ,CAAb;;QACA,IAAI,CAACG,IAAL,EAAW;UACT,MAAM,IAAIE,KAAJ,CAAW,uCAAsCL,EAAG,EAApD,CAAN;QACD;;QACDG,IAAI,CAACG,IAAL,GAAYV,MAAM,CAACG,OAAP,CAAeQ,QAA3B;QACA,OAAOZ,OAAO,CAACG,GAAR,CAAYE,EAAZ,EAAgBG,IAAhB,CAAP;MACD;EArBH;;EAuBA,OAAO,KAAP;AACD"}