{"version":3,"file":"common.js","names":["isDesc","sortOrder","resolveFieldValue","dottedFieldPath","nodeOrThunk","resolvedNodeFields","result","getValueAt","node","matchesFilter","filter","fieldValue","comparator","DbComparator","EQ","value","IN","arr","Array","isArray","some","v","GT","compareKey","GTE","LT","LTE","NE","NIN","every","REGEX","RegExp","test","String","cartesianProduct","reduce","a","b","flatMap","d","map","e","typeOrder","symbol","undefined","boolean","number","string","arrayComparison","i","Symbol","keyFor"],"sources":["../../../../src/datastore/lmdb/query/common.ts"],"sourcesContent":["import { DbComparator, IDbFilterStatement } from \"../../common/query\"\nimport { IGatsbyNode } from \"../../../redux/types\"\nimport { getValueAt } from \"../../../utils/get-value-at\"\n\nexport function isDesc(\n  sortOrder: \"asc\" | \"desc\" | \"ASC\" | \"DESC\" | boolean | void\n): boolean {\n  return sortOrder === `desc` || sortOrder === `DESC` || sortOrder === false\n}\n\n/**\n * Given dotted field selector (e.g. `foo.bar`) returns a plain list of values matching this selector.\n * It is possible that the path maps to several values when one of the intermediate values is an array.\n *\n * Example node:\n * {\n *   foo: [{ bar: `bar1`}, { bar: `bar2` }]\n * }\n *\n * In this case resolveFieldValue([`foo`, `bar`], node) returns [`bar1`, `bar2`]\n *\n * When `resolvedNodeFields` argument is passed the function first looks for values in this object\n * and only looks in the node if the value is not found in `resolvedNodeFields`\n */\nexport function resolveFieldValue(\n  dottedFieldPath: string | Array<string>,\n  nodeOrThunk: IGatsbyNode | (() => IGatsbyNode),\n  resolvedNodeFields?: { [field: string]: unknown }\n): unknown {\n  let result\n  if (resolvedNodeFields) {\n    result = getValueAt(resolvedNodeFields, dottedFieldPath)\n  }\n  if (typeof result !== `undefined`) {\n    return result\n  }\n  const node = typeof nodeOrThunk === `function` ? nodeOrThunk() : nodeOrThunk\n  return getValueAt(node, dottedFieldPath)\n}\n\nexport function matchesFilter(\n  filter: IDbFilterStatement,\n  fieldValue: unknown\n): boolean {\n  switch (filter.comparator) {\n    case DbComparator.EQ:\n      return filter.value === null\n        ? filter.value == fieldValue\n        : filter.value === fieldValue\n    case DbComparator.IN: {\n      const arr = Array.isArray(filter.value) ? filter.value : [filter.value]\n      return arr.some(v => (v === null ? v == fieldValue : v === fieldValue))\n    }\n    case DbComparator.GT:\n      return compareKey(fieldValue, filter.value) > 0\n    case DbComparator.GTE:\n      return compareKey(fieldValue, filter.value) >= 0\n    case DbComparator.LT:\n      return compareKey(fieldValue, filter.value) < 0\n    case DbComparator.LTE:\n      return compareKey(fieldValue, filter.value) <= 0\n    case DbComparator.NE:\n    case DbComparator.NIN: {\n      const arr = Array.isArray(filter.value) ? filter.value : [filter.value]\n      return arr.every(v => (v === null ? v != fieldValue : v !== fieldValue))\n    }\n    case DbComparator.REGEX: {\n      if (typeof fieldValue !== `undefined` && filter.value instanceof RegExp) {\n        return filter.value.test(String(fieldValue))\n      }\n      return false\n    }\n  }\n  return false\n}\n\nexport function cartesianProduct(...arr: Array<Array<any>>): Array<any> {\n  return arr.reduce((a, b) => a.flatMap(d => b.map(e => [...d, e])), [[]])\n}\n\nconst typeOrder = {\n  symbol: 0,\n  undefined: 1,\n  boolean: 2,\n  number: 3,\n  string: 4,\n}\n\n// Note: this is a copy of this function from lmdb-store:\n// https://github.com/DoctorEvidence/lmdb-store/blob/e1e53d6d2012ec22071a8fb7fa3b47f8886b22d2/index.js#L1259-L1300\n// We need it here to avoid imports from \"lmdb-store\" while it is not a direct dependency\n// FIXME: replace with an import in v4\nexport function compareKey(a: unknown, b: unknown): number {\n  // compare with type consistency that matches ordered-binary\n  if (typeof a == `object`) {\n    if (!a) {\n      return b == null ? 0 : -1\n    }\n    if (a[`compare`]) {\n      if (b == null) {\n        return 1\n      } else if (typeof b === `object` && b !== null && b[`compare`]) {\n        return a[`compare`](b)\n      } else {\n        return -1\n      }\n    }\n    let arrayComparison\n    if (b instanceof Array) {\n      let i = 0\n      while (\n        (arrayComparison = compareKey(a[i], b[i])) == 0 &&\n        i <= a[`length`]\n      ) {\n        i++\n      }\n      return arrayComparison\n    }\n    arrayComparison = compareKey(a[0], b)\n    if (arrayComparison == 0 && a[`length`] > 1) return 1\n    return arrayComparison\n  } else if (typeof a == typeof b) {\n    if (typeof a === `symbol` && typeof b === `symbol`) {\n      a = Symbol.keyFor(a)\n      b = Symbol.keyFor(b)\n    }\n    return (a as any) < (b as any) ? -1 : a === b ? 0 : 1\n  } else if (typeof b == `object`) {\n    if (b instanceof Array) return -compareKey(b, a)\n    return 1\n  } else {\n    return typeOrder[typeof a] < typeOrder[typeof b] ? -1 : 1\n  }\n}\n"],"mappings":"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"}