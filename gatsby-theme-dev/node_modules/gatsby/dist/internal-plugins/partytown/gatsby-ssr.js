"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.wrapRootElement = exports.onRenderBody = void 0;

var _react = _interopRequireDefault(require("react"));

var _react2 = require("@builder.io/partytown/react");

var _gatsbyScript = require("gatsby-script");

const collectedScripts = new Map();

const wrapRootElement = ({
  element,
  pathname
}) => /*#__PURE__*/_react.default.createElement(_gatsbyScript.PartytownContext.Provider, {
  value: {
    collectScript: newScript => {
      const currentCollectedScripts = collectedScripts.get(pathname) || [];
      currentCollectedScripts.push(newScript);
      collectedScripts.set(pathname, currentCollectedScripts);
    }
  }
}, element);

exports.wrapRootElement = wrapRootElement;

const onRenderBody = ({
  pathname,
  setHeadComponents
}) => {
  const collectedScriptsOnPage = collectedScripts.get(pathname);

  if (!(collectedScriptsOnPage !== null && collectedScriptsOnPage !== void 0 && collectedScriptsOnPage.length)) {
    return;
  }

  const collectedForwards = collectedScriptsOnPage === null || collectedScriptsOnPage === void 0 ? void 0 : collectedScriptsOnPage.flatMap(script => (script === null || script === void 0 ? void 0 : script.forward) || []);
  setHeadComponents([/*#__PURE__*/_react.default.createElement(_react2.Partytown, {
    key: "partytown",
    forward: collectedForwards
  })]);
  collectedScripts.delete(pathname);
};

exports.onRenderBody = onRenderBody;
//# sourceMappingURL=gatsby-ssr.js.map