{"version":3,"file":"gatsby-node.js","names":["isProductionEnv","process","env","gatsby_executing_command","activeDevelopmentFunctions","Set","activeEntries","ensureFunctionIsCompiled","functionObj","compiledFunctionsDir","compiledFileExists","fs","stat","absoluteCompiledFilePath","e","time","Date","utimesSync","originalAbsoluteFilePath","Promise","resolve","watcher","chokidar","watch","on","_path","close","createGlobArray","siteDirectoryPath","plugins","globs","globIgnorePatterns","root","pluginName","nestedFolder","push","globPattern","ignorePattern","rootPath","path","join","forEach","plugin","name","includes","glob","globAsync","pattern","options","reject","err","files","createWebpackConfig","store","reporter","getState","flattenedPlugins","allFunctions","all","map","knownFunctions","ignore","file","originalRelativeFilePath","relative","dir","parse","compiledFunctionName","compiledPath","finalName","urlResolve","functionRoute","relativeCompiledFilePath","matchPath","getMatchPath","func","dispatch","internalActions","setFunctions","writeFileSync","JSON","stringify","nodeEnv","NODE_ENV","configEnv","GATSBY_ACTIVE_ENV","envFile","parsed","dotenv","readFileSync","encoding","code","error","envObject","Object","keys","reduce","acc","key","varsFromProcessEnv","PUBLIC_DIR","mergedEnvVars","assign","processEnvVars","entries","precompileDevFunctions","GATSBY_PRECOMPILE_DEVELOP_FUNCTIONS","functionsList","parsedFile","compiledNameWithoutExtension","stage","entry","output","filename","libraryTarget","target","optimization","minimize","extensions","cache","type","cacheLocation","mode","module","rules","test","byDependency","esm","fullySpecified","descriptionData","use","loader","presets","exclude","webpack","DefinePlugin","IgnorePlugin","checkResource","resource","warn","isFirstBuild","onPreBootstrap","parentSpan","activity","activityTimer","start","program","directory","verbose","ensureDir","emptyDir","config","callback","stats","rawMessages","toJson","warnings","errors","length","reportWebpackWarnings","compilation","formatted","formatWebpackMessages","message","success","run","compiler","ignoreInitial","event","values","log","panic","id","context","end","onCreateDevServer","app","functionMiddlewares","getFunctions","functions","prepareFn","add","showDebugMessageInResponse"],"sources":["../../../src/internal-plugins/functions/gatsby-node.ts"],"sourcesContent":["import fs from \"fs-extra\"\nimport glob from \"glob\"\nimport path from \"path\"\nimport webpack from \"webpack\"\nimport _ from \"lodash\"\nimport { getMatchPath, urlResolve } from \"gatsby-core-utils\"\nimport { CreateDevServerArgs, ParentSpanPluginArgs } from \"gatsby\"\nimport formatWebpackMessages from \"react-dev-utils/formatWebpackMessages\"\nimport dotenv from \"dotenv\"\nimport chokidar from \"chokidar\"\nimport { reportWebpackWarnings } from \"../../utils/webpack-error-utils\"\nimport { internalActions } from \"../../redux/actions\"\nimport { IGatsbyFunction } from \"../../redux/types\"\nimport { functionMiddlewares } from \"./middleware\"\n\nconst isProductionEnv = process.env.gatsby_executing_command !== `develop`\n\ninterface IGlobPattern {\n  /** The plugin that owns this namespace **/\n  pluginName: string\n  /** The root path to the functions **/\n  rootPath: string\n  /** The glob pattern **/\n  globPattern: string\n  /** The glob ignore pattern */\n  ignorePattern: Array<string>\n}\n\n// During development, we lazily compile functions only when they're requested.\n// Here we keep track of which functions have been requested so are \"active\"\nconst activeDevelopmentFunctions = new Set<IGatsbyFunction>()\nlet activeEntries = {}\n\nasync function ensureFunctionIsCompiled(\n  functionObj: IGatsbyFunction,\n  compiledFunctionsDir: string\n): Promise<any> {\n  // stat the compiled function. If it's there, then return.\n  let compiledFileExists = false\n  try {\n    compiledFileExists = !!(await fs.stat(functionObj.absoluteCompiledFilePath))\n  } catch (e) {\n    // ignore\n  }\n  if (compiledFileExists) {\n    return\n  } else {\n    // Otherwise, restart webpack by touching the file and watch for the file to be\n    // compiled.\n    const time = new Date()\n    fs.utimesSync(functionObj.originalAbsoluteFilePath, time, time)\n    await new Promise(resolve => {\n      const watcher = chokidar\n        // Watch the root of the compiled function directory in .cache as chokidar\n        // can't watch files in directories that don't yet exist.\n        .watch(compiledFunctionsDir)\n        .on(`add`, async _path => {\n          if (_path === functionObj.absoluteCompiledFilePath) {\n            await watcher.close()\n\n            resolve(null)\n          }\n        })\n    })\n  }\n}\n\n// Create glob type w/ glob, plugin name, root path\nconst createGlobArray = (siteDirectoryPath, plugins): Array<IGlobPattern> => {\n  const globs: Array<IGlobPattern> = []\n\n  function globIgnorePatterns(\n    root: string,\n    pluginName?: string\n  ): Array<string> {\n    const nestedFolder = pluginName ? `/${pluginName}/**/` : `/**/`\n\n    return [\n      `${root}/src/api${nestedFolder}__tests__/**/*.+(js|ts)`, // Jest tests\n      `${root}/src/api${nestedFolder}+(*.)+(spec|test).+(js|ts)`,\n      `${root}/src/api${nestedFolder}+(*.)+(d).ts`, // .d.ts files\n    ]\n  }\n\n  // Add the default site src/api directory.\n  globs.push({\n    globPattern: `${siteDirectoryPath}/src/api/**/*.{js,ts}`,\n    ignorePattern: globIgnorePatterns(siteDirectoryPath),\n    rootPath: path.join(siteDirectoryPath, `src/api`),\n    pluginName: `default-site-plugin`,\n  })\n\n  // Add each plugin\n  plugins.forEach(plugin => {\n    // Ignore the \"default\" site plugin (aka the src tree) as we're\n    // already watching that.\n    if (plugin.name === `default-site-plugin`) {\n      return\n    }\n    // Ignore any plugins we include by default. In the very unlikely case\n    // we want to ship default functions, we'll special case add them. In the\n    // meantime, we'll avoid extra FS IO.\n    if (plugin.resolve.includes(`internal-plugin`)) {\n      return\n    }\n    if (plugin.resolve.includes(`gatsby-plugin-typescript`)) {\n      return\n    }\n    if (plugin.resolve.includes(`gatsby-plugin-page-creator`)) {\n      return\n    }\n\n    const glob = {\n      globPattern: `${plugin.resolve}/src/api/${plugin.name}/**/*.{js,ts}`,\n      ignorePattern: globIgnorePatterns(plugin.resolve, plugin.name),\n      rootPath: path.join(plugin.resolve, `src/api`),\n      pluginName: plugin.name,\n    } as IGlobPattern\n    globs.push(glob)\n  })\n\n  // Only return unique paths\n  return _.union(globs)\n}\n\nasync function globAsync(\n  pattern: string,\n  options: glob.IOptions = {}\n): Promise<Array<string>> {\n  return await new Promise((resolve, reject) => {\n    glob(pattern, options, (err, files) => {\n      if (err) {\n        reject(err)\n      } else {\n        resolve(files)\n      }\n    })\n  })\n}\n\nconst createWebpackConfig = async ({\n  siteDirectoryPath,\n  store,\n  reporter,\n}): Promise<webpack.Configuration> => {\n  const compiledFunctionsDir = path.join(\n    siteDirectoryPath,\n    `.cache`,\n    `functions`\n  )\n\n  const globs = createGlobArray(\n    siteDirectoryPath,\n    store.getState().flattenedPlugins\n  )\n\n  // Glob and return object with relative/absolute paths + which plugin\n  // they belong to.\n  const allFunctions = await Promise.all(\n    globs.map(async (glob): Promise<Array<IGatsbyFunction>> => {\n      const knownFunctions: Array<IGatsbyFunction> = []\n      const files = await globAsync(glob.globPattern, {\n        ignore: glob.ignorePattern,\n      })\n      files.map(file => {\n        const originalAbsoluteFilePath = file\n        const originalRelativeFilePath = path.relative(glob.rootPath, file)\n\n        const { dir, name } = path.parse(originalRelativeFilePath)\n        // Ignore the original extension as all compiled functions now end with js.\n        const compiledFunctionName = path.join(dir, name + `.js`)\n        const compiledPath = path.join(\n          compiledFunctionsDir,\n          compiledFunctionName\n        )\n        const finalName = urlResolve(dir, name === `index` ? `` : name)\n\n        knownFunctions.push({\n          functionRoute: finalName,\n          pluginName: glob.pluginName,\n          originalAbsoluteFilePath,\n          originalRelativeFilePath,\n          relativeCompiledFilePath: compiledFunctionName,\n          absoluteCompiledFilePath: compiledPath,\n          matchPath: getMatchPath(finalName),\n        })\n      })\n\n      return knownFunctions\n    })\n  )\n\n  // Combine functions by the route name so that functions in the default\n  // functions directory can override the plugin's implementations.\n  // @ts-ignore - Seems like a TS bug: https://github.com/microsoft/TypeScript/issues/28010#issuecomment-713484584\n  const knownFunctions = _.unionBy(...allFunctions, func => func.functionRoute)\n\n  store.dispatch(internalActions.setFunctions(knownFunctions))\n\n  // Write out manifest for use by `gatsby serve` and plugins\n  fs.writeFileSync(\n    path.join(compiledFunctionsDir, `manifest.json`),\n    JSON.stringify(knownFunctions, null, 4)\n  )\n\n  // Load environment variables from process.env.* and .env.* files.\n  // Logic is shared with webpack.config.js\n\n  // node env should be DEVELOPMENT | PRODUCTION as these are commonly used in node land\n  const nodeEnv = process.env.NODE_ENV || `development`\n  // config env is dependent on the env that it's run, this can be anything from staging-production\n  // this allows you to set use different .env environments or conditions in gatsby files\n  const configEnv = process.env.GATSBY_ACTIVE_ENV || nodeEnv\n  const envFile = path.join(siteDirectoryPath, `./.env.${configEnv}`)\n  let parsed = {}\n  try {\n    parsed = dotenv.parse(fs.readFileSync(envFile, { encoding: `utf8` }))\n  } catch (err) {\n    if (err.code !== `ENOENT`) {\n      reporter.error(\n        `There was a problem processing the .env file (${envFile})`,\n        err\n      )\n    }\n  }\n\n  const envObject = Object.keys(parsed).reduce((acc, key) => {\n    acc[key] = JSON.stringify(parsed[key])\n    return acc\n  }, {} as Record<string, string>)\n\n  const varsFromProcessEnv = Object.keys(process.env).reduce((acc, key) => {\n    acc[key] = JSON.stringify(process.env[key])\n    return acc\n  }, {} as Record<string, string>)\n\n  // Don't allow overwriting of NODE_ENV, PUBLIC_DIR as to not break gatsby things\n  envObject.NODE_ENV = JSON.stringify(nodeEnv)\n  envObject.PUBLIC_DIR = JSON.stringify(`${siteDirectoryPath}/public`)\n\n  const mergedEnvVars = Object.assign(envObject, varsFromProcessEnv)\n\n  const processEnvVars = Object.keys(mergedEnvVars).reduce(\n    (acc, key) => {\n      acc[`process.env.${key}`] = mergedEnvVars[key]\n      return acc\n    },\n    {\n      \"process.env\": `({})`,\n    }\n  )\n\n  const entries = {}\n\n  const precompileDevFunctions =\n    isProductionEnv ||\n    process.env.GATSBY_PRECOMPILE_DEVELOP_FUNCTIONS === `true` ||\n    process.env.GATSBY_PRECOMPILE_DEVELOP_FUNCTIONS === `1`\n\n  const functionsList = precompileDevFunctions\n    ? knownFunctions\n    : activeDevelopmentFunctions\n\n  functionsList.forEach(functionObj => {\n    // Get path without the extension (as it could be ts or js)\n    const parsedFile = path.parse(functionObj.originalRelativeFilePath)\n    const compiledNameWithoutExtension = path.join(\n      parsedFile.dir,\n      parsedFile.name\n    )\n\n    entries[compiledNameWithoutExtension] = functionObj.originalAbsoluteFilePath\n  })\n\n  activeEntries = entries\n\n  const stage = isProductionEnv\n    ? `functions-production`\n    : `functions-development`\n\n  return {\n    entry: entries,\n    output: {\n      path: compiledFunctionsDir,\n      filename: `[name].js`,\n      libraryTarget: `commonjs2`,\n    },\n    target: `node`,\n\n    // Minification is expensive and not as helpful for serverless functions.\n    optimization: {\n      minimize: false,\n    },\n\n    // Resolve files ending with .ts and the default extensions of .js, .json, .wasm\n    resolve: {\n      extensions: [`.ts`, `...`],\n    },\n\n    // Have webpack save its cache to the .cache/webpack directory\n    cache: {\n      type: `filesystem`,\n      name: stage,\n      cacheLocation: path.join(\n        siteDirectoryPath,\n        `.cache`,\n        `webpack`,\n        `stage-` + stage\n      ),\n    },\n\n    mode: isProductionEnv ? `production` : `development`,\n    // watch: !isProductionEnv,\n    module: {\n      rules: [\n        // Webpack expects extensions when importing ESM modules as that's what the spec describes.\n        // Not all libraries have adapted so we don't enforce its behaviour\n        // @see https://github.com/webpack/webpack/issues/11467\n        {\n          test: /\\.mjs$/i,\n          resolve: {\n            byDependency: {\n              esm: {\n                fullySpecified: false,\n              },\n            },\n          },\n        },\n        {\n          test: /\\.js$/i,\n          descriptionData: {\n            type: `module`,\n          },\n          resolve: {\n            byDependency: {\n              esm: {\n                fullySpecified: false,\n              },\n            },\n          },\n          use: {\n            loader: `babel-loader`,\n            options: {\n              presets: [`@babel/typescript`],\n            },\n          },\n        },\n        {\n          test: [/.js$/, /.ts$/],\n          exclude: /node_modules/,\n          use: {\n            loader: `babel-loader`,\n            options: {\n              presets: [`@babel/typescript`],\n            },\n          },\n        },\n      ],\n    },\n    plugins: [\n      new webpack.DefinePlugin(processEnvVars),\n      new webpack.IgnorePlugin({\n        checkResource(resource): boolean {\n          if (resource === `lmdb`) {\n            reporter.warn(\n              `LMDB and other modules with native dependencies are not supported in Gatsby Functions.\\nIf you are importing utils from \\`gatsby-core-utils\\`, make sure to import from a specific module (for example \\`gatsby-core-utils/create-content-digest\\`).`\n            )\n            return true\n          }\n          return false\n        },\n      }),\n    ],\n  }\n}\n\nlet isFirstBuild = true\nexport async function onPreBootstrap({\n  reporter,\n  store,\n  parentSpan,\n}: ParentSpanPluginArgs): Promise<void> {\n  const activity = reporter.activityTimer(`Compiling Gatsby Functions`, {\n    parentSpan,\n  })\n  activity.start()\n\n  const {\n    program: { directory: siteDirectoryPath },\n  } = store.getState()\n\n  reporter.verbose(`Attaching functions to development server`)\n  const compiledFunctionsDir = path.join(\n    siteDirectoryPath,\n    `.cache`,\n    `functions`\n  )\n\n  await fs.ensureDir(compiledFunctionsDir)\n  await fs.emptyDir(compiledFunctionsDir)\n\n  try {\n    // We do this ungainly thing as we need to make accessible\n    // the resolve/reject functions to our shared callback function\n    // eslint-disable-next-line\n    await new Promise<any>(async (resolve, reject) => {\n      const config = await createWebpackConfig({\n        siteDirectoryPath,\n        store,\n        reporter,\n      })\n\n      function callback(err, stats?: webpack.Stats): void {\n        const rawMessages = stats?.toJson({\n          all: false,\n          warnings: true,\n          errors: true,\n        })\n        if (rawMessages?.warnings && rawMessages.warnings.length > 0) {\n          reportWebpackWarnings(rawMessages.warnings, reporter)\n        }\n\n        if (err) return reject(err)\n        const errors = stats?.compilation.errors || []\n\n        // If there's errors, reject in production and print to the console\n        // in development.\n        if (isProductionEnv) {\n          if (errors.length > 0) return reject(errors)\n        } else {\n          const formatted = formatWebpackMessages({\n            errors: rawMessages?.errors\n              ? rawMessages.errors.map(e => e.message)\n              : [],\n            warnings: [],\n          })\n          reporter.error(formatted.errors)\n        }\n\n        // Log success in dev\n        if (!isProductionEnv) {\n          if (isFirstBuild) {\n            isFirstBuild = false\n          } else {\n            reporter.success(`Re-building functions`)\n          }\n        }\n\n        return resolve(null)\n      }\n\n      if (isProductionEnv) {\n        webpack(config).run(callback)\n      } else {\n        // When in watch mode, you call things differently\n        let compiler = webpack(config).watch({}, callback)\n\n        const globs = createGlobArray(\n          siteDirectoryPath,\n          store.getState().flattenedPlugins\n        )\n\n        // Watch for env files to change and restart the webpack watcher.\n        chokidar\n          .watch(\n            [\n              `${siteDirectoryPath}/.env*`,\n              ...globs.map(glob => glob.globPattern),\n            ],\n            { ignoreInitial: true }\n          )\n          .on(`all`, async (event, path) => {\n            // Ignore change events from the API directory for functions we're\n            // already watching.\n            if (\n              event === `change` &&\n              Object.values(activeEntries).includes(path) &&\n              path.includes(`/src/api/`)\n            ) {\n              return\n            }\n\n            reporter.log(\n              `Restarting function watcher due to change to \"${path}\"`\n            )\n\n            // Otherwise, restart the watcher\n            compiler.close(async () => {\n              const config = await createWebpackConfig({\n                siteDirectoryPath,\n                store,\n                reporter,\n              })\n              compiler = webpack(config).watch({}, callback)\n            })\n          })\n      }\n    })\n  } catch (error) {\n    activity.panic({\n      id: `11332`,\n      error,\n      context: {},\n    })\n  }\n\n  activity.end()\n}\n\nexport async function onCreateDevServer({\n  reporter,\n  app,\n  store,\n}: CreateDevServerArgs): Promise<void> {\n  reporter.verbose(`Attaching functions to development server`)\n\n  const {\n    program: { directory: siteDirectoryPath },\n  } = store.getState()\n\n  const compiledFunctionsDir = path.join(\n    siteDirectoryPath,\n    `.cache`,\n    `functions`\n  )\n\n  app.use(\n    `/api/*`,\n    ...functionMiddlewares({\n      getFunctions(): Array<IGatsbyFunction> {\n        const { functions }: { functions: Array<IGatsbyFunction> } =\n          store.getState()\n        return functions\n      },\n      async prepareFn(functionObj: IGatsbyFunction): Promise<void> {\n        activeDevelopmentFunctions.add(functionObj)\n        await ensureFunctionIsCompiled(functionObj, compiledFunctionsDir)\n      },\n      showDebugMessageInResponse: true,\n    })\n  )\n}\n"],"mappings":"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"}