{"version":3,"file":"develop-process.js","names":["tracer","globalTracer","setTimeout","syncStaticDir","process","send","setInterval","type","onExit","SSGCount","DSGCount","SSRCount","page","store","getState","pages","values","mode","telemetry","trackCli","siteMeasurements","totalPagesCount","size","on","msg","action","exit","payload","openDebuggerPort","debugInfo","inspector","url","undefined","break","open","port","module","exports","program","global","__GATSBY","env","GATSBY_NODE_GLOBALS","JSON","parse","isTruthy","VERBOSE","verbose","reporter","setVerbose","userGetsSevenDayFeedback","showSevenDayFeedbackRequest","userPassesFeedbackRequestHeuristic","showFeedbackRequest","initTracer","GATSBY_OPEN_TRACING_CONFIG_FILE","openTracingConfigFile","markWebpackStatusAsPending","pendingActivity","id","startBackgroundUpdate","parseInt","detectPortInUseAndPrompt","e","message","app","express","parentSpan","startSpan","machine","developMachine","withContext","pendingQueryRuns","Set","shouldRunInitialTypegen","service","interpret","logTransitions","start"],"sources":["../../src/commands/develop-process.ts"],"sourcesContent":["import { syncStaticDir } from \"../utils/get-static-dir\"\nimport reporter from \"gatsby-cli/lib/reporter\"\nimport telemetry from \"gatsby-telemetry\"\nimport { isTruthy } from \"gatsby-core-utils\"\nimport express from \"express\"\nimport inspector from \"inspector\"\nimport { initTracer } from \"../utils/tracer\"\nimport { detectPortInUseAndPrompt } from \"../utils/detect-port-in-use-and-prompt\"\nimport onExit from \"signal-exit\"\nimport {\n  userGetsSevenDayFeedback,\n  userPassesFeedbackRequestHeuristic,\n  showFeedbackRequest,\n  showSevenDayFeedbackRequest,\n} from \"../utils/feedback\"\nimport { markWebpackStatusAsPending } from \"../utils/webpack-status\"\nimport { store } from \"../redux\"\n\nimport { IProgram, IDebugInfo } from \"./types\"\nimport { interpret } from \"xstate\"\nimport { globalTracer } from \"opentracing\"\nimport { developMachine } from \"../state-machines/develop\"\nimport { logTransitions } from \"../utils/state-machine-logging\"\n\nconst tracer = globalTracer()\n\n// const isInteractive = process.stdout.isTTY\n\n// Watch the static directory and copy files to public as they're added or\n// changed. Wait 10 seconds so copying doesn't interfere with the regular\n// bootstrap.\nsetTimeout(() => {\n  syncStaticDir()\n}, 10000)\n\n// Time for another story...\n// When the parent process is killed by SIGKILL, Node doesm't kill spawned child processes\n// Hence, we peiodically send a heart beat to the parent to check if it is still alive\n// This will crash with Error [ERR_IPC_CHANNEL_CLOSED]: Channel closed\n// and kill the orphaned child process as a result\nif (process.send) {\n  setInterval(() => {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    process.send!({\n      type: `HEARTBEAT`,\n    })\n  }, 1000)\n}\n\nonExit(() => {\n  let SSGCount = 0\n  let DSGCount = 0\n  let SSRCount = 0\n  for (const page of store.getState().pages.values()) {\n    if (page.mode === `SSR`) {\n      SSRCount++\n    } else if (page.mode === `DSG`) {\n      DSGCount++\n    } else {\n      SSGCount++\n    }\n  }\n\n  telemetry.trackCli(`DEVELOP_STOP`, {\n    siteMeasurements: {\n      totalPagesCount: store.getState().pages.size,\n      SSRCount,\n      DSGCount,\n      SSGCount,\n    },\n  })\n})\n\nprocess.on(\n  `message`,\n  (msg: {\n    type: string\n    action: { type: string; payload: number | undefined }\n  }) => {\n    if (msg.type === `COMMAND` && msg.action.type === `EXIT`) {\n      process.exit(msg.action.payload)\n    }\n  }\n)\n\ninterface IDevelopArgs extends IProgram {\n  debugInfo: IDebugInfo | null\n}\n\nconst openDebuggerPort = (debugInfo: IDebugInfo): void => {\n  if (inspector.url() !== undefined) {\n    return // fixes #26708\n  }\n\n  if (debugInfo.break) {\n    inspector.open(debugInfo.port, undefined, true)\n    // eslint-disable-next-line no-debugger\n    debugger\n  } else {\n    inspector.open(debugInfo.port)\n  }\n}\n\nmodule.exports = async (program: IDevelopArgs): Promise<void> => {\n  // provide global Gatsby object\n  global.__GATSBY = process.env.GATSBY_NODE_GLOBALS\n    ? JSON.parse(process.env.GATSBY_NODE_GLOBALS)\n    : {}\n\n  if (isTruthy(process.env.VERBOSE)) {\n    program.verbose = true\n  }\n  reporter.setVerbose(program.verbose)\n\n  if (program.debugInfo) {\n    openDebuggerPort(program.debugInfo)\n  }\n\n  // We want to prompt the feedback request when users quit develop\n  // assuming they pass the heuristic check to know they are a user\n  // we want to request feedback from, and we're not annoying them.\n  process.on(`SIGINT`, async (): Promise<void> => {\n    if (await userGetsSevenDayFeedback()) {\n      showSevenDayFeedbackRequest()\n    } else if (await userPassesFeedbackRequestHeuristic()) {\n      showFeedbackRequest()\n    }\n    process.exit(0)\n  })\n\n  await initTracer(\n    process.env.GATSBY_OPEN_TRACING_CONFIG_FILE || program.openTracingConfigFile\n  )\n  markWebpackStatusAsPending()\n  reporter.pendingActivity({ id: `webpack-develop` })\n  telemetry.trackCli(`DEVELOP_START`)\n  telemetry.startBackgroundUpdate()\n\n  const port =\n    typeof program.port === `string` ? parseInt(program.port, 10) : program.port\n\n  try {\n    program.port = await detectPortInUseAndPrompt(port)\n  } catch (e) {\n    if (e.message === `USER_REJECTED`) {\n      process.exit(0)\n    }\n\n    throw e\n  }\n\n  const app = express()\n  const parentSpan = tracer.startSpan(`bootstrap`)\n\n  const machine = developMachine.withContext({\n    program,\n    parentSpan,\n    app,\n    reporter,\n    pendingQueryRuns: new Set([`/`]),\n    shouldRunInitialTypegen: true,\n  })\n\n  const service = interpret(machine)\n\n  if (program.verbose) {\n    logTransitions(service)\n  }\n\n  service.start()\n}\n"],"mappings":";;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAMA;;AACA;;AAGA;;AACA;;AACA;;AACA;;AAEA,MAAMA,MAAM,GAAG,IAAAC,yBAAA,GAAf,C,CAEA;AAEA;AACA;AACA;;AACAC,UAAU,CAAC,MAAM;EACf,IAAAC,2BAAA;AACD,CAFS,EAEP,KAFO,CAAV,C,CAIA;AACA;AACA;AACA;AACA;;AACA,IAAIC,OAAO,CAACC,IAAZ,EAAkB;EAChBC,WAAW,CAAC,MAAM;IAChB;IACAF,OAAO,CAACC,IAAR,CAAc;MACZE,IAAI,EAAG;IADK,CAAd;EAGD,CALU,EAKR,IALQ,CAAX;AAMD;;AAED,IAAAC,mBAAA,EAAO,MAAM;EACX,IAAIC,QAAQ,GAAG,CAAf;EACA,IAAIC,QAAQ,GAAG,CAAf;EACA,IAAIC,QAAQ,GAAG,CAAf;;EACA,KAAK,MAAMC,IAAX,IAAmBC,YAAA,CAAMC,QAAN,GAAiBC,KAAjB,CAAuBC,MAAvB,EAAnB,EAAoD;IAClD,IAAIJ,IAAI,CAACK,IAAL,KAAe,KAAnB,EAAyB;MACvBN,QAAQ;IACT,CAFD,MAEO,IAAIC,IAAI,CAACK,IAAL,KAAe,KAAnB,EAAyB;MAC9BP,QAAQ;IACT,CAFM,MAEA;MACLD,QAAQ;IACT;EACF;;EAEDS,wBAAA,CAAUC,QAAV,CAAoB,cAApB,EAAmC;IACjCC,gBAAgB,EAAE;MAChBC,eAAe,EAAER,YAAA,CAAMC,QAAN,GAAiBC,KAAjB,CAAuBO,IADxB;MAEhBX,QAFgB;MAGhBD,QAHgB;MAIhBD;IAJgB;EADe,CAAnC;AAQD,CAtBD;AAwBAL,OAAO,CAACmB,EAAR,CACG,SADH,EAEGC,GAAD,IAGM;EACJ,IAAIA,GAAG,CAACjB,IAAJ,KAAc,SAAd,IAA0BiB,GAAG,CAACC,MAAJ,CAAWlB,IAAX,KAAqB,MAAnD,EAA0D;IACxDH,OAAO,CAACsB,IAAR,CAAaF,GAAG,CAACC,MAAJ,CAAWE,OAAxB;EACD;AACF,CATH;;AAgBA,MAAMC,gBAAgB,GAAIC,SAAD,IAAiC;EACxD,IAAIC,kBAAA,CAAUC,GAAV,OAAoBC,SAAxB,EAAmC;IACjC,OADiC,CAC1B;EACR;;EAED,IAAIH,SAAS,CAACI,KAAd,EAAqB;IACnBH,kBAAA,CAAUI,IAAV,CAAeL,SAAS,CAACM,IAAzB,EAA+BH,SAA/B,EAA0C,IAA1C,EADmB,CAEnB;;;IACA;EACD,CAJD,MAIO;IACLF,kBAAA,CAAUI,IAAV,CAAeL,SAAS,CAACM,IAAzB;EACD;AACF,CAZD;;AAcAC,MAAM,CAACC,OAAP,GAAiB,MAAOC,OAAP,IAAgD;EAC/D;EACAC,MAAM,CAACC,QAAP,GAAkBpC,OAAO,CAACqC,GAAR,CAAYC,mBAAZ,GACdC,IAAI,CAACC,KAAL,CAAWxC,OAAO,CAACqC,GAAR,CAAYC,mBAAvB,CADc,GAEd,EAFJ;;EAIA,IAAI,IAAAG,yBAAA,EAASzC,OAAO,CAACqC,GAAR,CAAYK,OAArB,CAAJ,EAAmC;IACjCR,OAAO,CAACS,OAAR,GAAkB,IAAlB;EACD;;EACDC,iBAAA,CAASC,UAAT,CAAoBX,OAAO,CAACS,OAA5B;;EAEA,IAAIT,OAAO,CAACT,SAAZ,EAAuB;IACrBD,gBAAgB,CAACU,OAAO,CAACT,SAAT,CAAhB;EACD,CAb8D,CAe/D;EACA;EACA;;;EACAzB,OAAO,CAACmB,EAAR,CAAY,QAAZ,EAAqB,YAA2B;IAC9C,IAAI,MAAM,IAAA2B,kCAAA,GAAV,EAAsC;MACpC,IAAAC,qCAAA;IACD,CAFD,MAEO,IAAI,MAAM,IAAAC,4CAAA,GAAV,EAAgD;MACrD,IAAAC,6BAAA;IACD;;IACDjD,OAAO,CAACsB,IAAR,CAAa,CAAb;EACD,CAPD;EASA,MAAM,IAAA4B,kBAAA,EACJlD,OAAO,CAACqC,GAAR,CAAYc,+BAAZ,IAA+CjB,OAAO,CAACkB,qBADnD,CAAN;EAGA,IAAAC,yCAAA;;EACAT,iBAAA,CAASU,eAAT,CAAyB;IAAEC,EAAE,EAAG;EAAP,CAAzB;;EACAzC,wBAAA,CAAUC,QAAV,CAAoB,eAApB;;EACAD,wBAAA,CAAU0C,qBAAV;;EAEA,MAAMzB,IAAI,GACR,OAAOG,OAAO,CAACH,IAAf,KAAyB,QAAzB,GAAmC0B,QAAQ,CAACvB,OAAO,CAACH,IAAT,EAAe,EAAf,CAA3C,GAAgEG,OAAO,CAACH,IAD1E;;EAGA,IAAI;IACFG,OAAO,CAACH,IAAR,GAAe,MAAM,IAAA2B,kDAAA,EAAyB3B,IAAzB,CAArB;EACD,CAFD,CAEE,OAAO4B,CAAP,EAAU;IACV,IAAIA,CAAC,CAACC,OAAF,KAAe,eAAnB,EAAmC;MACjC5D,OAAO,CAACsB,IAAR,CAAa,CAAb;IACD;;IAED,MAAMqC,CAAN;EACD;;EAED,MAAME,GAAG,GAAG,IAAAC,gBAAA,GAAZ;EACA,MAAMC,UAAU,GAAGnE,MAAM,CAACoE,SAAP,CAAkB,WAAlB,CAAnB;;EAEA,MAAMC,OAAO,GAAGC,uBAAA,CAAeC,WAAf,CAA2B;IACzCjC,OADyC;IAEzC6B,UAFyC;IAGzCF,GAHyC;IAIzCjB,QAAQ,EAARA,iBAJyC;IAKzCwB,gBAAgB,EAAE,IAAIC,GAAJ,CAAQ,CAAE,GAAF,CAAR,CALuB;IAMzCC,uBAAuB,EAAE;EANgB,CAA3B,CAAhB;;EASA,MAAMC,OAAO,GAAG,IAAAC,iBAAA,EAAUP,OAAV,CAAhB;;EAEA,IAAI/B,OAAO,CAACS,OAAZ,EAAqB;IACnB,IAAA8B,mCAAA,EAAeF,OAAf;EACD;;EAEDA,OAAO,CAACG,KAAR;AACD,CAnED"}