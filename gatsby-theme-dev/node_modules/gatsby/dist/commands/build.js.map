{"version":3,"file":"build.js","names":["module","exports","build","program","externalTelemetryAttributes","global","__GATSBY","buildId","uuid","v4","root","directory","isTruthy","process","env","VERBOSE","verbose","report","setVerbose","profile","warn","updateInternalSiteMetadata","name","sitePackageJson","sitePath","lastRun","Date","now","pid","markWebpackStatusAsPending","publicDir","path","join","initTracer","GATSBY_OPEN_TRACING_CONFIG_FILE","openTracingConfigFile","buildActivity","phantomActivity","start","telemetry","trackCli","signalExit","exitCode","buildSpan","span","setTag","Object","entries","forEach","key","value","gatsbyNodeGraphQLFunction","workerPool","bootstrap","parentSpan","apiRunnerNode","graphql","writeOutRequires","store","closeJavascriptBundleCompilation","closeHTMLBundleCompilation","webpackAssets","webpackCompilationHash","webpackSSRCompilationHash","engineBundlingPromises","buildActivityTimer","activityTimer","stats","close","buildProductionBundle","hasWarnings","rawMessages","toJson","all","warnings","reportWebpackWarnings","assets","cachedAssets","hash","err","panic","structureWebpackErrors","Stage","BuildJavascript","end","shouldGenerateEngines","state","getState","push","createGraphqlEngineBundle","createPageSSRBundle","rootDir","components","staticQueriesByTemplate","reporter","isVerbose","Promise","buildSSRBundleActivityProgress","buildRenderer","BuildHTML","pageConfigActivity","preparePageTemplateConfigs","validateEnginesActivity","validateEngines","error","id","context","cacheActivity","graphqlRunner","GraphQLRunner","collectStats","graphqlTracing","queryIds","calculateDirtyQueries","pageQueryIds","filter","query","getPageMode","waitMaterializePageMode","materializePageMode","waitForWorkerPoolRestart","resolve","GATSBY_EXPERIMENTAL_PARALLEL_QUERY_RUNNING","runQueriesInWorkersQueue","waitUntilAllJobsComplete","waitUntilWorkerJobsAreComplete","restart","mergeWorkerState","runStaticQueries","runPageQueries","writeQueryContext","send","type","action","timestamp","toJSON","copyStaticDirs","appDataUtil","exists","dispatch","payload","rewriteActivityTimer","write","html","ssrCompilationHash","flushPendingPageDataWrites","markWebpackStatusAsDone","isTrackingEnabled","bundleSizes","asset","endsWith","map","size","pageDataSizes","pageDataStats","values","addSiteMeasurement","bundleStats","aggregateStats","queryStats","getStats","actions","setProgramStatus","db","saveState","keepPageRenderer","toRegenerate","toDelete","buildHTMLPagesAndDeleteStaleArtifacts","waitWorkerPoolEnd","SSGCount","DSGCount","SSRCount","page","pages","mode","pagesCount","length","totalPagesCount","postBuildActivityTimer","e","message","_renderPageTree","functions","gatsbyCloudConfig","constructConfigObject","config","info","uptime","stopTracer","logPages","writeToFile","createdFilesPath","createdFilesContent","deletedFilesPath","deletedFilesContent","fs","writeFile","showExperimentNotices","userGetsSevenDayFeedback","showSevenDayFeedbackRequest","userPassesFeedbackRequestHeuristic","showFeedbackRequest"],"sources":["../../src/commands/build.ts"],"sourcesContent":["import path from \"path\"\nimport report from \"gatsby-cli/lib/reporter\"\nimport signalExit from \"signal-exit\"\nimport fs from \"fs-extra\"\nimport telemetry from \"gatsby-telemetry\"\nimport { updateInternalSiteMetadata, isTruthy, uuid } from \"gatsby-core-utils\"\nimport {\n  buildRenderer,\n  buildHTMLPagesAndDeleteStaleArtifacts,\n  IBuildArgs,\n} from \"./build-html\"\nimport { buildProductionBundle } from \"./build-javascript\"\nimport { bootstrap } from \"../bootstrap\"\nimport apiRunnerNode from \"../utils/api-runner-node\"\nimport { GraphQLRunner } from \"../query/graphql-runner\"\nimport { copyStaticDirs } from \"../utils/get-static-dir\"\nimport { initTracer, stopTracer } from \"../utils/tracer\"\nimport * as db from \"../redux/save-state\"\nimport { store } from \"../redux\"\nimport * as appDataUtil from \"../utils/app-data\"\nimport { flush as flushPendingPageDataWrites } from \"../utils/page-data\"\nimport {\n  structureWebpackErrors,\n  reportWebpackWarnings,\n} from \"../utils/webpack-error-utils\"\nimport {\n  userGetsSevenDayFeedback,\n  userPassesFeedbackRequestHeuristic,\n  showFeedbackRequest,\n  showSevenDayFeedbackRequest,\n} from \"../utils/feedback\"\nimport { actions } from \"../redux/actions\"\nimport { waitUntilAllJobsComplete } from \"../utils/wait-until-jobs-complete\"\nimport { Stage } from \"./types\"\nimport {\n  calculateDirtyQueries,\n  runStaticQueries,\n  runPageQueries,\n  writeOutRequires,\n} from \"../services\"\nimport {\n  markWebpackStatusAsPending,\n  markWebpackStatusAsDone,\n} from \"../utils/webpack-status\"\nimport { showExperimentNotices } from \"../utils/show-experiment-notice\"\nimport {\n  mergeWorkerState,\n  runQueriesInWorkersQueue,\n} from \"../utils/worker/pool\"\nimport { createGraphqlEngineBundle } from \"../schema/graphql-engine/bundle-webpack\"\nimport {\n  createPageSSRBundle,\n  writeQueryContext,\n} from \"../utils/page-ssr-module/bundle-webpack\"\nimport { shouldGenerateEngines } from \"../utils/engines-helpers\"\nimport reporter from \"gatsby-cli/lib/reporter\"\nimport type webpack from \"webpack\"\nimport {\n  materializePageMode,\n  getPageMode,\n  preparePageTemplateConfigs,\n} from \"../utils/page-mode\"\nimport { validateEngines } from \"../utils/validate-engines\"\nimport { constructConfigObject } from \"../utils/gatsby-cloud-config\"\nimport { waitUntilWorkerJobsAreComplete } from \"../utils/jobs/worker-messaging\"\n\nmodule.exports = async function build(\n  program: IBuildArgs,\n  // Let external systems running Gatsby to inject attributes\n  externalTelemetryAttributes: Record<string, any>\n): Promise<void> {\n  // global gatsby object to use without store\n  global.__GATSBY = {\n    buildId: uuid.v4(),\n    root: program!.directory,\n  }\n\n  if (isTruthy(process.env.VERBOSE)) {\n    program.verbose = true\n  }\n  report.setVerbose(program.verbose)\n\n  if (program.profile) {\n    report.warn(\n      `React Profiling is enabled. This can have a performance impact. See https://www.gatsbyjs.com/docs/profiling-site-performance-with-react-profiler/#performance-impact`\n    )\n  }\n\n  await updateInternalSiteMetadata({\n    name: program.sitePackageJson.name,\n    sitePath: program.directory,\n    lastRun: Date.now(),\n    pid: process.pid,\n  })\n\n  markWebpackStatusAsPending()\n\n  const publicDir = path.join(program.directory, `public`)\n  if (!externalTelemetryAttributes) {\n    await initTracer(\n      process.env.GATSBY_OPEN_TRACING_CONFIG_FILE ||\n        program.openTracingConfigFile\n    )\n  }\n\n  const buildActivity = report.phantomActivity(`build`)\n  buildActivity.start()\n\n  telemetry.trackCli(`BUILD_START`)\n  signalExit(exitCode => {\n    telemetry.trackCli(`BUILD_END`, {\n      exitCode: exitCode as number | undefined,\n    })\n  })\n\n  const buildSpan = buildActivity.span\n  buildSpan.setTag(`directory`, program.directory)\n\n  // Add external tags to buildSpan\n  if (externalTelemetryAttributes) {\n    Object.entries(externalTelemetryAttributes).forEach(([key, value]) => {\n      buildActivity.span.setTag(key, value)\n    })\n  }\n\n  const { gatsbyNodeGraphQLFunction, workerPool } = await bootstrap({\n    program,\n    parentSpan: buildSpan,\n  })\n\n  await apiRunnerNode(`onPreBuild`, {\n    graphql: gatsbyNodeGraphQLFunction,\n    parentSpan: buildSpan,\n  })\n\n  // writes sync and async require files to disk\n  // used inside routing \"html\" + \"javascript\"\n  await writeOutRequires({\n    store,\n    parentSpan: buildSpan,\n  })\n\n  let closeJavascriptBundleCompilation: (() => Promise<void>) | undefined\n  let closeHTMLBundleCompilation: (() => Promise<void>) | undefined\n  let webpackAssets: Array<webpack.StatsAsset> | null = null\n  let webpackCompilationHash: string | null = null\n  let webpackSSRCompilationHash: string | null = null\n\n  const engineBundlingPromises: Array<Promise<any>> = []\n  const buildActivityTimer = report.activityTimer(\n    `Building production JavaScript and CSS bundles`,\n    { parentSpan: buildSpan }\n  )\n  buildActivityTimer.start()\n\n  try {\n    const { stats, close } = await buildProductionBundle(\n      program,\n      buildActivityTimer.span\n    )\n    closeJavascriptBundleCompilation = close\n\n    if (stats.hasWarnings()) {\n      const rawMessages = stats.toJson({ all: false, warnings: true })\n      reportWebpackWarnings(rawMessages.warnings, report)\n    }\n\n    webpackAssets = stats.toJson({\n      all: false,\n      assets: true,\n      cachedAssets: true,\n    }).assets as Array<webpack.StatsAsset>\n    webpackCompilationHash = stats.hash as string\n  } catch (err) {\n    buildActivityTimer.panic(structureWebpackErrors(Stage.BuildJavascript, err))\n  } finally {\n    buildActivityTimer.end()\n  }\n\n  if (_CFLAGS_.GATSBY_MAJOR === `4` && shouldGenerateEngines()) {\n    const state = store.getState()\n    const buildActivityTimer = report.activityTimer(\n      `Building Rendering Engines`,\n      { parentSpan: buildSpan }\n    )\n    try {\n      buildActivityTimer.start()\n      // bundle graphql-engine\n      engineBundlingPromises.push(\n        createGraphqlEngineBundle(program.directory, report, program.verbose)\n      )\n\n      engineBundlingPromises.push(\n        createPageSSRBundle({\n          rootDir: program.directory,\n          components: state.components,\n          staticQueriesByTemplate: state.staticQueriesByTemplate,\n          webpackCompilationHash: webpackCompilationHash as string, // we set webpackCompilationHash above\n          reporter: report,\n          isVerbose: program.verbose,\n        })\n      )\n      await Promise.all(engineBundlingPromises)\n    } catch (err) {\n      reporter.panic(err)\n    } finally {\n      buildActivityTimer.end()\n    }\n  }\n\n  const buildSSRBundleActivityProgress = report.activityTimer(\n    `Building HTML renderer`,\n    { parentSpan: buildSpan }\n  )\n  buildSSRBundleActivityProgress.start()\n  try {\n    const { close, stats } = await buildRenderer(\n      program,\n      Stage.BuildHTML,\n      buildSSRBundleActivityProgress.span\n    )\n\n    closeHTMLBundleCompilation = close\n    webpackSSRCompilationHash = stats.hash as string\n\n    await close()\n  } catch (err) {\n    buildActivityTimer.panic(structureWebpackErrors(Stage.BuildHTML, err))\n  } finally {\n    buildSSRBundleActivityProgress.end()\n  }\n\n  // exec outer config function for each template\n  const pageConfigActivity = report.activityTimer(`Execute page configs`, {\n    parentSpan: buildSpan,\n  })\n  pageConfigActivity.start()\n  try {\n    await preparePageTemplateConfigs(gatsbyNodeGraphQLFunction)\n  } catch (err) {\n    reporter.panic(err)\n  } finally {\n    pageConfigActivity.end()\n  }\n\n  if (_CFLAGS_.GATSBY_MAJOR === `4` && shouldGenerateEngines()) {\n    const validateEnginesActivity = report.activityTimer(\n      `Validating Rendering Engines`,\n      {\n        parentSpan: buildSpan,\n      }\n    )\n    validateEnginesActivity.start()\n    try {\n      await validateEngines(store.getState().program.directory)\n    } catch (error) {\n      validateEnginesActivity.panic({ id: `98001`, context: {}, error })\n    } finally {\n      validateEnginesActivity.end()\n    }\n  }\n\n  const cacheActivity = report.activityTimer(`Caching Webpack compilations`, {\n    parentSpan: buildSpan,\n  })\n  try {\n    cacheActivity.start()\n    await Promise.all([\n      closeJavascriptBundleCompilation?.(),\n      closeHTMLBundleCompilation?.(),\n    ])\n  } finally {\n    cacheActivity.end()\n  }\n\n  const graphqlRunner = new GraphQLRunner(store, {\n    collectStats: true,\n    graphqlTracing: program.graphqlTracing,\n  })\n\n  const { queryIds } = await calculateDirtyQueries({ store })\n\n  // Only run queries with mode SSG\n  if (_CFLAGS_.GATSBY_MAJOR === `4`) {\n    queryIds.pageQueryIds = queryIds.pageQueryIds.filter(\n      query => getPageMode(query) === `SSG`\n    )\n  }\n\n  // Start saving page.mode in the main process (while queries run in workers in parallel)\n  const waitMaterializePageMode = materializePageMode()\n\n  let waitForWorkerPoolRestart = Promise.resolve()\n  if (process.env.GATSBY_EXPERIMENTAL_PARALLEL_QUERY_RUNNING) {\n    await runQueriesInWorkersQueue(workerPool, queryIds, {\n      parentSpan: buildSpan,\n    })\n    // Jobs still might be running even though query running finished\n    await Promise.all([\n      waitUntilAllJobsComplete(),\n      waitUntilWorkerJobsAreComplete(),\n    ])\n    // Restart worker pool before merging state to lower memory pressure while merging state\n    waitForWorkerPoolRestart = workerPool.restart()\n    await mergeWorkerState(workerPool, buildSpan)\n  } else {\n    await runStaticQueries({\n      queryIds,\n      parentSpan: buildSpan,\n      store,\n      graphqlRunner,\n    })\n\n    await runPageQueries({\n      queryIds,\n      graphqlRunner,\n      parentSpan: buildSpan,\n      store,\n    })\n  }\n\n  // create scope so we don't leak state object\n  {\n    const state = store.getState()\n    await writeQueryContext({\n      staticQueriesByTemplate: state.staticQueriesByTemplate,\n      components: state.components,\n    })\n  }\n\n  if (process.send && shouldGenerateEngines()) {\n    await waitMaterializePageMode\n    process.send({\n      type: `LOG_ACTION`,\n      action: {\n        type: `ENGINES_READY`,\n        timestamp: new Date().toJSON(),\n      },\n    })\n  }\n\n  // Copy files from the static directory to\n  // an equivalent static directory within public.\n  copyStaticDirs()\n\n  // create scope so we don't leak state object\n  {\n    const state = store.getState()\n    if (\n      webpackCompilationHash !== state.webpackCompilationHash ||\n      !appDataUtil.exists(publicDir)\n    ) {\n      store.dispatch({\n        type: `SET_WEBPACK_COMPILATION_HASH`,\n        payload: webpackCompilationHash,\n      })\n\n      const rewriteActivityTimer = report.activityTimer(\n        `Rewriting compilation hashes`,\n        {\n          parentSpan: buildSpan,\n        }\n      )\n      rewriteActivityTimer.start()\n\n      await appDataUtil.write(publicDir, webpackCompilationHash as string)\n\n      rewriteActivityTimer.end()\n    }\n\n    if (state.html.ssrCompilationHash !== webpackSSRCompilationHash) {\n      store.dispatch({\n        type: `SET_SSR_WEBPACK_COMPILATION_HASH`,\n        payload: webpackSSRCompilationHash,\n      })\n    }\n  }\n\n  await flushPendingPageDataWrites(buildSpan)\n  markWebpackStatusAsDone()\n\n  if (telemetry.isTrackingEnabled()) {\n    // transform asset size to kB (from bytes) to fit 64 bit to numbers\n    const bundleSizes = (webpackAssets as Array<webpack.StatsAsset>)\n      .filter(asset => asset.name.endsWith(`.js`))\n      .map(asset => asset.size / 1000)\n    const pageDataSizes = [...store.getState().pageDataStats.values()]\n\n    telemetry.addSiteMeasurement(`BUILD_END`, {\n      bundleStats: telemetry.aggregateStats(bundleSizes),\n      pageDataStats: telemetry.aggregateStats(pageDataSizes),\n      queryStats: graphqlRunner.getStats(),\n    })\n  }\n\n  store.dispatch(actions.setProgramStatus(`BOOTSTRAP_QUERY_RUNNING_FINISHED`))\n\n  await db.saveState()\n\n  await waitUntilAllJobsComplete()\n\n  // we need to save it again to make sure our latest state has been saved\n  await db.saveState()\n\n  if (_CFLAGS_.GATSBY_MAJOR === `4` && shouldGenerateEngines()) {\n    // well, tbf we should just generate this in `.cache` and avoid deleting it :shrug:\n    program.keepPageRenderer = true\n  }\n\n  await waitForWorkerPoolRestart\n\n  const { toRegenerate, toDelete } =\n    await buildHTMLPagesAndDeleteStaleArtifacts({\n      program,\n      workerPool,\n      parentSpan: buildSpan,\n    })\n\n  await waitMaterializePageMode\n  const waitWorkerPoolEnd = Promise.all(workerPool.end())\n\n  {\n    let SSGCount = 0\n    let DSGCount = 0\n    let SSRCount = 0\n    for (const page of store.getState().pages.values()) {\n      if (page.mode === `SSR`) {\n        SSRCount++\n      } else if (page.mode === `DSG`) {\n        DSGCount++\n      } else {\n        SSGCount++\n      }\n    }\n\n    telemetry.addSiteMeasurement(`BUILD_END`, {\n      pagesCount: toRegenerate.length, // number of html files that will be written\n      totalPagesCount: store.getState().pages.size, // total number of pages\n      SSRCount,\n      DSGCount,\n      SSGCount,\n    })\n  }\n\n  const postBuildActivityTimer = report.activityTimer(`onPostBuild`, {\n    parentSpan: buildSpan,\n  })\n  postBuildActivityTimer.start()\n  await apiRunnerNode(`onPostBuild`, {\n    graphql: gatsbyNodeGraphQLFunction,\n    parentSpan: postBuildActivityTimer.span,\n  })\n  postBuildActivityTimer.end()\n\n  // Wait for any jobs that were started in onPostBuild\n  // This could occur due to queries being run which invoke sharp for instance\n  await waitUntilAllJobsComplete()\n\n  try {\n    await waitWorkerPoolEnd\n  } catch (e) {\n    report.warn(`Error when closing WorkerPool: ${e.message}`)\n  }\n\n  // Make sure we saved the latest state so we have all jobs cached\n  await db.saveState()\n\n  const state = store.getState()\n  reporter._renderPageTree({\n    components: state.components,\n    functions: state.functions,\n    pages: state.pages,\n    root: state.program.directory,\n  })\n\n  if (process.send) {\n    const gatsbyCloudConfig = constructConfigObject(state.config)\n\n    process.send({\n      type: `LOG_ACTION`,\n      action: {\n        type: `GATSBY_CONFIG_KEYS`,\n        payload: gatsbyCloudConfig,\n        timestamp: new Date().toJSON(),\n      },\n    })\n  }\n\n  report.info(`Done building in ${process.uptime()} sec`)\n\n  buildActivity.end()\n  if (!externalTelemetryAttributes) {\n    await stopTracer()\n  }\n\n  if (program.logPages) {\n    if (toRegenerate.length) {\n      report.info(\n        `Built pages:\\n${toRegenerate\n          .map(path => `Updated page: ${path}`)\n          .join(`\\n`)}`\n      )\n    }\n\n    if (toDelete.length) {\n      report.info(\n        `Deleted pages:\\n${toDelete\n          .map(path => `Deleted page: ${path}`)\n          .join(`\\n`)}`\n      )\n    }\n  }\n\n  if (program.writeToFile) {\n    const createdFilesPath = path.resolve(\n      `${program.directory}/.cache`,\n      `newPages.txt`\n    )\n    const createdFilesContent = toRegenerate.length\n      ? `${toRegenerate.join(`\\n`)}\\n`\n      : ``\n\n    const deletedFilesPath = path.resolve(\n      `${program.directory}/.cache`,\n      `deletedPages.txt`\n    )\n    const deletedFilesContent = toDelete.length\n      ? `${toDelete.join(`\\n`)}\\n`\n      : ``\n\n    await fs.writeFile(createdFilesPath, createdFilesContent, `utf8`)\n    report.info(`.cache/newPages.txt created`)\n\n    await fs.writeFile(deletedFilesPath, deletedFilesContent, `utf8`)\n    report.info(`.cache/deletedPages.txt created`)\n  }\n\n  showExperimentNotices()\n\n  if (await userGetsSevenDayFeedback()) {\n    showSevenDayFeedbackRequest()\n  } else if (await userPassesFeedbackRequestHeuristic()) {\n    showFeedbackRequest()\n  }\n}\n"],"mappings":"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"}