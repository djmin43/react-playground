{"version":3,"file":"client-assets-for-template.js","names":["join","path","posix","inlineCssPromiseCache","Map","readWebpackStats","publicDir","filePath","rawPageData","fs","readFile","JSON","parse","getScriptsAndStylesForTemplate","componentChunkName","webpackStats","uniqScripts","uniqStyles","handleAsset","name","rel","shouldGenerateLink","uniqueAssetsMap","endsWith","existingAsset","get","set","chunkName","assets","assetsByChunkName","filter","asset","childAssets","childAssetsByChunkName","Object","entries","scripts","scriptAsset","values","unshift","push","styles","styleAsset","getInlineCssPromise","process","cwd","content","reversedStyles","slice","reverse","reversedScripts","clearCache"],"sources":["../../src/utils/client-assets-for-template.ts"],"sourcesContent":["import * as path from \"path\"\nimport * as fs from \"fs-extra\"\n\n// we want to force posix-style joins, so Windows doesn't produce backslashes for urls\nconst { join } = path.posix\n\nexport interface IScriptsAndStyles {\n  scripts: Array<any>\n  styles: Array<any>\n  reversedStyles: Array<any>\n  reversedScripts: Array<any>\n}\n\ninterface IChunk {\n  name: string\n  rel: string\n  content?: string\n  shouldGenerateLink?: boolean\n}\n\nconst inlineCssPromiseCache = new Map<string, Promise<string>>()\n\nexport async function readWebpackStats(publicDir: string): Promise<any> {\n  const filePath = join(publicDir, `webpack.stats.json`)\n  const rawPageData = await fs.readFile(filePath, `utf-8`)\n\n  return JSON.parse(rawPageData)\n}\n\nexport async function getScriptsAndStylesForTemplate(\n  componentChunkName,\n  webpackStats\n): Promise<IScriptsAndStyles> {\n  const uniqScripts = new Map<string, IChunk>()\n  const uniqStyles = new Map<string, IChunk>()\n\n  /**\n   * Add script or style to correct bucket. Make sure those are unique (no duplicates) and that \"preload\" will win over any other \"rel\"\n   */\n  function handleAsset(\n    name: string,\n    rel: string,\n    shouldGenerateLink: boolean = false\n  ): void {\n    let uniqueAssetsMap: Map<string, IChunk> | undefined\n\n    // pick correct map depending on asset type\n    if (name.endsWith(`.js`)) {\n      uniqueAssetsMap = uniqScripts\n    } else if (name.endsWith(`.css`)) {\n      uniqueAssetsMap = uniqStyles\n    }\n\n    if (uniqueAssetsMap) {\n      const existingAsset = uniqueAssetsMap.get(name)\n\n      if (\n        existingAsset &&\n        rel === `preload` &&\n        existingAsset.rel !== `preload`\n      ) {\n        // if we already track this asset, but it's not preload - make sure we make it preload\n        // as it has higher priority\n        existingAsset.rel = `preload`\n      } else if (!existingAsset) {\n        uniqueAssetsMap.set(name, { name, rel, shouldGenerateLink })\n      }\n    }\n  }\n\n  // Pick up scripts and styles that are used by a template using webpack.stats.json\n  for (const chunkName of [`app`, componentChunkName]) {\n    let assets = webpackStats.assetsByChunkName[chunkName]\n\n    if (!assets) {\n      continue\n    }\n\n    // Remove JS asset for templates\n    if (chunkName !== `app`) {\n      assets = assets.filter(asset => !asset.endsWith(`.js`))\n    }\n\n    for (const asset of assets) {\n      if (asset === `/`) {\n        continue\n      }\n\n      handleAsset(asset, `preload`)\n    }\n\n    // Handling for webpack magic comments, for example:\n    // import(/* webpackChunkName: \"<chunk_name>\", webpackPrefetch: true */ `<path_to_module>`)\n    // Shape of webpackStats.childAssetsByChunkName:\n    // {\n    //   childAssetsByChunkName: {\n    //     <name_of_top_level_chunk>: {\n    //       prefetch: [\n    //         \"<chunk_name>-<chunk_hash>.js\",\n    //       ]\n    //     }\n    //   }\n    // }\n\n    const childAssets = webpackStats.childAssetsByChunkName[chunkName]\n    if (!childAssets) {\n      continue\n    }\n\n    for (let [rel, assets] of Object.entries(childAssets)) {\n      // Remove JS asset for templates(magic comments)\n      if (chunkName !== `app`) {\n        // @ts-ignore TS doesn't like that assets is not typed and especially that it doesn't know that it's Iterable\n        assets = assets.filter(asset => !asset.endsWith(`.js`))\n      }\n\n      // @ts-ignore TS doesn't like that assets is not typed and especially that it doesn't know that it's Iterable\n      for (const asset of assets) {\n        // Use shouldGenerateLink to determines if  we should append link for magic comment asset(preload|prefetch) to head\n        const shouldGenerateLink = chunkName == `app` ? true : false\n        handleAsset(asset, rel, shouldGenerateLink)\n      }\n    }\n  }\n\n  // create scripts array, making sure \"preload\" scripts have priority\n  const scripts: Array<IChunk> = []\n  for (const scriptAsset of uniqScripts.values()) {\n    if (scriptAsset.rel === `preload`) {\n      // give priority to preload\n      scripts.unshift(scriptAsset)\n    } else {\n      scripts.push(scriptAsset)\n    }\n  }\n\n  // create styles array, making sure \"preload\" styles have priority and that we read .css content for non-prefetch \"rel\"s for inlining\n  const styles: Array<IChunk> = []\n  for (const styleAsset of uniqStyles.values()) {\n    if (styleAsset.rel !== `prefetch`) {\n      let getInlineCssPromise = inlineCssPromiseCache.get(styleAsset.name)\n      if (!getInlineCssPromise) {\n        getInlineCssPromise = fs.readFile(\n          join(process.cwd(), `public`, styleAsset.name),\n          `utf-8`\n        )\n\n        inlineCssPromiseCache.set(\n          styleAsset.name,\n          getInlineCssPromise as Promise<string>\n        )\n      }\n\n      styleAsset.content = await getInlineCssPromise\n    }\n\n    if (styleAsset.rel === `preload`) {\n      // give priority to preload\n      styles.unshift(styleAsset)\n    } else {\n      styles.push(styleAsset)\n    }\n  }\n\n  return {\n    scripts,\n    styles,\n    reversedStyles: styles.slice(0).reverse(),\n    reversedScripts: scripts.slice(0).reverse(),\n  }\n}\n\nexport function clearCache(): void {}\n"],"mappings":"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"}