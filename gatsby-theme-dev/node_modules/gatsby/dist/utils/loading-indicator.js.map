{"version":3,"file":"loading-indicator.js","names":["indicatorEnabled","undefined","writeVirtualLoadingIndicatorModule","process","env","GATSBY_EXPERIMENTAL_QUERY_ON_DEMAND","GATSBY_QUERY_ON_DEMAND_LOADING_INDICATOR","writeModule","JSON","stringify","routeLoadingIndicatorRequests","app","get","req","res","params","method","status","send"],"sources":["../../src/utils/loading-indicator.ts"],"sourcesContent":["import { Express } from \"express\"\nimport { writeModule } from \"./gatsby-webpack-virtual-modules\"\n\n// set value to undefined first, because env vars needed to determine if indicator\n// should ever be enabled by default might not be set yet - we set it to \"initial\"\n// first time we write out module if loading indicator is allowed\n// \"initial\" means that browser will decide if it should show it\n// for now we do disable it by default when running in cypress\n// to not cause problems for users when they iterate on their E2E tests\n// this check could be expanded in the future to add support for more scenarios\n// like that.\nlet indicatorEnabled: \"auto\" | true | false | undefined = undefined\n\nexport function writeVirtualLoadingIndicatorModule(): void {\n  if (indicatorEnabled === undefined) {\n    indicatorEnabled =\n      process.env.GATSBY_EXPERIMENTAL_QUERY_ON_DEMAND &&\n      process.env.GATSBY_QUERY_ON_DEMAND_LOADING_INDICATOR === `true`\n        ? `auto`\n        : false\n  }\n\n  writeModule(\n    `$virtual/loading-indicator.js`,\n    `\n    export function isLoadingIndicatorEnabled() {\n    return ${\n      indicatorEnabled === `auto`\n        ? `\\`Cypress\\` in window\n          ? false\n          : true`\n        : JSON.stringify(indicatorEnabled)\n    }\n  }`\n  )\n}\n\nexport function routeLoadingIndicatorRequests(app: Express): void {\n  app.get(`/___loading-indicator/:method?`, (req, res) => {\n    if (req.params.method === `enable` && indicatorEnabled !== true) {\n      indicatorEnabled = true\n      writeVirtualLoadingIndicatorModule()\n    } else if (req.params.method === `disable` && indicatorEnabled !== false) {\n      indicatorEnabled = false\n      writeVirtualLoadingIndicatorModule()\n    } else if (req.params.method === `auto` && indicatorEnabled !== `auto`) {\n      indicatorEnabled = `auto`\n      writeVirtualLoadingIndicatorModule()\n    }\n\n    res.status(200).send({\n      status:\n        indicatorEnabled === `auto`\n          ? `auto`\n          : indicatorEnabled\n          ? `enabled`\n          : `disabled`,\n    })\n  })\n}\n"],"mappings":";;;;;;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,gBAAmD,GAAGC,SAA1D;;AAEO,SAASC,kCAAT,GAAoD;EACzD,IAAIF,gBAAgB,KAAKC,SAAzB,EAAoC;IAClCD,gBAAgB,GACdG,OAAO,CAACC,GAAR,CAAYC,mCAAZ,IACAF,OAAO,CAACC,GAAR,CAAYE,wCAAZ,KAA0D,MAD1D,GAEK,MAFL,GAGI,KAJN;EAKD;;EAED,IAAAC,wCAAA,EACG,+BADH,EAEG;AACL;AACA,aACMP,gBAAgB,KAAM,MAAtB,GACK;AACX;AACA,iBAHM,GAIIQ,IAAI,CAACC,SAAL,CAAeT,gBAAf,CACL;AACL,IAXE;AAaD;;AAEM,SAASU,6BAAT,CAAuCC,GAAvC,EAA2D;EAChEA,GAAG,CAACC,GAAJ,CAAS,gCAAT,EAA0C,CAACC,GAAD,EAAMC,GAAN,KAAc;IACtD,IAAID,GAAG,CAACE,MAAJ,CAAWC,MAAX,KAAuB,QAAvB,IAAkChB,gBAAgB,KAAK,IAA3D,EAAiE;MAC/DA,gBAAgB,GAAG,IAAnB;MACAE,kCAAkC;IACnC,CAHD,MAGO,IAAIW,GAAG,CAACE,MAAJ,CAAWC,MAAX,KAAuB,SAAvB,IAAmChB,gBAAgB,KAAK,KAA5D,EAAmE;MACxEA,gBAAgB,GAAG,KAAnB;MACAE,kCAAkC;IACnC,CAHM,MAGA,IAAIW,GAAG,CAACE,MAAJ,CAAWC,MAAX,KAAuB,MAAvB,IAAgChB,gBAAgB,KAAM,MAA1D,EAAiE;MACtEA,gBAAgB,GAAI,MAApB;MACAE,kCAAkC;IACnC;;IAEDY,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;MACnBD,MAAM,EACJjB,gBAAgB,KAAM,MAAtB,GACK,MADL,GAEIA,gBAAgB,GACf,SADe,GAEf;IANY,CAArB;EAQD,CApBD;AAqBD"}