{"version":3,"file":"parse-error.js","names":["sysPath","require","fs","slash","getPosition","stackObject","filename","line","column","stackLine","splitLine","match","Number","err","parseError","directory","componentPath","htmlComponentRendererPath","createErrorFromString","stack","split","position","join","sep","slice","startsWith","sourceContent","readFileSync","e","trueFileName","includes","relative","message"],"sources":["../../../src/utils/dev-ssr/parse-error.ts"],"sourcesContent":["import { createErrorFromString } from \"gatsby-cli/lib/reporter/errors\"\n\nconst sysPath = require(`path`)\nconst fs = require(`fs-extra`)\nconst { slash } = require(`gatsby-core-utils`)\n\nconst getPosition = function (stackObject: Array<string>): {\n  filename: string\n  line: number\n  column: number\n} {\n  let filename = ``\n  let line = 0\n  let column = 0\n  // Because the JavaScript error stack has not yet been standardized,\n  // wrap the stack parsing in a try/catch for a soft fail if an\n  // unexpected stack is encountered.\n  try {\n    for (const stackLine of stackObject) {\n      {\n        // testing for following format:\n        // \"    at Component (/Users/misiek/dev/gatsby/integration-tests/ssr/.cache/page-ssr/routes/render-page.js:4088:13)\"\n        const splitLine = stackLine.match(/(?:\\()(.+):([0-9]+):([0-9]+)(?:\\))$/)\n        if (splitLine) {\n          filename = splitLine[1]\n          line = Number(splitLine[2])\n          column = Number(splitLine[3])\n          break\n        }\n      }\n\n      {\n        // testing for following format:\n        // \"    at ssr/src/pages/bad-page.js:4:13\"\n        const splitLine = stackLine.match(/at (.+):([0-9]+):([0-9]+)$/)\n        if (splitLine) {\n          filename = splitLine[1]\n          line = Number(splitLine[2])\n          column = Number(splitLine[3])\n          break\n        }\n      }\n\n      {\n        // trying to extract generic:\n        // \"<filepath>:<line>:<column>\"\n        const splitLine = stackLine.match(/(.+):([0-9]+):([0-9]+)/)\n        if (splitLine) {\n          filename = splitLine[1]\n          line = Number(splitLine[2])\n          column = Number(splitLine[3])\n          break\n        }\n      }\n    }\n  } catch (err) {\n    filename = ``\n    line = 0\n    column = 0\n  }\n  return {\n    filename,\n    line,\n    column,\n  }\n}\n\nexport interface IParsedError {\n  filename: string\n  sourceContent: string\n  message: string\n  stack: string\n  line: number\n  column: number\n}\n\nexport interface IErrorRenderMeta {\n  codeFrame: string\n  source: string\n  line: number\n  column: number\n  sourceMessage?: string\n  stack?: string\n}\n\n// Code borrowed and modified from https://github.com/watilde/parse-error\nexport const parseError = function ({\n  err,\n  directory,\n  componentPath,\n  htmlComponentRendererPath,\n}: {\n  err: Error\n  directory: string\n  componentPath: string\n  htmlComponentRendererPath: string\n}): IParsedError {\n  // convert stack trace to use source file locations and not compiled ones\n  err = createErrorFromString(err.stack, `${htmlComponentRendererPath}.map`)\n\n  const stack = err.stack ? err.stack : ``\n  const stackObject = stack.split(`\\n`)\n  const position = getPosition(stackObject)\n\n  // Remove the `/lib/` added by webpack\n  const filename = sysPath.join(\n    directory,\n    // Don't need to use path.sep as webpack always uses a single forward slash\n    // as a path separator.\n    ...position.filename\n      .split(sysPath.sep)\n      .slice(position.filename.startsWith(`/`) ? 2 : 1)\n  )\n\n  let sourceContent\n  try {\n    sourceContent = fs.readFileSync(filename, `utf-8`)\n  } catch (e) {\n    sourceContent = null\n  }\n\n  // We prefer the file path from the stack trace as the error might not be in the\n  // component â€” but if source-maps fail and we just get public/render-page.js as\n  // the file, we fall back on the component filepath as at least the user\n  // will have that.\n  const trueFileName = filename.includes(`render-page`)\n    ? componentPath\n    : filename\n\n  return {\n    filename: slash(sysPath.relative(directory, trueFileName)),\n    sourceContent,\n    message: err.message,\n    stack: stack,\n    line: position.line,\n    column: position.column,\n  }\n}\n"],"mappings":";;;;;AAAA;;AAEA,MAAMA,OAAO,GAAGC,OAAO,CAAE,MAAF,CAAvB;;AACA,MAAMC,EAAE,GAAGD,OAAO,CAAE,UAAF,CAAlB;;AACA,MAAM;EAAEE;AAAF,IAAYF,OAAO,CAAE,mBAAF,CAAzB;;AAEA,MAAMG,WAAW,GAAG,UAAUC,WAAV,EAIlB;EACA,IAAIC,QAAQ,GAAI,EAAhB;EACA,IAAIC,IAAI,GAAG,CAAX;EACA,IAAIC,MAAM,GAAG,CAAb,CAHA,CAIA;EACA;EACA;;EACA,IAAI;IACF,KAAK,MAAMC,SAAX,IAAwBJ,WAAxB,EAAqC;MACnC;QACE;QACA;QACA,MAAMK,SAAS,GAAGD,SAAS,CAACE,KAAV,CAAgB,qCAAhB,CAAlB;;QACA,IAAID,SAAJ,EAAe;UACbJ,QAAQ,GAAGI,SAAS,CAAC,CAAD,CAApB;UACAH,IAAI,GAAGK,MAAM,CAACF,SAAS,CAAC,CAAD,CAAV,CAAb;UACAF,MAAM,GAAGI,MAAM,CAACF,SAAS,CAAC,CAAD,CAAV,CAAf;UACA;QACD;MACF;MAED;QACE;QACA;QACA,MAAMA,SAAS,GAAGD,SAAS,CAACE,KAAV,CAAgB,4BAAhB,CAAlB;;QACA,IAAID,SAAJ,EAAe;UACbJ,QAAQ,GAAGI,SAAS,CAAC,CAAD,CAApB;UACAH,IAAI,GAAGK,MAAM,CAACF,SAAS,CAAC,CAAD,CAAV,CAAb;UACAF,MAAM,GAAGI,MAAM,CAACF,SAAS,CAAC,CAAD,CAAV,CAAf;UACA;QACD;MACF;MAED;QACE;QACA;QACA,MAAMA,SAAS,GAAGD,SAAS,CAACE,KAAV,CAAgB,wBAAhB,CAAlB;;QACA,IAAID,SAAJ,EAAe;UACbJ,QAAQ,GAAGI,SAAS,CAAC,CAAD,CAApB;UACAH,IAAI,GAAGK,MAAM,CAACF,SAAS,CAAC,CAAD,CAAV,CAAb;UACAF,MAAM,GAAGI,MAAM,CAACF,SAAS,CAAC,CAAD,CAAV,CAAf;UACA;QACD;MACF;IACF;EACF,CAtCD,CAsCE,OAAOG,GAAP,EAAY;IACZP,QAAQ,GAAI,EAAZ;IACAC,IAAI,GAAG,CAAP;IACAC,MAAM,GAAG,CAAT;EACD;;EACD,OAAO;IACLF,QADK;IAELC,IAFK;IAGLC;EAHK,CAAP;AAKD,CA3DD;;AA+EA;AACO,MAAMM,UAAU,GAAG,UAAU;EAClCD,GADkC;EAElCE,SAFkC;EAGlCC,aAHkC;EAIlCC;AAJkC,CAAV,EAUT;EACf;EACAJ,GAAG,GAAG,IAAAK,6BAAA,EAAsBL,GAAG,CAACM,KAA1B,EAAkC,GAAEF,yBAA0B,MAA9D,CAAN;EAEA,MAAME,KAAK,GAAGN,GAAG,CAACM,KAAJ,GAAYN,GAAG,CAACM,KAAhB,GAAyB,EAAvC;EACA,MAAMd,WAAW,GAAGc,KAAK,CAACC,KAAN,CAAa,IAAb,CAApB;EACA,MAAMC,QAAQ,GAAGjB,WAAW,CAACC,WAAD,CAA5B,CANe,CAQf;;EACA,MAAMC,QAAQ,GAAGN,OAAO,CAACsB,IAAR,CACfP,SADe,EAEf;EACA;EACA,GAAGM,QAAQ,CAACf,QAAT,CACAc,KADA,CACMpB,OAAO,CAACuB,GADd,EAEAC,KAFA,CAEMH,QAAQ,CAACf,QAAT,CAAkBmB,UAAlB,CAA8B,GAA9B,IAAoC,CAApC,GAAwC,CAF9C,CAJY,CAAjB;EASA,IAAIC,aAAJ;;EACA,IAAI;IACFA,aAAa,GAAGxB,EAAE,CAACyB,YAAH,CAAgBrB,QAAhB,EAA2B,OAA3B,CAAhB;EACD,CAFD,CAEE,OAAOsB,CAAP,EAAU;IACVF,aAAa,GAAG,IAAhB;EACD,CAvBc,CAyBf;EACA;EACA;EACA;;;EACA,MAAMG,YAAY,GAAGvB,QAAQ,CAACwB,QAAT,CAAmB,aAAnB,IACjBd,aADiB,GAEjBV,QAFJ;EAIA,OAAO;IACLA,QAAQ,EAAEH,KAAK,CAACH,OAAO,CAAC+B,QAAR,CAAiBhB,SAAjB,EAA4Bc,YAA5B,CAAD,CADV;IAELH,aAFK;IAGLM,OAAO,EAAEnB,GAAG,CAACmB,OAHR;IAILb,KAAK,EAAEA,KAJF;IAKLZ,IAAI,EAAEc,QAAQ,CAACd,IALV;IAMLC,MAAM,EAAEa,QAAQ,CAACb;EANZ,CAAP;AAQD,CAnDM"}