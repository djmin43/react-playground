{"version":3,"file":"worker-messaging.js","names":["hasActiveWorkerJobs","activeWorkerJobs","initJobsMessagingInMainProcess","workerPool","onMessage","msg","workerId","type","MESSAGE_TYPES","JOB_CREATED","pDefer","store","dispatch","internalActions","createJobV2FromInternalJob","payload","then","result","sendMessage","JOB_COMPLETED","id","catch","error","JOB_FAILED","message","finally","resolve","waitUntilWorkerJobsAreComplete","promise","Promise","deferredWorkerPromises","Map","gatsbyWorkerMessenger","getMessenger","initJobsMessagingInWorker","isWorker","deferredPromise","get","Error","delete","reject","WorkerError","maybeSendJobToMainProcess","job","deferredWorkerPromise","set","undefined"],"sources":["../../../src/utils/jobs/worker-messaging.ts"],"sourcesContent":["import pDefer from \"p-defer\"\n\nimport {\n  MESSAGE_TYPES,\n  InternalJob,\n  IJobCreatedMessage,\n  WorkerError,\n} from \"./types\"\nimport { store } from \"../../redux\"\nimport { internalActions } from \"../../redux/actions\"\nimport { GatsbyWorkerPool } from \"../worker/types\"\nimport { isWorker, getMessenger } from \"../worker/messaging\"\n\nlet hasActiveWorkerJobs: pDefer.DeferredPromise<void> | null = null\nlet activeWorkerJobs = 0\n\nexport function initJobsMessagingInMainProcess(\n  workerPool: GatsbyWorkerPool\n): void {\n  workerPool.onMessage((msg, workerId) => {\n    if (msg.type === MESSAGE_TYPES.JOB_CREATED) {\n      if (activeWorkerJobs === 0) {\n        hasActiveWorkerJobs = pDefer<void>()\n      }\n      activeWorkerJobs++\n      store\n        .dispatch(internalActions.createJobV2FromInternalJob(msg.payload))\n        .then(result => {\n          workerPool.sendMessage(\n            {\n              type: MESSAGE_TYPES.JOB_COMPLETED,\n              payload: {\n                id: msg.payload.id,\n                result,\n              },\n            },\n            workerId\n          )\n        })\n        .catch(error => {\n          workerPool.sendMessage(\n            {\n              type: MESSAGE_TYPES.JOB_FAILED,\n              payload: {\n                id: msg.payload.id,\n                error: error.message,\n              },\n            },\n            workerId\n          )\n        })\n        .finally(() => {\n          if (--activeWorkerJobs === 0) {\n            hasActiveWorkerJobs?.resolve()\n            hasActiveWorkerJobs = null\n          }\n        })\n    }\n  })\n}\n\nexport const waitUntilWorkerJobsAreComplete = (): Promise<void> =>\n  hasActiveWorkerJobs ? hasActiveWorkerJobs.promise : Promise.resolve()\n\n/**\n * This map is ONLY used in worker. It's purpose is to keep track of promises returned to plugins\n * when creating jobs (in worker context), so that we can resolve or reject those once main process\n * send back their status.\n */\nconst deferredWorkerPromises = new Map<\n  InternalJob[\"id\"],\n  pDefer.DeferredPromise<Record<string, unknown>>\n>()\nconst gatsbyWorkerMessenger = getMessenger()\nexport function initJobsMessagingInWorker(): void {\n  if (isWorker && gatsbyWorkerMessenger) {\n    gatsbyWorkerMessenger.onMessage(msg => {\n      if (msg.type === MESSAGE_TYPES.JOB_COMPLETED) {\n        const { id, result } = msg.payload\n        const deferredPromise = deferredWorkerPromises.get(id)\n\n        if (!deferredPromise) {\n          throw new Error(\n            `Received message about completed job that wasn't scheduled by this worker`\n          )\n        }\n\n        deferredPromise.resolve(result)\n        deferredWorkerPromises.delete(id)\n      } else if (msg.type === MESSAGE_TYPES.JOB_FAILED) {\n        const { id, error } = msg.payload\n        const deferredPromise = deferredWorkerPromises.get(id)\n\n        if (!deferredPromise) {\n          throw new Error(\n            `Received message about failed job that wasn't scheduled by this worker`\n          )\n        }\n\n        deferredPromise.reject(new WorkerError(error))\n        deferredWorkerPromises.delete(id)\n      }\n    })\n  }\n}\n\n/**\n * Forwards job to main process (if executed in worker context) and returns\n * a promise. Will return `undefined` if called not in worker context.\n */\nexport function maybeSendJobToMainProcess(\n  job: InternalJob\n): Promise<Record<string, unknown>> | undefined {\n  if (isWorker && gatsbyWorkerMessenger) {\n    const deferredWorkerPromise = pDefer<Record<string, unknown>>()\n\n    const msg: IJobCreatedMessage = {\n      type: MESSAGE_TYPES.JOB_CREATED,\n      payload: job,\n    }\n\n    gatsbyWorkerMessenger.sendMessage(msg)\n\n    // holds on to promise\n    deferredWorkerPromises.set(job.id, deferredWorkerPromise)\n\n    return deferredWorkerPromise.promise\n  }\n\n  return undefined\n}\n"],"mappings":"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"}