{"version":3,"file":"gatsby-webpack-eslint-graphql-schema-reload-plugin.js","names":["GatsbyWebpackEslintGraphqlSchemaReload","constructor","plugin","name","schema","findEslintOptions","compiler","options","plugins","find","item","ESLintPlugin","undefined","apply","hooks","compile","tap","program","config","store","getState","hasLocalEslint","directory","Object","assign","eslintConfig","jsxRuntime"],"sources":["../../src/utils/gatsby-webpack-eslint-graphql-schema-reload-plugin.ts"],"sourcesContent":["/**\n * The problem: after GraphQL schema rebuilds, eslint loader keeps validating against\n * the old schema.\n *\n * This plugin replaces options of eslint-plugin-graphql during develop\n */\nimport { store } from \"../redux\"\nimport { eslintConfig } from \"./eslint-config\"\nimport { hasLocalEslint } from \"./local-eslint-config-finder\"\nimport { Compiler } from \"webpack\"\nimport { GraphQLSchema } from \"graphql\"\nimport ESLintPlugin from \"eslint-webpack-plugin\"\nexport class GatsbyWebpackEslintGraphqlSchemaReload {\n  private plugin: { name: string }\n  private schema: GraphQLSchema | null\n\n  constructor() {\n    this.plugin = { name: `GatsbyWebpackEslintGraphqlSchemaReload` }\n    this.schema = null\n  }\n\n  findEslintOptions(compiler: Compiler): any | undefined {\n    const plugin = compiler.options.plugins.find(\n      item => item instanceof ESLintPlugin\n    )\n    return typeof plugin === `object` ? plugin?.options : undefined\n  }\n\n  apply(compiler: Compiler): void {\n    compiler.hooks.compile.tap(this.plugin.name, () => {\n      const { schema, program, config } = store.getState()\n\n      if (!this.schema) {\n        // initial build\n        this.schema = schema\n        return\n      }\n\n      if (this.schema === schema || hasLocalEslint(program.directory)) {\n        return\n      }\n      this.schema = schema\n\n      // Original eslint config object from webpack rules\n      const options = this.findEslintOptions(compiler)\n\n      if (!options) {\n        return\n      }\n\n      // Hackish but works:\n      // replacing original eslint options object with updated config\n      Object.assign(\n        options,\n        eslintConfig(schema, config.jsxRuntime === `automatic`)\n      )\n    })\n  }\n}\n"],"mappings":";;;;;;;AAMA;;AACA;;AACA;;AAGA;;AAXA;AACA;AACA;AACA;AACA;AACA;AAOO,MAAMA,sCAAN,CAA6C;EAIlDC,WAAW,GAAG;IACZ,KAAKC,MAAL,GAAc;MAAEC,IAAI,EAAG;IAAT,CAAd;IACA,KAAKC,MAAL,GAAc,IAAd;EACD;;EAEDC,iBAAiB,CAACC,QAAD,EAAsC;IACrD,MAAMJ,MAAM,GAAGI,QAAQ,CAACC,OAAT,CAAiBC,OAAjB,CAAyBC,IAAzB,CACbC,IAAI,IAAIA,IAAI,YAAYC,4BADX,CAAf;IAGA,OAAO,OAAOT,MAAP,KAAmB,QAAnB,GAA6BA,MAA7B,aAA6BA,MAA7B,uBAA6BA,MAAM,CAAEK,OAArC,GAA+CK,SAAtD;EACD;;EAEDC,KAAK,CAACP,QAAD,EAA2B;IAC9BA,QAAQ,CAACQ,KAAT,CAAeC,OAAf,CAAuBC,GAAvB,CAA2B,KAAKd,MAAL,CAAYC,IAAvC,EAA6C,MAAM;MACjD,MAAM;QAAEC,MAAF;QAAUa,OAAV;QAAmBC;MAAnB,IAA8BC,YAAA,CAAMC,QAAN,EAApC;;MAEA,IAAI,CAAC,KAAKhB,MAAV,EAAkB;QAChB;QACA,KAAKA,MAAL,GAAcA,MAAd;QACA;MACD;;MAED,IAAI,KAAKA,MAAL,KAAgBA,MAAhB,IAA0B,IAAAiB,uCAAA,EAAeJ,OAAO,CAACK,SAAvB,CAA9B,EAAiE;QAC/D;MACD;;MACD,KAAKlB,MAAL,GAAcA,MAAd,CAZiD,CAcjD;;MACA,MAAMG,OAAO,GAAG,KAAKF,iBAAL,CAAuBC,QAAvB,CAAhB;;MAEA,IAAI,CAACC,OAAL,EAAc;QACZ;MACD,CAnBgD,CAqBjD;MACA;;;MACAgB,MAAM,CAACC,MAAP,CACEjB,OADF,EAEE,IAAAkB,0BAAA,EAAarB,MAAb,EAAqBc,MAAM,CAACQ,UAAP,KAAuB,WAA5C,CAFF;IAID,CA3BD;EA4BD;;AA7CiD"}