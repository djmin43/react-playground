{"version":3,"file":"sanitize-node.js","names":["sanitizeNode","data","isNode","path","Set","isPlainObject","has","add","returnData","anyFieldChanged","o","key","omitUndefined","isTypeSupported","undefined","p","filter","type","isSupported","Date","module","exports"],"sources":["../../src/utils/sanitize-node.js"],"sourcesContent":["import _ from \"lodash\"\n\n/**\n * Make data serializable\n * @param {(Object|Array)} data to sanitize\n * @param {boolean} isNode = true\n * @param {Set<string>} path = new Set\n */\nconst sanitizeNode = (data, isNode = true, path = new Set()) => {\n  const isPlainObject = _.isPlainObject(data)\n\n  if (isPlainObject || _.isArray(data)) {\n    if (path.has(data)) return data\n    path.add(data)\n\n    const returnData = isPlainObject ? {} : []\n    let anyFieldChanged = false\n    _.each(data, (o, key) => {\n      if (isNode && key === `internal`) {\n        returnData[key] = o\n        return\n      }\n      returnData[key] = sanitizeNode(o, false, path)\n\n      if (returnData[key] !== o) {\n        anyFieldChanged = true\n      }\n    })\n\n    if (anyFieldChanged) {\n      data = omitUndefined(returnData)\n    }\n\n    // arrays and plain objects are supported - no need to to sanitize\n    return data\n  }\n\n  if (!isTypeSupported(data)) {\n    return undefined\n  } else {\n    return data\n  }\n}\n\n/**\n * @param {Object|Array} data\n * @returns {Object|Array} data without undefined values\n */\nconst omitUndefined = data => {\n  const isPlainObject = _.isPlainObject(data)\n  if (isPlainObject) {\n    return _.pickBy(data, p => p !== undefined)\n  }\n\n  return data.filter(p => p !== undefined)\n}\n\n/**\n * @param {*} data\n * @return {boolean}\n */\nconst isTypeSupported = data => {\n  if (data === null) {\n    return true\n  }\n\n  const type = typeof data\n  const isSupported =\n    type === `number` ||\n    type === `string` ||\n    type === `boolean` ||\n    data instanceof Date\n\n  return isSupported\n}\n\nmodule.exports = sanitizeNode\n"],"mappings":";;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,YAAY,GAAG,CAACC,IAAD,EAAOC,MAAM,GAAG,IAAhB,EAAsBC,IAAI,GAAG,IAAIC,GAAJ,EAA7B,KAA2C;EAC9D,MAAMC,aAAa,GAAG,6BAAgBJ,IAAhB,CAAtB;;EAEA,IAAII,aAAa,IAAI,uBAAUJ,IAAV,CAArB,EAAsC;IACpC,IAAIE,IAAI,CAACG,GAAL,CAASL,IAAT,CAAJ,EAAoB,OAAOA,IAAP;IACpBE,IAAI,CAACI,GAAL,CAASN,IAAT;IAEA,MAAMO,UAAU,GAAGH,aAAa,GAAG,EAAH,GAAQ,EAAxC;IACA,IAAII,eAAe,GAAG,KAAtB;IACA,oBAAOR,IAAP,EAAa,CAACS,CAAD,EAAIC,GAAJ,KAAY;MACvB,IAAIT,MAAM,IAAIS,GAAG,KAAM,UAAvB,EAAkC;QAChCH,UAAU,CAACG,GAAD,CAAV,GAAkBD,CAAlB;QACA;MACD;;MACDF,UAAU,CAACG,GAAD,CAAV,GAAkBX,YAAY,CAACU,CAAD,EAAI,KAAJ,EAAWP,IAAX,CAA9B;;MAEA,IAAIK,UAAU,CAACG,GAAD,CAAV,KAAoBD,CAAxB,EAA2B;QACzBD,eAAe,GAAG,IAAlB;MACD;IACF,CAVD;;IAYA,IAAIA,eAAJ,EAAqB;MACnBR,IAAI,GAAGW,aAAa,CAACJ,UAAD,CAApB;IACD,CApBmC,CAsBpC;;;IACA,OAAOP,IAAP;EACD;;EAED,IAAI,CAACY,eAAe,CAACZ,IAAD,CAApB,EAA4B;IAC1B,OAAOa,SAAP;EACD,CAFD,MAEO;IACL,OAAOb,IAAP;EACD;AACF,CAlCD;AAoCA;AACA;AACA;AACA;;;AACA,MAAMW,aAAa,GAAGX,IAAI,IAAI;EAC5B,MAAMI,aAAa,GAAG,6BAAgBJ,IAAhB,CAAtB;;EACA,IAAII,aAAJ,EAAmB;IACjB,OAAO,sBAASJ,IAAT,EAAec,CAAC,IAAIA,CAAC,KAAKD,SAA1B,CAAP;EACD;;EAED,OAAOb,IAAI,CAACe,MAAL,CAAYD,CAAC,IAAIA,CAAC,KAAKD,SAAvB,CAAP;AACD,CAPD;AASA;AACA;AACA;AACA;;;AACA,MAAMD,eAAe,GAAGZ,IAAI,IAAI;EAC9B,IAAIA,IAAI,KAAK,IAAb,EAAmB;IACjB,OAAO,IAAP;EACD;;EAED,MAAMgB,IAAI,GAAG,OAAOhB,IAApB;EACA,MAAMiB,WAAW,GACfD,IAAI,KAAM,QAAV,IACAA,IAAI,KAAM,QADV,IAEAA,IAAI,KAAM,SAFV,IAGAhB,IAAI,YAAYkB,IAJlB;EAMA,OAAOD,WAAP;AACD,CAbD;;AAeAE,MAAM,CAACC,OAAP,GAAiBrB,YAAjB"}