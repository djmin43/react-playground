{"version":3,"file":"entry.js","names":["tracerReadyPromise","initTracer","process","env","GATSBY_OPEN_TRACING_CONFIG_FILE","getData","pathName","graphqlEngine","req","spanContext","telemetryResolverTimings","getDataWrapperActivity","reporter","phantomActivity","parentSpan","start","page","templateDetails","potentialPagePath","findMetaActivity","span","getPagePathFromPageDataPath","maybePage","findPageByPath","Error","INLINED_TEMPLATE_TO_DETAILS","componentChunkName","end","executionPromises","results","serverData","query","runningQueryActivity","push","runQuery","context","queryName","path","componentPath","forceGraphqlTracing","then","queryResults","errors","length","e","codeFrame","getCodeFrame","locations","line","column","queryRunningError","message","stack","finally","mode","runningGetServerDataActivity","getPageChunk","mod","getServerData","serverDataResults","Promise","all","props","pageContext","searchString","maybeQueryString","Object","entries","map","k","v","encodeURIComponent","join","serverDataHeaders","headers","serverDataStatus","status","getPath","data","matchPath","renderPageData","activity","constructPageDataString","staticQueryHashes","JSON","stringify","parse","readStaticQueryContext","templatePath","filePath","__dirname","rawSQContext","fs","readFile","renderHTML","pageData","wrapperActivity","readStaticQueryContextActivity","staticQueryContext","renderHTMLActivity","htmlComponentRenderer","pagePath","webpackCompilationHash","WEBPACK_COMPILATION_HASH","assets","inlinePageData","html"],"sources":["../../../src/utils/page-ssr-module/entry.ts"],"sourcesContent":["// \"engines-fs-provider\" must be first import, as it sets up global\n// fs and this need to happen before anything else tries to import fs\nimport \"../engines-fs-provider\"\n\n// just types - those should not be bundled\nimport type { GraphQLEngine } from \"../../schema/graphql-engine/entry\"\nimport type { IExecutionResult } from \"../../query/types\"\nimport type { IGatsbyPage } from \"../../redux/types\"\nimport { IGraphQLTelemetryRecord } from \"../../schema/type-definitions\"\nimport type { IScriptsAndStyles } from \"../client-assets-for-template\"\nimport type { IPageDataWithQueryResult } from \"../page-data\"\nimport type { Request } from \"express\"\nimport type { Span, SpanContext } from \"opentracing\"\n\n// actual imports\nimport * as path from \"path\"\nimport * as fs from \"fs-extra\"\nimport {\n  constructPageDataString,\n  getPagePathFromPageDataPath,\n} from \"../page-data-helpers\"\n// @ts-ignore render-page import will become valid later on (it's marked as external)\nimport htmlComponentRenderer, { getPageChunk } from \"./routes/render-page\"\nimport { getServerData, IServerData } from \"../get-server-data\"\nimport reporter from \"gatsby-cli/lib/reporter\"\nimport { initTracer } from \"../tracer\"\nimport { getCodeFrame } from \"../../query/graphql-errors-codeframe\"\n\nexport interface ITemplateDetails {\n  query: string\n  staticQueryHashes: Array<string>\n  assets: IScriptsAndStyles\n}\nexport interface ISSRData {\n  results: IExecutionResult\n  page: IGatsbyPage\n  templateDetails: ITemplateDetails\n  potentialPagePath: string\n  serverDataHeaders?: Record<string, string>\n  serverDataStatus?: number\n  searchString: string\n}\n\n// just letting TypeScript know about injected data\n// with DefinePlugin\ndeclare global {\n  const INLINED_TEMPLATE_TO_DETAILS: Record<string, ITemplateDetails>\n  const WEBPACK_COMPILATION_HASH: string\n}\n\nconst tracerReadyPromise = initTracer(\n  process.env.GATSBY_OPEN_TRACING_CONFIG_FILE ?? ``\n)\n\ntype MaybePhantomActivity =\n  | ReturnType<typeof reporter.phantomActivity>\n  | undefined\n\nexport async function getData({\n  pathName,\n  graphqlEngine,\n  req,\n  spanContext,\n  telemetryResolverTimings,\n}: {\n  graphqlEngine: GraphQLEngine\n  pathName: string\n  req?: Partial<Pick<Request, \"query\" | \"method\" | \"url\" | \"headers\">>\n  spanContext?: Span | SpanContext\n  telemetryResolverTimings?: Array<IGraphQLTelemetryRecord>\n}): Promise<ISSRData> {\n  await tracerReadyPromise\n\n  let getDataWrapperActivity: MaybePhantomActivity\n  try {\n    if (spanContext) {\n      getDataWrapperActivity = reporter.phantomActivity(`Running getData`, {\n        parentSpan: spanContext,\n      })\n      getDataWrapperActivity.start()\n    }\n\n    let page: IGatsbyPage\n    let templateDetails: ITemplateDetails\n    let potentialPagePath: string\n    let findMetaActivity: MaybePhantomActivity\n    try {\n      if (getDataWrapperActivity) {\n        findMetaActivity = reporter.phantomActivity(\n          `Finding details about page and template`,\n          {\n            parentSpan: getDataWrapperActivity.span,\n          }\n        )\n        findMetaActivity.start()\n      }\n      potentialPagePath = getPagePathFromPageDataPath(pathName) || pathName\n\n      // 1. Find a page for pathname\n      const maybePage = graphqlEngine.findPageByPath(potentialPagePath)\n\n      if (!maybePage) {\n        // page not found, nothing to run query for\n        throw new Error(`Page for \"${pathName}\" not found`)\n      }\n\n      page = maybePage\n\n      // 2. Lookup query used for a page (template)\n      templateDetails = INLINED_TEMPLATE_TO_DETAILS[page.componentChunkName]\n      if (!templateDetails) {\n        throw new Error(\n          `Page template details for \"${page.componentChunkName}\" not found`\n        )\n      }\n    } finally {\n      if (findMetaActivity) {\n        findMetaActivity.end()\n      }\n    }\n\n    const executionPromises: Array<Promise<any>> = []\n\n    // 3. Execute query\n    // query-runner handles case when query is not there - so maybe we should consider using that somehow\n    let results: IExecutionResult = {}\n    let serverData: IServerData | undefined\n    if (templateDetails.query) {\n      let runningQueryActivity: MaybePhantomActivity\n      if (getDataWrapperActivity) {\n        runningQueryActivity = reporter.phantomActivity(`Running page query`, {\n          parentSpan: getDataWrapperActivity.span,\n        })\n        runningQueryActivity.start()\n      }\n      executionPromises.push(\n        graphqlEngine\n          .runQuery(\n            templateDetails.query,\n            {\n              ...page,\n              ...page.context,\n            },\n            {\n              queryName: page.path,\n              componentPath: page.componentPath,\n              parentSpan: runningQueryActivity?.span,\n              forceGraphqlTracing: !!runningQueryActivity,\n              telemetryResolverTimings,\n            }\n          )\n          .then(queryResults => {\n            if (queryResults.errors && queryResults.errors.length > 0) {\n              const e = queryResults.errors[0]\n              const codeFrame = getCodeFrame(\n                templateDetails.query,\n                e.locations && e.locations[0].line,\n                e.locations && e.locations[0].column\n              )\n\n              const queryRunningError = new Error(\n                e.message + `\\n\\n` + codeFrame\n              )\n              queryRunningError.stack = e.stack\n              throw queryRunningError\n            } else {\n              results = queryResults\n            }\n          })\n          .finally(() => {\n            if (runningQueryActivity) {\n              runningQueryActivity.end()\n            }\n          })\n      )\n    }\n\n    // 4. (if SSR) run getServerData\n    if (page.mode === `SSR`) {\n      let runningGetServerDataActivity: MaybePhantomActivity\n      if (getDataWrapperActivity) {\n        runningGetServerDataActivity = reporter.phantomActivity(\n          `Running getServerData`,\n          {\n            parentSpan: getDataWrapperActivity.span,\n          }\n        )\n        runningGetServerDataActivity.start()\n      }\n      executionPromises.push(\n        getPageChunk(page)\n          .then(mod => getServerData(req, page, potentialPagePath, mod))\n          .then(serverDataResults => {\n            serverData = serverDataResults\n          })\n          .finally(() => {\n            if (runningGetServerDataActivity) {\n              runningGetServerDataActivity.end()\n            }\n          })\n      )\n    }\n\n    await Promise.all(executionPromises)\n\n    if (serverData) {\n      results.serverData = serverData.props\n    }\n    results.pageContext = page.context\n\n    let searchString = ``\n\n    if (req?.query) {\n      const maybeQueryString = Object.entries(req.query)\n        .map(\n          ([k, v]) =>\n            // Preserve QueryString encoding\n            `${encodeURIComponent(k)}=${encodeURIComponent(v as string)}`\n        )\n        .join(`&`)\n      if (maybeQueryString) {\n        searchString = `?${maybeQueryString}`\n      }\n    }\n\n    return {\n      results,\n      page,\n      templateDetails,\n      potentialPagePath,\n      serverDataHeaders: serverData?.headers,\n      serverDataStatus: serverData?.status,\n      searchString,\n    }\n  } finally {\n    if (getDataWrapperActivity) {\n      getDataWrapperActivity.end()\n    }\n  }\n}\n\nfunction getPath(data: ISSRData): string {\n  return (\n    (data.page.mode !== `SSG` && data.page.matchPath\n      ? data.potentialPagePath\n      : data.page.path) + (data.page.mode === `SSR` ? data.searchString : ``)\n  )\n}\n\nexport async function renderPageData({\n  data,\n  spanContext,\n}: {\n  data: ISSRData\n  spanContext?: Span | SpanContext\n}): Promise<IPageDataWithQueryResult> {\n  await tracerReadyPromise\n\n  let activity: MaybePhantomActivity\n  try {\n    if (spanContext) {\n      activity = reporter.phantomActivity(`Rendering page-data`, {\n        parentSpan: spanContext,\n      })\n      activity.start()\n    }\n    const results = await constructPageDataString(\n      {\n        componentChunkName: data.page.componentChunkName,\n        path: getPath(data),\n        matchPath: data.page.matchPath,\n        staticQueryHashes: data.templateDetails.staticQueryHashes,\n      },\n      JSON.stringify(data.results)\n    )\n\n    return JSON.parse(results)\n  } finally {\n    if (activity) {\n      activity.end()\n    }\n  }\n}\n\nconst readStaticQueryContext = async (\n  templatePath: string\n): Promise<Record<string, { data: unknown }>> => {\n  const filePath = path.join(\n    __dirname,\n    `sq-context`,\n    templatePath,\n    `sq-context.json`\n  )\n  const rawSQContext = await fs.readFile(filePath, `utf-8`)\n\n  return JSON.parse(rawSQContext)\n}\n\nexport async function renderHTML({\n  data,\n  pageData,\n  spanContext,\n}: {\n  data: ISSRData\n  pageData?: IPageDataWithQueryResult\n  spanContext?: Span | SpanContext\n}): Promise<string> {\n  await tracerReadyPromise\n\n  let wrapperActivity: MaybePhantomActivity\n  try {\n    if (spanContext) {\n      wrapperActivity = reporter.phantomActivity(`Rendering HTML`, {\n        parentSpan: spanContext,\n      })\n      wrapperActivity.start()\n    }\n\n    if (!pageData) {\n      pageData = await renderPageData({\n        data,\n        spanContext: wrapperActivity?.span,\n      })\n    }\n\n    let readStaticQueryContextActivity: MaybePhantomActivity\n    let staticQueryContext: Record<string, { data: unknown }>\n    try {\n      if (wrapperActivity) {\n        readStaticQueryContextActivity = reporter.phantomActivity(\n          `Preparing StaticQueries context`,\n          {\n            parentSpan: wrapperActivity.span,\n          }\n        )\n        readStaticQueryContextActivity.start()\n      }\n      staticQueryContext = await readStaticQueryContext(\n        data.page.componentChunkName\n      )\n    } finally {\n      if (readStaticQueryContextActivity) {\n        readStaticQueryContextActivity.end()\n      }\n    }\n\n    let renderHTMLActivity: MaybePhantomActivity\n    try {\n      if (wrapperActivity) {\n        renderHTMLActivity = reporter.phantomActivity(\n          `Actually rendering HTML`,\n          {\n            parentSpan: wrapperActivity.span,\n          }\n        )\n        renderHTMLActivity.start()\n      }\n\n      const results = await htmlComponentRenderer({\n        pagePath: getPath(data),\n        pageData,\n        staticQueryContext,\n        webpackCompilationHash: WEBPACK_COMPILATION_HASH,\n        ...data.templateDetails.assets,\n        inlinePageData: data.page.mode === `SSR` && data.results.serverData,\n      })\n\n      return results.html\n    } finally {\n      if (renderHTMLActivity) {\n        renderHTMLActivity.end()\n      }\n    }\n  } finally {\n    if (wrapperActivity) {\n      wrapperActivity.end()\n    }\n  }\n}\n"],"mappings":"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"}