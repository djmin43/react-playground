{"version":3,"file":"get-ssl-cert.js","names":["absoluteOrDirectory","directory","filePath","path","isAbsolute","join","getWindowsEncryptionPassword","report","info","results","prompts","type","name","message","validate","input","length","value","getSslCert","certFile","keyFile","caFile","panic","id","context","keyPath","certPath","process","env","NODE_EXTRA_CA_CERTS","key","fs","readFileSync","cert","includes","os","platform","HOME","mkdtemp","mkdtempSync","tmpdir","getDevCert","require","certificateFor","caPath","getCaPath","skipCertutilInstall","ui","toString","err","error"],"sources":["../../src/utils/get-ssl-cert.ts"],"sourcesContent":["import report from \"gatsby-cli/lib/reporter\"\nimport fs from \"fs\"\nimport path from \"path\"\nimport os from \"os\"\nimport { ICert } from \"../commands/types\"\nimport prompts from \"prompts\"\n\nconst absoluteOrDirectory = (directory: string, filePath: string): string => {\n  // Support absolute paths\n  if (path.isAbsolute(filePath)) {\n    return filePath\n  }\n  return path.join(directory, filePath)\n}\n\nconst getWindowsEncryptionPassword = async (): Promise<string> => {\n  report.info(\n    [\n      `A password is required to access the secure certificate authority key`,\n      `used for signing certificates.`,\n      ``,\n      `If this is the first time this has run, then this is to set the password`,\n      `for future use.  If any new certificates are signed later, you will need`,\n      `to use this same password.`,\n      ``,\n    ].join(`\\n`)\n  )\n  const results = await prompts({\n    type: `password`,\n    name: `value`,\n    message: `Please enter the CA password`,\n    validate: input => input.length > 0 || `You must enter a password.`,\n  })\n  return results.value\n}\n\nexport interface IGetSslCertArgs {\n  name: string\n  certFile?: string\n  keyFile?: string\n  caFile?: string\n  directory: string\n}\n\nexport async function getSslCert({\n  name,\n  certFile,\n  keyFile,\n  caFile,\n  directory,\n}: IGetSslCertArgs): Promise<ICert | false> {\n  // check that cert file and key file are both true or both false, if they are both\n  // false, it defaults to the automatic ssl\n  if (certFile ? !keyFile : keyFile) {\n    report.panic({\n      id: `11521`,\n      context: {},\n    })\n  }\n\n  if (certFile && keyFile) {\n    const keyPath = absoluteOrDirectory(directory, keyFile)\n    const certPath = absoluteOrDirectory(directory, certFile)\n\n    process.env.NODE_EXTRA_CA_CERTS = caFile\n      ? absoluteOrDirectory(directory, caFile)\n      : certPath\n    return {\n      key: fs.readFileSync(keyPath, `utf-8`),\n      cert: fs.readFileSync(certPath, `utf-8`),\n    }\n  }\n\n  report.info(\n    `setting up automatic SSL certificate (may require elevated permissions/sudo)\\n`\n  )\n  try {\n    if ([`linux`, `darwin`].includes(os.platform()) && !process.env.HOME) {\n      // this is a total hack to ensure process.env.HOME is set on linux and mac\n      // devcert creates config path at import time (hence we import devcert after setting dummy value):\n      // - https://github.com/davewasmer/devcert/blob/2b1b8d40eda251616bf74fd69f00ae8222ca1171/src/constants.ts#L15\n      // - https://github.com/LinusU/node-application-config-path/blob/ae49ff6748b68b29ec76c00ce4a28ba8e9161d9b/index.js#L13\n      // if HOME is not set, we will get:\n      // \"The \"path\" argument must be of type s tring. Received type undefined\"\n      // fatal error. This still likely will result in fatal error, but at least it's not on import time\n      const mkdtemp = fs.mkdtempSync(path.join(os.tmpdir(), `home-`))\n      process.env.HOME = mkdtemp\n    }\n    const getDevCert = require(`devcert`).certificateFor\n    const { caPath, key, cert } = await getDevCert(name, {\n      getCaPath: true,\n      skipCertutilInstall: false,\n      ui: {\n        getWindowsEncryptionPassword,\n      },\n    })\n    if (caPath) {\n      process.env.NODE_EXTRA_CA_CERTS = caPath\n    }\n    return {\n      key: key.toString(),\n      cert: cert.toString(),\n    }\n  } catch (err) {\n    report.panic({\n      id: `11522`,\n      error: err,\n      context: {\n        message: err.message,\n      },\n    })\n  }\n\n  return false\n}\n"],"mappings":"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"}