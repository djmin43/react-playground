{"version":3,"file":"nodes.js","names":["hasNodeChanged","id","digest","node","getNode","internal","contentDigest","getNodeAndSavePathDependency","path","console","error","undefined","createPageDependency","nodeId","loadNodeContent","content","plugin","store","getState","flattenedPlugins","find","plug","name","owner","Error","require","resolve"],"sources":["../../src/utils/nodes.ts"],"sourcesContent":["import { createPageDependency } from \"../redux/actions/add-page-dependency\"\nimport { getNode } from \"../datastore\"\nimport { IGatsbyNode } from \"../redux/types\"\nimport { store } from \"../redux\"\n\n/**\n * Determine if node has changed.\n */\nexport const hasNodeChanged = (id: string, digest: string): boolean => {\n  const node = getNode(id)\n  if (!node) {\n    return true\n  } else {\n    return node.internal.contentDigest !== digest\n  }\n}\n\n/**\n * Get node and save path dependency.\n */\nexport const getNodeAndSavePathDependency = (\n  id: string,\n  path: string\n): IGatsbyNode | undefined => {\n  const node = getNode(id)\n\n  if (!node) {\n    console.error(\n      `getNodeAndSavePathDependency failed for node id: ${id} as it was not found in cache`\n    )\n    return undefined\n  }\n\n  createPageDependency({ path, nodeId: id })\n  return node\n}\n\n/**\n * Get content for a node from the plugin that created it.\n */\nexport async function loadNodeContent(node: IGatsbyNode): Promise<string> {\n  if (typeof node.internal.content === `string`) {\n    return node.internal.content\n  }\n\n  // Load plugin's loader function\n  const plugin = store\n    .getState()\n    .flattenedPlugins.find(plug => plug.name === node.internal.owner)\n\n  if (!plugin) {\n    throw new Error(\n      `Could not find owner plugin of node for loadNodeContent with owner \\`${node.internal.owner}\\``\n    )\n  }\n\n  const { loadNodeContent } = require(plugin.resolve)\n\n  if (!loadNodeContent) {\n    throw new Error(\n      `Could not find function loadNodeContent for plugin ${plugin.name}`\n    )\n  }\n\n  const content = await loadNodeContent(node)\n\n  node.internal.content = content\n\n  return content\n}\n"],"mappings":";;;;;;AAAA;;AACA;;AAEA;;AAEA;AACA;AACA;AACO,MAAMA,cAAc,GAAG,CAACC,EAAD,EAAaC,MAAb,KAAyC;EACrE,MAAMC,IAAI,GAAG,IAAAC,kBAAA,EAAQH,EAAR,CAAb;;EACA,IAAI,CAACE,IAAL,EAAW;IACT,OAAO,IAAP;EACD,CAFD,MAEO;IACL,OAAOA,IAAI,CAACE,QAAL,CAAcC,aAAd,KAAgCJ,MAAvC;EACD;AACF,CAPM;AASP;AACA;AACA;;;;;AACO,MAAMK,4BAA4B,GAAG,CAC1CN,EAD0C,EAE1CO,IAF0C,KAGd;EAC5B,MAAML,IAAI,GAAG,IAAAC,kBAAA,EAAQH,EAAR,CAAb;;EAEA,IAAI,CAACE,IAAL,EAAW;IACTM,OAAO,CAACC,KAAR,CACG,oDAAmDT,EAAG,+BADzD;IAGA,OAAOU,SAAP;EACD;;EAED,IAAAC,uCAAA,EAAqB;IAAEJ,IAAF;IAAQK,MAAM,EAAEZ;EAAhB,CAArB;EACA,OAAOE,IAAP;AACD,CAfM;AAiBP;AACA;AACA;;;;;AACO,eAAeW,eAAf,CAA+BX,IAA/B,EAAmE;EACxE,IAAI,OAAOA,IAAI,CAACE,QAAL,CAAcU,OAArB,KAAkC,QAAtC,EAA+C;IAC7C,OAAOZ,IAAI,CAACE,QAAL,CAAcU,OAArB;EACD,CAHuE,CAKxE;;;EACA,MAAMC,MAAM,GAAGC,YAAA,CACZC,QADY,GAEZC,gBAFY,CAEKC,IAFL,CAEUC,IAAI,IAAIA,IAAI,CAACC,IAAL,KAAcnB,IAAI,CAACE,QAAL,CAAckB,KAF9C,CAAf;;EAIA,IAAI,CAACP,MAAL,EAAa;IACX,MAAM,IAAIQ,KAAJ,CACH,wEAAuErB,IAAI,CAACE,QAAL,CAAckB,KAAM,IADxF,CAAN;EAGD;;EAED,MAAM;IAAET;EAAF,IAAsBW,OAAO,CAACT,MAAM,CAACU,OAAR,CAAnC;;EAEA,IAAI,CAACZ,eAAL,EAAsB;IACpB,MAAM,IAAIU,KAAJ,CACH,sDAAqDR,MAAM,CAACM,IAAK,EAD9D,CAAN;EAGD;;EAED,MAAMP,OAAO,GAAG,MAAMD,eAAe,CAACX,IAAD,CAArC;EAEAA,IAAI,CAACE,QAAL,CAAcU,OAAd,GAAwBA,OAAxB;EAEA,OAAOA,OAAP;AACD"}