{"version":3,"file":"index.js","names":["tracerProvider","initTracer","tracerFile","tracer","process","env","GATSBY_OPEN_TRACING_CONFIG_FILE","resolvedPath","slash","path","resolve","require","create","Tracer","initGlobalTracer","stopTracer","stop"],"sources":["../../../src/utils/tracer/index.ts"],"sourcesContent":["import { slash } from \"gatsby-core-utils\"\nimport path from \"path\"\nimport { Tracer, initGlobalTracer } from \"opentracing\"\n\ninterface ITracerProvider {\n  create(): Tracer\n  stop(): Promise<void>\n}\n\nlet tracerProvider: ITracerProvider | undefined\n\n/**\n * tracerFile should be a js file that exports two functions.\n *\n * `create` - Create and return an open-tracing compatible tracer. See\n * https://github.com/opentracing/opentracing-javascript/blob/master/src/tracer.ts\n *\n * `stop` - Run any tracer cleanup required before the node.js process\n * exits\n */\nexport const initTracer = async (tracerFile: string): Promise<Tracer> => {\n  let tracer: Tracer\n  if (tracerFile) {\n    process.env.GATSBY_OPEN_TRACING_CONFIG_FILE = tracerFile\n    const resolvedPath = slash(path.resolve(tracerFile))\n    tracerProvider = require(resolvedPath)\n    tracer = await tracerProvider!.create()\n  } else {\n    tracer = new Tracer() // Noop\n  }\n\n  initGlobalTracer(tracer)\n\n  return tracer\n}\n\nexport const stopTracer = async (): Promise<void> => {\n  if (tracerProvider?.stop) {\n    await tracerProvider.stop()\n  }\n}\n"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAOA,IAAIA,cAAJ;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,MAAMC,UAAU,GAAG,MAAOC,UAAP,IAA+C;EACvE,IAAIC,MAAJ;;EACA,IAAID,UAAJ,EAAgB;IACdE,OAAO,CAACC,GAAR,CAAYC,+BAAZ,GAA8CJ,UAA9C;IACA,MAAMK,YAAY,GAAG,IAAAC,sBAAA,EAAMC,aAAA,CAAKC,OAAL,CAAaR,UAAb,CAAN,CAArB;IACAF,cAAc,GAAGW,OAAO,CAACJ,YAAD,CAAxB;IACAJ,MAAM,GAAG,MAAMH,cAAc,CAAEY,MAAhB,EAAf;EACD,CALD,MAKO;IACLT,MAAM,GAAG,IAAIU,mBAAJ,EAAT,CADK,CACiB;EACvB;;EAED,IAAAC,6BAAA,EAAiBX,MAAjB;EAEA,OAAOA,MAAP;AACD,CAdM;;;;AAgBA,MAAMY,UAAU,GAAG,YAA2B;EAAA;;EACnD,uBAAIf,cAAJ,4CAAI,gBAAgBgB,IAApB,EAA0B;IACxB,MAAMhB,cAAc,CAACgB,IAAf,EAAN;EACD;AACF,CAJM"}