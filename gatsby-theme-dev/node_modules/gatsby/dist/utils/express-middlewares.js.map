{"version":3,"file":"express-middlewares.js","names":["configureTrailingSlash","getState","option","req","res","next","method","toLocaleLowerCase","includes","path","split","pop","length","page","findPageByPath","slice","query","url","redirect","BASE","urlToMessWith","URL","pathname","toString","replace"],"sources":["../../src/utils/express-middlewares.ts"],"sourcesContent":["import type { TrailingSlash } from \"gatsby-page-utils\"\nimport express from \"express\"\nimport type { IGatsbyState } from \"../redux/types\"\nimport { findPageByPath } from \"./find-page-by-path\"\n\nexport const configureTrailingSlash =\n  (getState: () => IGatsbyState, option: TrailingSlash | undefined) =>\n  (\n    req: express.Request,\n    res: express.Response,\n    next: express.NextFunction\n  ): void => {\n    const method = req.method.toLocaleLowerCase()\n    if (![`get`, `head`].includes(method)) {\n      next()\n      return\n    }\n\n    if (req?.path.split(`/`)?.pop()?.includes(`.`)) {\n      // Path has an extension. Do not add slash.\n      next()\n      return\n    }\n\n    if (req.path.length <= 1) {\n      next()\n      return\n    }\n\n    // check if it's Gatsby Page\n    const page = findPageByPath(getState(), req.path)\n\n    if (page) {\n      if (option === `never`) {\n        if (req.path.slice(-1) === `/` && page.path !== req.path) {\n          // Remove trailing slash\n          const query = req.url.slice(req.path.length)\n          res.redirect(301, req.path.slice(0, -1) + query)\n          return\n        } else {\n          // express.static really doesn't like paths without trailing slashes\n          // so we \"rewrite\" request to look like request with trailing slash\n          // otherwise we'll have an infinite redirect loop. We did this because\n          // express.static automatically adds the redirect trailing slash then\n          const BASE = `http://localhost`\n          const urlToMessWith = new URL(req.url, BASE)\n          urlToMessWith.pathname += `/`\n\n          // The incoming req.url is relative, so we remove the base again\n          // we use new URL so that queries/hashes are handled automatically\n          req.url = urlToMessWith.toString().replace(BASE, ``)\n        }\n      } else if (option === `always`) {\n        if (req.path.slice(-1) !== `/` && page.path !== req.path) {\n          // Add trailing slash\n          const query = req.url.slice(req.path.length)\n          res.redirect(301, `${req.path}/${query}`)\n          return\n        }\n      }\n    }\n\n    next()\n  }\n"],"mappings":";;;;;AAGA;;AAEO,MAAMA,sBAAsB,GACjC,CAACC,QAAD,EAA+BC,MAA/B,KACA,CACEC,GADF,EAEEC,GAFF,EAGEC,IAHF,KAIW;EAAA;;EACT,MAAMC,MAAM,GAAGH,GAAG,CAACG,MAAJ,CAAWC,iBAAX,EAAf;;EACA,IAAI,CAAC,CAAE,KAAF,EAAS,MAAT,EAAgBC,QAAhB,CAAyBF,MAAzB,CAAL,EAAuC;IACrCD,IAAI;IACJ;EACD;;EAED,IAAIF,GAAJ,aAAIA,GAAJ,kCAAIA,GAAG,CAAEM,IAAL,CAAUC,KAAV,CAAiB,GAAjB,CAAJ,mEAAI,gBAAsBC,GAAtB,EAAJ,gDAAI,oBAA6BH,QAA7B,CAAuC,GAAvC,CAAJ,EAAgD;IAC9C;IACAH,IAAI;IACJ;EACD;;EAED,IAAIF,GAAG,CAACM,IAAJ,CAASG,MAAT,IAAmB,CAAvB,EAA0B;IACxBP,IAAI;IACJ;EACD,CAhBQ,CAkBT;;;EACA,MAAMQ,IAAI,GAAG,IAAAC,8BAAA,EAAeb,QAAQ,EAAvB,EAA2BE,GAAG,CAACM,IAA/B,CAAb;;EAEA,IAAII,IAAJ,EAAU;IACR,IAAIX,MAAM,KAAM,OAAhB,EAAwB;MACtB,IAAIC,GAAG,CAACM,IAAJ,CAASM,KAAT,CAAe,CAAC,CAAhB,MAAwB,GAAxB,IAA8BF,IAAI,CAACJ,IAAL,KAAcN,GAAG,CAACM,IAApD,EAA0D;QACxD;QACA,MAAMO,KAAK,GAAGb,GAAG,CAACc,GAAJ,CAAQF,KAAR,CAAcZ,GAAG,CAACM,IAAJ,CAASG,MAAvB,CAAd;QACAR,GAAG,CAACc,QAAJ,CAAa,GAAb,EAAkBf,GAAG,CAACM,IAAJ,CAASM,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,IAAwBC,KAA1C;QACA;MACD,CALD,MAKO;QACL;QACA;QACA;QACA;QACA,MAAMG,IAAI,GAAI,kBAAd;QACA,MAAMC,aAAa,GAAG,IAAIC,GAAJ,CAAQlB,GAAG,CAACc,GAAZ,EAAiBE,IAAjB,CAAtB;QACAC,aAAa,CAACE,QAAd,IAA2B,GAA3B,CAPK,CASL;QACA;;QACAnB,GAAG,CAACc,GAAJ,GAAUG,aAAa,CAACG,QAAd,GAAyBC,OAAzB,CAAiCL,IAAjC,EAAwC,EAAxC,CAAV;MACD;IACF,CAnBD,MAmBO,IAAIjB,MAAM,KAAM,QAAhB,EAAyB;MAC9B,IAAIC,GAAG,CAACM,IAAJ,CAASM,KAAT,CAAe,CAAC,CAAhB,MAAwB,GAAxB,IAA8BF,IAAI,CAACJ,IAAL,KAAcN,GAAG,CAACM,IAApD,EAA0D;QACxD;QACA,MAAMO,KAAK,GAAGb,GAAG,CAACc,GAAJ,CAAQF,KAAR,CAAcZ,GAAG,CAACM,IAAJ,CAASG,MAAvB,CAAd;QACAR,GAAG,CAACc,QAAJ,CAAa,GAAb,EAAmB,GAAEf,GAAG,CAACM,IAAK,IAAGO,KAAM,EAAvC;QACA;MACD;IACF;EACF;;EAEDX,IAAI;AACL,CA1DI"}