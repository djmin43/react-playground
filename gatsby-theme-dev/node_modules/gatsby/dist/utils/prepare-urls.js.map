{"version":3,"file":"prepare-urls.js","names":["prepareUrls","protocol","host","port","formatUrl","hostname","url","format","pathname","prettyPrintUrl","chalk","bold","String","isUnspecifiedHost","prettyHost","lanUrlForConfig","lanUrlForTerminal","address","ip","test","undefined","_e","localUrlForTerminal","localUrlForBrowser"],"sources":["../../src/utils/prepare-urls.ts"],"sourcesContent":["import address from \"address\"\nimport chalk from \"chalk\"\nimport url from \"url\"\n\nexport interface IPreparedUrls {\n  lanUrlForConfig: string\n  lanUrlForTerminal: string\n  localUrlForTerminal: string\n  localUrlForBrowser: string\n}\n\nexport function prepareUrls(\n  protocol: `http` | `https`,\n  host: string,\n  port: number\n): IPreparedUrls {\n  const formatUrl = (hostname: string): string =>\n    url.format({\n      protocol,\n      hostname,\n      port,\n      pathname: `/`,\n    })\n  const prettyPrintUrl = (hostname: string): string =>\n    url.format({\n      protocol,\n      hostname,\n      port: chalk.bold(String(port)),\n      pathname: `/`,\n    })\n\n  const isUnspecifiedHost = host === `0.0.0.0` || host === `::`\n  let prettyHost = host\n  let lanUrlForConfig\n  let lanUrlForTerminal\n  if (isUnspecifiedHost) {\n    prettyHost = `localhost`\n\n    try {\n      // This can only return an IPv4 address\n      lanUrlForConfig = address.ip()\n      if (lanUrlForConfig) {\n        // Check if the address is a private ip\n        // https://en.wikipedia.org/wiki/Private_network#Private_IPv4_address_spaces\n        if (\n          /^10[.]|^172[.](1[6-9]|2[0-9]|3[0-1])[.]|^192[.]168[.]/.test(\n            lanUrlForConfig\n          )\n        ) {\n          // Address is private, format it for later use\n          lanUrlForTerminal = prettyPrintUrl(lanUrlForConfig)\n        } else {\n          // Address is not private, so we will discard it\n          lanUrlForConfig = undefined\n        }\n      }\n    } catch (_e) {\n      // ignored\n    }\n  }\n  // TODO collect errors (GraphQL + Webpack) in Redux so we\n  // can clear terminal and print them out on every compile.\n  // Borrow pretty printing code from webpack plugin.\n  const localUrlForTerminal = prettyPrintUrl(prettyHost)\n  const localUrlForBrowser = formatUrl(prettyHost)\n  return {\n    lanUrlForConfig,\n    lanUrlForTerminal,\n    localUrlForTerminal,\n    localUrlForBrowser,\n  }\n}\n"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AASO,SAASA,WAAT,CACLC,QADK,EAELC,IAFK,EAGLC,IAHK,EAIU;EACf,MAAMC,SAAS,GAAIC,QAAD,IAChBC,YAAA,CAAIC,MAAJ,CAAW;IACTN,QADS;IAETI,QAFS;IAGTF,IAHS;IAITK,QAAQ,EAAG;EAJF,CAAX,CADF;;EAOA,MAAMC,cAAc,GAAIJ,QAAD,IACrBC,YAAA,CAAIC,MAAJ,CAAW;IACTN,QADS;IAETI,QAFS;IAGTF,IAAI,EAAEO,cAAA,CAAMC,IAAN,CAAWC,MAAM,CAACT,IAAD,CAAjB,CAHG;IAITK,QAAQ,EAAG;EAJF,CAAX,CADF;;EAQA,MAAMK,iBAAiB,GAAGX,IAAI,KAAM,SAAV,IAAsBA,IAAI,KAAM,IAA1D;EACA,IAAIY,UAAU,GAAGZ,IAAjB;EACA,IAAIa,eAAJ;EACA,IAAIC,iBAAJ;;EACA,IAAIH,iBAAJ,EAAuB;IACrBC,UAAU,GAAI,WAAd;;IAEA,IAAI;MACF;MACAC,eAAe,GAAGE,gBAAA,CAAQC,EAAR,EAAlB;;MACA,IAAIH,eAAJ,EAAqB;QACnB;QACA;QACA,IACE,wDAAwDI,IAAxD,CACEJ,eADF,CADF,EAIE;UACA;UACAC,iBAAiB,GAAGP,cAAc,CAACM,eAAD,CAAlC;QACD,CAPD,MAOO;UACL;UACAA,eAAe,GAAGK,SAAlB;QACD;MACF;IACF,CAlBD,CAkBE,OAAOC,EAAP,EAAW,CACX;IACD;EACF,CA5Cc,CA6Cf;EACA;EACA;;;EACA,MAAMC,mBAAmB,GAAGb,cAAc,CAACK,UAAD,CAA1C;EACA,MAAMS,kBAAkB,GAAGnB,SAAS,CAACU,UAAD,CAApC;EACA,OAAO;IACLC,eADK;IAELC,iBAFK;IAGLM,mBAHK;IAILC;EAJK,CAAP;AAMD"}