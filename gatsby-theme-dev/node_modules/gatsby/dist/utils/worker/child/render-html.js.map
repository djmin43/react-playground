{"version":3,"file":"render-html.js","names":["join","path","posix","lastSessionId","htmlComponentRenderer","webpackStats","resourcesForTemplateCache","Map","inFlightResourcesForTemplate","clearCaches","clearStaticQueryCaches","clear","clearAssetsMappingCache","doGetResourcesForTemplate","pageData","scriptsAndStyles","getScriptsAndStylesForTemplate","componentChunkName","staticQueryContext","getStaticQueryContext","staticQueryHashes","getResourcesForTemplate","memoizedResourcesForTemplate","get","inFlight","doWorkPromise","set","resources","delete","truncateObjStrings","obj","key","length","renderHTMLProd","htmlComponentRendererPath","paths","envVars","sessionId","webpackCompilationHash","publicDir","process","cwd","isPreview","env","GATSBY_IS_PREVIEW","unsafeBuiltinsUsageByPagePath","previewErrors","forEach","value","require","readWebpackStats","global","unsafeBuiltinUsage","Bluebird","map","pagePath","readPageData","resourcesForTemplate","html","unsafeBuiltinsUsage","default","fs","outputFile","generateHtmlPath","e","context","truncatedPageData","stack","JSON","stringify","message","code","name","concurrency","renderHTMLDev","outputDir","htmlString"],"sources":["../../../../src/utils/worker/child/render-html.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-namespace */\n\nimport fs from \"fs-extra\"\nimport Bluebird from \"bluebird\"\nimport * as path from \"path\"\nimport { generateHtmlPath } from \"gatsby-core-utils\"\nimport { truncate } from \"lodash\"\n\nimport {\n  readWebpackStats,\n  getScriptsAndStylesForTemplate,\n  clearCache as clearAssetsMappingCache,\n} from \"../../client-assets-for-template\"\nimport { IPageDataWithQueryResult, readPageData } from \"../../page-data\"\nimport type { IRenderHtmlResult } from \"../../../commands/build-html\"\nimport {\n  clearStaticQueryCaches,\n  IResourcesForTemplate,\n  getStaticQueryContext,\n} from \"../../static-query-utils\"\n// we want to force posix-style joins, so Windows doesn't produce backslashes for urls\nconst { join } = path.posix\n\ndeclare global {\n  namespace NodeJS {\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    interface Global {\n      unsafeBuiltinUsage: Array<string> | undefined\n    }\n  }\n}\n\n/**\n * Used to track if renderHTMLProd / renderHTMLDev are called within same \"session\" (from same renderHTMLQueue call).\n * As long as sessionId remains the same we can rely on memoized/cached resources for templates, css file content for inlining and static query results.\n * If session changes we invalidate our memoization caches.\n */\nlet lastSessionId = 0\nlet htmlComponentRenderer\nlet webpackStats\n\nconst resourcesForTemplateCache = new Map<string, IResourcesForTemplate>()\nconst inFlightResourcesForTemplate = new Map<\n  string,\n  Promise<IResourcesForTemplate>\n>()\n\nfunction clearCaches(): void {\n  clearStaticQueryCaches()\n  resourcesForTemplateCache.clear()\n  inFlightResourcesForTemplate.clear()\n\n  clearAssetsMappingCache()\n}\n\nasync function doGetResourcesForTemplate(\n  pageData: IPageDataWithQueryResult\n): Promise<IResourcesForTemplate> {\n  const scriptsAndStyles = await getScriptsAndStylesForTemplate(\n    pageData.componentChunkName,\n    webpackStats\n  )\n\n  const { staticQueryContext } = await getStaticQueryContext(\n    pageData.staticQueryHashes\n  )\n\n  return {\n    staticQueryContext,\n    ...scriptsAndStyles,\n  }\n}\n\nasync function getResourcesForTemplate(\n  pageData: IPageDataWithQueryResult\n): Promise<IResourcesForTemplate> {\n  const memoizedResourcesForTemplate = resourcesForTemplateCache.get(\n    pageData.componentChunkName\n  )\n  if (memoizedResourcesForTemplate) {\n    return memoizedResourcesForTemplate\n  }\n\n  const inFlight = inFlightResourcesForTemplate.get(pageData.componentChunkName)\n  if (inFlight) {\n    return inFlight\n  }\n\n  const doWorkPromise = doGetResourcesForTemplate(pageData)\n  inFlightResourcesForTemplate.set(pageData.componentChunkName, doWorkPromise)\n\n  const resources = await doWorkPromise\n\n  resourcesForTemplateCache.set(pageData.componentChunkName, resources)\n  inFlightResourcesForTemplate.delete(pageData.componentChunkName)\n\n  return resources\n}\n\nconst truncateObjStrings = (obj): IPageDataWithQueryResult => {\n  // Recursively truncate strings nested in object\n  // These objs can be quite large, but we want to preserve each field\n  for (const key in obj) {\n    if (typeof obj[key] === `object` && obj[key] !== null) {\n      truncateObjStrings(obj[key])\n    } else if (typeof obj[key] === `string`) {\n      obj[key] = truncate(obj[key], { length: 250 })\n    }\n  }\n\n  return obj\n}\n\nexport const renderHTMLProd = async ({\n  htmlComponentRendererPath,\n  paths,\n  envVars,\n  sessionId,\n  webpackCompilationHash,\n}: {\n  htmlComponentRendererPath: string\n  paths: Array<string>\n  envVars: Array<[string, string | undefined]>\n  sessionId: number\n  webpackCompilationHash: string\n}): Promise<IRenderHtmlResult> => {\n  const publicDir = join(process.cwd(), `public`)\n  const isPreview = process.env.GATSBY_IS_PREVIEW === `true`\n\n  const unsafeBuiltinsUsageByPagePath = {}\n  const previewErrors = {}\n\n  // Check if we need to do setup and cache clearing. Within same session we can reuse memoized data,\n  // but it's not safe to reuse them in different sessions. Check description of `lastSessionId` for more details\n  if (sessionId !== lastSessionId) {\n    clearCaches()\n\n    // This is being executed in child process, so we need to set some vars\n    // for modules that aren't bundled by webpack.\n    envVars.forEach(([key, value]) => (process.env[key] = value))\n\n    htmlComponentRenderer = require(htmlComponentRendererPath)\n\n    webpackStats = await readWebpackStats(publicDir)\n\n    lastSessionId = sessionId\n\n    if (global.unsafeBuiltinUsage && global.unsafeBuiltinUsage.length > 0) {\n      unsafeBuiltinsUsageByPagePath[`__import_time__`] =\n        global.unsafeBuiltinUsage\n    }\n  }\n\n  await Bluebird.map(\n    paths,\n    async pagePath => {\n      try {\n        const pageData = await readPageData(publicDir, pagePath)\n        const resourcesForTemplate = await getResourcesForTemplate(pageData)\n\n        const { html, unsafeBuiltinsUsage } =\n          await htmlComponentRenderer.default({\n            pagePath,\n            pageData,\n            webpackCompilationHash,\n            ...resourcesForTemplate,\n          })\n\n        if (unsafeBuiltinsUsage.length > 0) {\n          unsafeBuiltinsUsageByPagePath[pagePath] = unsafeBuiltinsUsage\n        }\n\n        await fs.outputFile(generateHtmlPath(publicDir, pagePath), html)\n      } catch (e) {\n        if (e.unsafeBuiltinsUsage && e.unsafeBuiltinsUsage.length > 0) {\n          unsafeBuiltinsUsageByPagePath[pagePath] = e.unsafeBuiltinsUsage\n        }\n        // add some context to error so we can display more helpful message\n        e.context = {\n          path: pagePath,\n          unsafeBuiltinsUsageByPagePath,\n        }\n\n        // If we're in Preview-mode, write out a simple error html file.\n        if (isPreview) {\n          const pageData = await readPageData(publicDir, pagePath)\n          const truncatedPageData = truncateObjStrings(pageData)\n\n          const html = `<h1>Preview build error</h1>\n        <p>There was an error when building the preview page for this page (\"${pagePath}\").</p>\n        <h3>Error</h3>\n        <pre><code>${e.stack}</code></pre>\n        <h3>Page component id</h3>\n        <p><code>${pageData.componentChunkName}</code></p>\n        <h3>Page data</h3>\n        <pre><code>${JSON.stringify(truncatedPageData, null, 4)}</code></pre>`\n\n          await fs.outputFile(generateHtmlPath(publicDir, pagePath), html)\n          previewErrors[pagePath] = {\n            e,\n            message: e.message,\n            code: e.code,\n            stack: e.stack,\n            name: e.name,\n          }\n        } else {\n          throw e\n        }\n      }\n    },\n    { concurrency: 2 }\n  )\n\n  return { unsafeBuiltinsUsageByPagePath, previewErrors }\n}\n\n// TODO: remove when DEV_SSR is done\nexport const renderHTMLDev = async ({\n  htmlComponentRendererPath,\n  paths,\n  envVars,\n  sessionId,\n}: {\n  htmlComponentRendererPath: string\n  paths: Array<string>\n  envVars: Array<[string, string | undefined]>\n  sessionId: number\n}): Promise<Array<unknown>> => {\n  const outputDir = join(process.cwd(), `.cache`, `develop-html`)\n\n  // Check if we need to do setup and cache clearing. Within same session we can reuse memoized data,\n  // but it's not safe to reuse them in different sessions. Check description of `lastSessionId` for more details\n  if (sessionId !== lastSessionId) {\n    clearCaches()\n\n    // This is being executed in child process, so we need to set some vars\n    // for modules that aren't bundled by webpack.\n    envVars.forEach(([key, value]) => (process.env[key] = value))\n\n    htmlComponentRenderer = require(htmlComponentRendererPath)\n\n    lastSessionId = sessionId\n  }\n\n  return Bluebird.map(\n    paths,\n    async pagePath => {\n      try {\n        const htmlString = await htmlComponentRenderer.default({\n          pagePath,\n        })\n        return fs.outputFile(generateHtmlPath(outputDir, pagePath), htmlString)\n      } catch (e) {\n        // add some context to error so we can display more helpful message\n        e.context = {\n          path: pagePath,\n        }\n        throw e\n      }\n    },\n    { concurrency: 2 }\n  )\n}\n"],"mappings":"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"}