{"version":3,"file":"file-writes.js","names":["OUTPUT_PATHS","schema","fragments","config","writeGraphQLConfig","program","base","directory","outputPath","join","fs","existsSync","reporter","verbose","configJSONString","JSON","stringify","documents","extensions","endpoints","default","url","https","host","port","outputFile","err","error","writeGraphQLFragments","definitions","fragmentString","Array","from","entries","filter","_","def","isFragment","map","filePath","printedAst","writeGraphQLSchema","schemaSDLString","printSchema","stabilizeSchema","commentDescriptions"],"sources":["../../../src/utils/graphql-typegen/file-writes.ts"],"sourcesContent":["import * as fs from \"fs-extra\"\nimport { join } from \"path\"\nimport { GraphQLSchema, printSchema } from \"graphql\"\nimport reporter from \"gatsby-cli/lib/reporter\"\nimport type { IDefinitionMeta, IStateProgram } from \"../../redux/types\"\nimport { stabilizeSchema } from \"./utils\"\n\nconst OUTPUT_PATHS = {\n  schema: `.cache/typegen/schema.graphql`,\n  fragments: `.cache/typegen/fragments.graphql`,\n  config: `.cache/typegen/graphql.config.json`,\n}\n\nexport async function writeGraphQLConfig(\n  program: IStateProgram\n): Promise<void> {\n  try {\n    const base = program.directory\n    const outputPath = join(base, OUTPUT_PATHS.config)\n\n    if (fs.existsSync(outputPath)) {\n      reporter.verbose(`graphql.config.json already exists. Skipping...`)\n      return\n    }\n\n    const configJSONString = JSON.stringify(\n      {\n        schema: OUTPUT_PATHS.schema,\n        documents: [`src/**/**.{ts,js,tsx,jsx}`, OUTPUT_PATHS.fragments],\n        extensions: {\n          endpoints: {\n            default: {\n              url: `${program.https ? `https://` : `http://`}${program.host}:${\n                program.port\n              }/___graphql`,\n            },\n          },\n        },\n      },\n      null,\n      2\n    )\n\n    await fs.outputFile(outputPath, configJSONString)\n    reporter.verbose(`Successfully created graphql.config.json`)\n  } catch (err) {\n    reporter.error(`Failed to write graphql.config.json`, err)\n  }\n}\n\nexport async function writeGraphQLFragments(\n  directory: IStateProgram[\"directory\"],\n  definitions: Map<string, IDefinitionMeta>\n): Promise<void> {\n  try {\n    const fragmentString = Array.from(definitions.entries())\n      .filter(([_, def]) => def.isFragment)\n      .map(([_, def]) => `# ${def.filePath}\\n${def.printedAst}`)\n      .join(`\\n`)\n\n    await fs.outputFile(join(directory, OUTPUT_PATHS.fragments), fragmentString)\n    reporter.verbose(`Wrote fragments.graphql file to .cache`)\n  } catch (err) {\n    reporter.error(`Failed to write fragments.graphql to .cache`, err)\n  }\n}\n\nexport async function writeGraphQLSchema(\n  directory: IStateProgram[\"directory\"],\n  schema: GraphQLSchema\n): Promise<void> {\n  try {\n    const schemaSDLString = printSchema(stabilizeSchema(schema), {\n      commentDescriptions: true,\n    })\n\n    await fs.outputFile(join(directory, OUTPUT_PATHS.schema), schemaSDLString)\n    reporter.verbose(`Successfully created schema.graphql`)\n  } catch (err) {\n    reporter.error(`Failed to write schema.graphql to .cache`, err)\n  }\n}\n"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;;;;;AAEA,MAAMA,YAAY,GAAG;EACnBC,MAAM,EAAG,+BADU;EAEnBC,SAAS,EAAG,kCAFO;EAGnBC,MAAM,EAAG;AAHU,CAArB;;AAMO,eAAeC,kBAAf,CACLC,OADK,EAEU;EACf,IAAI;IACF,MAAMC,IAAI,GAAGD,OAAO,CAACE,SAArB;IACA,MAAMC,UAAU,GAAG,IAAAC,UAAA,EAAKH,IAAL,EAAWN,YAAY,CAACG,MAAxB,CAAnB;;IAEA,IAAIO,EAAE,CAACC,UAAH,CAAcH,UAAd,CAAJ,EAA+B;MAC7BI,iBAAA,CAASC,OAAT,CAAkB,iDAAlB;;MACA;IACD;;IAED,MAAMC,gBAAgB,GAAGC,IAAI,CAACC,SAAL,CACvB;MACEf,MAAM,EAAED,YAAY,CAACC,MADvB;MAEEgB,SAAS,EAAE,CAAE,2BAAF,EAA8BjB,YAAY,CAACE,SAA3C,CAFb;MAGEgB,UAAU,EAAE;QACVC,SAAS,EAAE;UACTC,OAAO,EAAE;YACPC,GAAG,EAAG,GAAEhB,OAAO,CAACiB,KAAR,GAAiB,UAAjB,GAA8B,SAAS,GAAEjB,OAAO,CAACkB,IAAK,IAC5DlB,OAAO,CAACmB,IACT;UAHM;QADA;MADD;IAHd,CADuB,EAcvB,IAduB,EAevB,CAfuB,CAAzB;IAkBA,MAAMd,EAAE,CAACe,UAAH,CAAcjB,UAAd,EAA0BM,gBAA1B,CAAN;;IACAF,iBAAA,CAASC,OAAT,CAAkB,0CAAlB;EACD,CA7BD,CA6BE,OAAOa,GAAP,EAAY;IACZd,iBAAA,CAASe,KAAT,CAAgB,qCAAhB,EAAsDD,GAAtD;EACD;AACF;;AAEM,eAAeE,qBAAf,CACLrB,SADK,EAELsB,WAFK,EAGU;EACf,IAAI;IACF,MAAMC,cAAc,GAAGC,KAAK,CAACC,IAAN,CAAWH,WAAW,CAACI,OAAZ,EAAX,EACpBC,MADoB,CACb,CAAC,CAACC,CAAD,EAAIC,GAAJ,CAAD,KAAcA,GAAG,CAACC,UADL,EAEpBC,GAFoB,CAEhB,CAAC,CAACH,CAAD,EAAIC,GAAJ,CAAD,KAAe,KAAIA,GAAG,CAACG,QAAS,KAAIH,GAAG,CAACI,UAAW,EAFnC,EAGpB/B,IAHoB,CAGd,IAHc,CAAvB;IAKA,MAAMC,EAAE,CAACe,UAAH,CAAc,IAAAhB,UAAA,EAAKF,SAAL,EAAgBP,YAAY,CAACE,SAA7B,CAAd,EAAuD4B,cAAvD,CAAN;;IACAlB,iBAAA,CAASC,OAAT,CAAkB,wCAAlB;EACD,CARD,CAQE,OAAOa,GAAP,EAAY;IACZd,iBAAA,CAASe,KAAT,CAAgB,6CAAhB,EAA8DD,GAA9D;EACD;AACF;;AAEM,eAAee,kBAAf,CACLlC,SADK,EAELN,MAFK,EAGU;EACf,IAAI;IACF,MAAMyC,eAAe,GAAG,IAAAC,oBAAA,EAAY,IAAAC,sBAAA,EAAgB3C,MAAhB,CAAZ,EAAqC;MAC3D4C,mBAAmB,EAAE;IADsC,CAArC,CAAxB;IAIA,MAAMnC,EAAE,CAACe,UAAH,CAAc,IAAAhB,UAAA,EAAKF,SAAL,EAAgBP,YAAY,CAACC,MAA7B,CAAd,EAAoDyC,eAApD,CAAN;;IACA9B,iBAAA,CAASC,OAAT,CAAkB,qCAAlB;EACD,CAPD,CAOE,OAAOa,GAAP,EAAY;IACZd,iBAAA,CAASe,KAAT,CAAgB,0CAAhB,EAA2DD,GAA3D;EACD;AACF"}