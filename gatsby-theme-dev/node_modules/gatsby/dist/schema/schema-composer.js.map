{"version":3,"file":"schema-composer.js","names":["createSchemaComposer","fieldExtensions","schemaComposer","SchemaComposer","getNodeInterface","getOrCreateRemoteFileInterface","add","GraphQLDate","GraphQLJSON","GatsbyImageDataScalar","addDirectives"],"sources":["../../src/schema/schema-composer.ts"],"sourcesContent":["import { SchemaComposer, GraphQLJSON } from \"graphql-compose\"\nimport { addDirectives, GraphQLFieldExtensionDefinition } from \"./extensions\"\nimport { GraphQLDate } from \"./types/date\"\nimport { IGatsbyResolverContext } from \"./type-definitions\"\nimport { GatsbyImageDataScalar } from \"./types/media\"\nimport { getNodeInterface } from \"./types/node-interface\"\nimport { getOrCreateRemoteFileInterface } from \"./types/remote-file-interface\"\n\nexport const createSchemaComposer = <TSource, TArgs>({\n  fieldExtensions,\n}: GraphQLFieldExtensionDefinition = {}): SchemaComposer<\n  IGatsbyResolverContext<TSource, TArgs>\n> => {\n  const schemaComposer: SchemaComposer<IGatsbyResolverContext<TSource, TArgs>> =\n    new SchemaComposer()\n\n  // set default interfaces so plugins can use them\n  getNodeInterface({ schemaComposer })\n  getOrCreateRemoteFileInterface(schemaComposer)\n\n  schemaComposer.add(GraphQLDate)\n  schemaComposer.add(GraphQLJSON)\n  schemaComposer.add(GatsbyImageDataScalar)\n  addDirectives({ schemaComposer, fieldExtensions })\n  return schemaComposer\n}\n"],"mappings":";;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AAEO,MAAMA,oBAAoB,GAAG,CAAiB;EACnDC;AADmD,IAEhB,EAFD,KAI/B;EACH,MAAMC,cAAsE,GAC1E,IAAIC,8BAAJ,EADF,CADG,CAIH;;EACA,IAAAC,+BAAA,EAAiB;IAAEF;EAAF,CAAjB;EACA,IAAAG,mDAAA,EAA+BH,cAA/B;EAEAA,cAAc,CAACI,GAAf,CAAmBC,iBAAnB;EACAL,cAAc,CAACI,GAAf,CAAmBE,2BAAnB;EACAN,cAAc,CAACI,GAAf,CAAmBG,4BAAnB;EACA,IAAAC,yBAAA,EAAc;IAAER,cAAF;IAAkBD;EAAlB,CAAd;EACA,OAAOC,cAAP;AACD,CAjBM"}