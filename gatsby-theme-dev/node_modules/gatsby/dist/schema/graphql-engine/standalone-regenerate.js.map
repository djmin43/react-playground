{"version":3,"file":"standalone-regenerate.js","names":["run","console","log","loadConfigAndPlugins","siteDirectory","process","cwd","fs","remove","e","buildActivityTimer","reporter","activityTimer","start","createGraphqlEngineBundle","err","panic","end","validateEnginesActivity","validateEngines","error","id","context"],"sources":["../../../src/schema/graphql-engine/standalone-regenerate.ts"],"sourcesContent":["#!/usr/bin/env node\n\n/*\nthis is used for development purposes only\nto be able to run `gatsby build` once to source data\nand print schema and then just rebundle graphql-engine\nwith source file changes and test re-built engine quickly\n\nUsage:\nThere need to be at least one successful `gatsby build`\nbefore starting to use this script (warm up datastore,\ngenerate \"page-ssr\" bundle). Once that's done you can\nrun following command in test site directory:\n\n```shell\nnode node_modules/gatsby/dist/schema/graphql-engine/standalone-regenerate.js\n```\n*/\n\nimport { createGraphqlEngineBundle } from \"./bundle-webpack\"\nimport reporter from \"gatsby-cli/lib/reporter\"\nimport { loadConfigAndPlugins } from \"../../utils/worker/child/load-config-and-plugins\"\nimport * as fs from \"fs-extra\"\nimport { validateEngines } from \"../../utils/validate-engines\"\n\nasync function run(): Promise<void> {\n  // load config\n  console.log(`loading config and plugins`)\n  await loadConfigAndPlugins({\n    siteDirectory: process.cwd(),\n  })\n\n  try {\n    console.log(`clearing webpack cache\\n\\n`)\n    // get rid of cache if it exist\n    await fs.remove(process.cwd() + `/.cache/webpack/query-engine`)\n  } catch (e) {\n    // eslint-disable no-empty\n  }\n\n  // recompile\n  const buildActivityTimer = reporter.activityTimer(\n    `Building Rendering Engines`\n  )\n  try {\n    buildActivityTimer.start()\n    await createGraphqlEngineBundle(process.cwd(), reporter, true)\n  } catch (err) {\n    buildActivityTimer.panic(err)\n  } finally {\n    buildActivityTimer.end()\n  }\n\n  // validate\n  const validateEnginesActivity = reporter.activityTimer(\n    `Validating Rendering Engines`\n  )\n  validateEnginesActivity.start()\n  try {\n    await validateEngines(process.cwd())\n  } catch (error) {\n    validateEnginesActivity.panic({ id: `98001`, context: {}, error })\n  } finally {\n    validateEnginesActivity.end()\n  }\n\n  console.log(`DONE`)\n}\n\nrun()\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAEA;;AACA;;AACA;;AACA;;AACA;;;;;;AAEA,eAAeA,GAAf,GAAoC;EAClC;EACAC,OAAO,CAACC,GAAR,CAAa,4BAAb;EACA,MAAM,IAAAC,0CAAA,EAAqB;IACzBC,aAAa,EAAEC,OAAO,CAACC,GAAR;EADU,CAArB,CAAN;;EAIA,IAAI;IACFL,OAAO,CAACC,GAAR,CAAa,4BAAb,EADE,CAEF;;IACA,MAAMK,EAAE,CAACC,MAAH,CAAUH,OAAO,CAACC,GAAR,KAAiB,8BAA3B,CAAN;EACD,CAJD,CAIE,OAAOG,CAAP,EAAU,CACV;EACD,CAbiC,CAelC;;;EACA,MAAMC,kBAAkB,GAAGC,iBAAA,CAASC,aAAT,CACxB,4BADwB,CAA3B;;EAGA,IAAI;IACFF,kBAAkB,CAACG,KAAnB;IACA,MAAM,IAAAC,wCAAA,EAA0BT,OAAO,CAACC,GAAR,EAA1B,EAAyCK,iBAAzC,EAAmD,IAAnD,CAAN;EACD,CAHD,CAGE,OAAOI,GAAP,EAAY;IACZL,kBAAkB,CAACM,KAAnB,CAAyBD,GAAzB;EACD,CALD,SAKU;IACRL,kBAAkB,CAACO,GAAnB;EACD,CA1BiC,CA4BlC;;;EACA,MAAMC,uBAAuB,GAAGP,iBAAA,CAASC,aAAT,CAC7B,8BAD6B,CAAhC;;EAGAM,uBAAuB,CAACL,KAAxB;;EACA,IAAI;IACF,MAAM,IAAAM,gCAAA,EAAgBd,OAAO,CAACC,GAAR,EAAhB,CAAN;EACD,CAFD,CAEE,OAAOc,KAAP,EAAc;IACdF,uBAAuB,CAACF,KAAxB,CAA8B;MAAEK,EAAE,EAAG,OAAP;MAAeC,OAAO,EAAE,EAAxB;MAA4BF;IAA5B,CAA9B;EACD,CAJD,SAIU;IACRF,uBAAuB,CAACD,GAAxB;EACD;;EAEDhB,OAAO,CAACC,GAAR,CAAa,MAAb;AACD;;AAEDF,GAAG"}