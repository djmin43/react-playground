{"version":3,"file":"index.js","names":["PAGE_QUERY_ENQUEUING_TIMEOUT","queryStates","initial","id","on","SOURCE_FILE_CHANGED","actions","QUERY_RUN_REQUESTED","states","extractingQueries","invoke","src","onDone","target","waitingPendingQueries","after","writingRequires","calculatingDirtyQueries","entry","assign","pendingQueryRuns","Set","currentlyHandledPendingQueryRuns","runningStaticQueries","runningPageQueries","waitingForJobs","always","cond","ctx","filesDirty","size","done","type","queryRunningMachine","createMachine","queryActions","services","queryRunningServices"],"sources":["../../../src/state-machines/query-running/index.ts"],"sourcesContent":["import { MachineConfig, createMachine, assign } from \"xstate\"\nimport { IQueryRunningContext } from \"./types\"\nimport { queryRunningServices } from \"./services\"\nimport { queryActions } from \"./actions\"\n\n/**\n * This is a child state machine, spawned to perform the query running\n */\n\nconst PAGE_QUERY_ENQUEUING_TIMEOUT = 50\n\nexport const queryStates: MachineConfig<IQueryRunningContext, any, any> = {\n  initial: `extractingQueries`,\n  id: `queryRunningMachine`,\n  on: {\n    SOURCE_FILE_CHANGED: {\n      actions: `markSourceFilesDirty`,\n    },\n    QUERY_RUN_REQUESTED: {\n      actions: `trackRequestedQueryRun`,\n    },\n  },\n  states: {\n    extractingQueries: {\n      id: `extracting-queries`,\n      invoke: {\n        id: `extracting-queries`,\n        src: `extractQueries`,\n        onDone: {\n          target: `waitingPendingQueries`,\n        },\n      },\n    },\n    // This state exists solely because \"extractQueries\" finishes too early.\n    // It finishes before extracted queries are enqueued for execution.\n    // As a result calculateDirtyQueries doesn't see them and they are not executed.\n    //\n    // This happens because extracted queries are enqueued for execution with setTimeout(x, 0)\n    // wrapper in actions of redux/machines/page-component which fires after \"extractQueries\" finishes.\n    //\n    // see https://github.com/gatsbyjs/gatsby/issues/26580\n    //\n    // FIXME: this has to be fixed properly by not leaving \"extractingQueries\" state\n    //   until all extracted queries are enqueued for execution (but requires a refactor)\n    waitingPendingQueries: {\n      id: `waiting-pending-queries`,\n      after: {\n        [PAGE_QUERY_ENQUEUING_TIMEOUT]: {\n          target: `writingRequires`,\n          actions: `markSourceFilesClean`,\n        },\n      },\n    },\n    writingRequires: {\n      invoke: {\n        src: `writeOutRequires`,\n        id: `writing-requires`,\n        onDone: {\n          target: `calculatingDirtyQueries`,\n        },\n      },\n    },\n    calculatingDirtyQueries: {\n      entry: assign<IQueryRunningContext>(({ pendingQueryRuns }) => {\n        return {\n          pendingQueryRuns: new Set(),\n          currentlyHandledPendingQueryRuns: pendingQueryRuns,\n        }\n      }),\n      invoke: {\n        id: `calculating-dirty-queries`,\n        src: `calculateDirtyQueries`,\n        onDone: {\n          target: `runningStaticQueries`,\n          actions: [\n            `assignDirtyQueries`,\n            `clearCurrentlyHandledPendingQueryRuns`,\n          ],\n        },\n      },\n    },\n    runningStaticQueries: {\n      invoke: {\n        src: `runStaticQueries`,\n        id: `running-static-queries`,\n        onDone: {\n          target: `runningPageQueries`,\n        },\n      },\n    },\n    runningPageQueries: {\n      invoke: {\n        src: `runPageQueries`,\n        id: `running-page-queries`,\n        onDone: {\n          target: `waitingForJobs`,\n          actions: `flushPageData`,\n        },\n      },\n    },\n    // This waits for the jobs API to finish\n    waitingForJobs: {\n      // If files are dirty go and extract again\n      always: [\n        {\n          cond: (ctx): boolean => !!ctx.filesDirty,\n          target: `extractingQueries`,\n        },\n        {\n          cond: ({ pendingQueryRuns }): boolean =>\n            !!pendingQueryRuns && pendingQueryRuns.size > 0,\n          target: `calculatingDirtyQueries`,\n        },\n      ],\n      invoke: {\n        src: `waitUntilAllJobsComplete`,\n        id: `waiting-for-jobs`,\n        onDone: {\n          target: `done`,\n        },\n      },\n    },\n    done: {\n      type: `final`,\n    },\n  },\n}\nexport const queryRunningMachine = createMachine(queryStates, {\n  actions: queryActions,\n  services: queryRunningServices,\n})\n"],"mappings":";;;;;AAAA;;AAEA;;AACA;;AAEA;AACA;AACA;AAEA,MAAMA,4BAA4B,GAAG,EAArC;AAEO,MAAMC,WAA0D,GAAG;EACxEC,OAAO,EAAG,mBAD8D;EAExEC,EAAE,EAAG,qBAFmE;EAGxEC,EAAE,EAAE;IACFC,mBAAmB,EAAE;MACnBC,OAAO,EAAG;IADS,CADnB;IAIFC,mBAAmB,EAAE;MACnBD,OAAO,EAAG;IADS;EAJnB,CAHoE;EAWxEE,MAAM,EAAE;IACNC,iBAAiB,EAAE;MACjBN,EAAE,EAAG,oBADY;MAEjBO,MAAM,EAAE;QACNP,EAAE,EAAG,oBADC;QAENQ,GAAG,EAAG,gBAFA;QAGNC,MAAM,EAAE;UACNC,MAAM,EAAG;QADH;MAHF;IAFS,CADb;IAWN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAC,qBAAqB,EAAE;MACrBX,EAAE,EAAG,yBADgB;MAErBY,KAAK,EAAE;QACL,CAACf,4BAAD,GAAgC;UAC9Ba,MAAM,EAAG,iBADqB;UAE9BP,OAAO,EAAG;QAFoB;MAD3B;IAFc,CAtBjB;IA+BNU,eAAe,EAAE;MACfN,MAAM,EAAE;QACNC,GAAG,EAAG,kBADA;QAENR,EAAE,EAAG,kBAFC;QAGNS,MAAM,EAAE;UACNC,MAAM,EAAG;QADH;MAHF;IADO,CA/BX;IAwCNI,uBAAuB,EAAE;MACvBC,KAAK,EAAE,IAAAC,cAAA,EAA6B,CAAC;QAAEC;MAAF,CAAD,KAA0B;QAC5D,OAAO;UACLA,gBAAgB,EAAE,IAAIC,GAAJ,EADb;UAELC,gCAAgC,EAAEF;QAF7B,CAAP;MAID,CALM,CADgB;MAOvBV,MAAM,EAAE;QACNP,EAAE,EAAG,2BADC;QAENQ,GAAG,EAAG,uBAFA;QAGNC,MAAM,EAAE;UACNC,MAAM,EAAG,sBADH;UAENP,OAAO,EAAE,CACN,oBADM,EAEN,uCAFM;QAFH;MAHF;IAPe,CAxCnB;IA2DNiB,oBAAoB,EAAE;MACpBb,MAAM,EAAE;QACNC,GAAG,EAAG,kBADA;QAENR,EAAE,EAAG,wBAFC;QAGNS,MAAM,EAAE;UACNC,MAAM,EAAG;QADH;MAHF;IADY,CA3DhB;IAoENW,kBAAkB,EAAE;MAClBd,MAAM,EAAE;QACNC,GAAG,EAAG,gBADA;QAENR,EAAE,EAAG,sBAFC;QAGNS,MAAM,EAAE;UACNC,MAAM,EAAG,gBADH;UAENP,OAAO,EAAG;QAFJ;MAHF;IADU,CApEd;IA8EN;IACAmB,cAAc,EAAE;MACd;MACAC,MAAM,EAAE,CACN;QACEC,IAAI,EAAGC,GAAD,IAAkB,CAAC,CAACA,GAAG,CAACC,UADhC;QAEEhB,MAAM,EAAG;MAFX,CADM,EAKN;QACEc,IAAI,EAAE,CAAC;UAAEP;QAAF,CAAD,KACJ,CAAC,CAACA,gBAAF,IAAsBA,gBAAgB,CAACU,IAAjB,GAAwB,CAFlD;QAGEjB,MAAM,EAAG;MAHX,CALM,CAFM;MAadH,MAAM,EAAE;QACNC,GAAG,EAAG,0BADA;QAENR,EAAE,EAAG,kBAFC;QAGNS,MAAM,EAAE;UACNC,MAAM,EAAG;QADH;MAHF;IAbM,CA/EV;IAoGNkB,IAAI,EAAE;MACJC,IAAI,EAAG;IADH;EApGA;AAXgE,CAAnE;;AAoHA,MAAMC,mBAAmB,GAAG,IAAAC,qBAAA,EAAcjC,WAAd,EAA2B;EAC5DK,OAAO,EAAE6B,qBADmD;EAE5DC,QAAQ,EAAEC;AAFkD,CAA3B,CAA5B"}