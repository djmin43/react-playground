{"version":3,"file":"query-runner.js","names":["resultHashCache","getResultHashCache","GatsbyCacheLmdb","name","encoding","init","reportLongRunningQueryJob","queryJob","messageParts","componentPath","isPage","path","context","push","JSON","stringify","report","warn","join","panicQueryJobError","errors","urlPath","undefined","queryContext","plugin","pluginCreatorId","structuredErrors","map","e","structuredError","errorParser","message","filePath","location","error","codeFrame","getCodeFrame","query","locations","line","column","panicOnBuild","startQueryJob","graphqlRunner","parentSpan","isPending","timeoutId","setTimeout","queryName","id","finally","clearTimeout","queryRunner","program","store","getState","dispatch","actions","queryStart","result","Object","assign","pageContext","internalComponentName","component","componentChunkName","updatedAt","pluginCreator___NODE","isCreatedByStatefulCreatePages","matchPath","mode","resultJSON","resultHash","crypto","createHash","update","digest","get","pageDataExists","directory","set","savePageQueryResult","type","payload","resultPath","hash","fs","outputFile","pageQueryRun","queryHash"],"sources":["../../src/query/query-runner.ts"],"sourcesContent":["import { Span } from \"opentracing\"\nimport _ from \"lodash\"\nimport fs from \"fs-extra\"\nimport report from \"gatsby-cli/lib/reporter\"\nimport crypto from \"crypto\"\nimport { ExecutionResult, GraphQLError } from \"graphql\"\n\nimport path from \"path\"\nimport { store } from \"../redux\"\nimport { actions } from \"../redux/actions\"\nimport { getCodeFrame } from \"./graphql-errors-codeframe\"\nimport errorParser from \"./error-parser\"\n\nimport { GraphQLRunner } from \"./graphql-runner\"\nimport { IExecutionResult, PageContext } from \"./types\"\nimport { pageDataExists, savePageQueryResult } from \"../utils/page-data\"\nimport GatsbyCacheLmdb from \"../utils/cache-lmdb\"\n\nlet resultHashCache: GatsbyCacheLmdb | undefined\nfunction getResultHashCache(): GatsbyCacheLmdb {\n  if (!resultHashCache) {\n    resultHashCache = new GatsbyCacheLmdb({\n      name: `query-result-hashes`,\n      encoding: `string`,\n    }).init()\n  }\n  return resultHashCache\n}\n\nexport interface IQueryJob {\n  id: string\n  hash?: string\n  query: string\n  componentPath: string\n  context: PageContext\n  isPage: boolean\n  pluginCreatorId?: string\n}\n\nfunction reportLongRunningQueryJob(queryJob): void {\n  const messageParts = [\n    `This query took more than 15s to run â€” which is unusually long and might indicate you're querying too much or have some unoptimized code:`,\n    `File path: ${queryJob.componentPath}`,\n  ]\n\n  if (queryJob.isPage) {\n    const { path, context } = queryJob.context\n    messageParts.push(`URL path: ${path}`)\n\n    if (!_.isEmpty(context)) {\n      messageParts.push(`Context: ${JSON.stringify(context, null, 4)}`)\n    }\n  }\n\n  report.warn(messageParts.join(`\\n`))\n}\n\nfunction panicQueryJobError(\n  queryJob: IQueryJob,\n  errors: ReadonlyArray<GraphQLError>\n): void {\n  let urlPath = undefined\n  let queryContext = {}\n  const plugin = queryJob.pluginCreatorId || `none`\n\n  if (queryJob.isPage) {\n    urlPath = queryJob.context.path\n    queryContext = queryJob.context.context\n  }\n\n  const structuredErrors = errors.map(e => {\n    const structuredError = errorParser({\n      message: e.message,\n      filePath: undefined,\n      location: undefined,\n      error: e,\n    })\n\n    structuredError.context = {\n      ...structuredError.context,\n      codeFrame: getCodeFrame(\n        queryJob.query,\n        e.locations && e.locations[0].line,\n        e.locations && e.locations[0].column\n      ),\n      filePath: queryJob.componentPath,\n      ...(urlPath ? { urlPath } : {}),\n      ...queryContext,\n      plugin,\n    }\n\n    return structuredError\n  })\n\n  report.panicOnBuild(structuredErrors)\n}\n\nasync function startQueryJob(\n  graphqlRunner: GraphQLRunner,\n  queryJob: IQueryJob,\n  parentSpan: Span | undefined\n): Promise<ExecutionResult> {\n  let isPending = true\n\n  // Print out warning when query takes too long\n  const timeoutId = setTimeout(() => {\n    if (isPending) {\n      reportLongRunningQueryJob(queryJob)\n    }\n  }, 15000)\n\n  return graphqlRunner\n    .query(queryJob.query, queryJob.context, {\n      parentSpan,\n      queryName: queryJob.id,\n      componentPath: queryJob.componentPath,\n    })\n    .finally(() => {\n      isPending = false\n      clearTimeout(timeoutId)\n    })\n}\n\nexport async function queryRunner(\n  graphqlRunner: GraphQLRunner,\n  queryJob: IQueryJob,\n  parentSpan: Span | undefined\n): Promise<IExecutionResult> {\n  const { program } = store.getState()\n\n  store.dispatch(\n    actions.queryStart({\n      path: queryJob.id,\n      componentPath: queryJob.componentPath,\n      isPage: queryJob.isPage,\n    })\n  )\n\n  // Run query\n  let result: IExecutionResult\n  // Nothing to do if the query doesn't exist.\n  if (!queryJob.query || queryJob.query === ``) {\n    result = {}\n  } else {\n    result = await startQueryJob(graphqlRunner, queryJob, parentSpan)\n  }\n\n  if (result.errors) {\n    // If there's a graphql error then log the error and exit\n    panicQueryJobError(queryJob, result.errors)\n  }\n\n  // Add the page context onto the results.\n  if (queryJob && queryJob.isPage) {\n    result[`pageContext`] = Object.assign({}, queryJob.context)\n  }\n\n  // Delete internal data from pageContext\n  if (result.pageContext) {\n    delete result.pageContext.path\n    delete result.pageContext.internalComponentName\n    delete result.pageContext.component\n    delete result.pageContext.componentChunkName\n    delete result.pageContext.updatedAt\n    delete result.pageContext.pluginCreator___NODE\n    delete result.pageContext.pluginCreatorId\n    delete result.pageContext.componentPath\n    delete result.pageContext.context\n    delete result.pageContext.isCreatedByStatefulCreatePages\n\n    if (_CFLAGS_.GATSBY_MAJOR === `4`) {\n      // we shouldn't add matchPath to pageContext but technically this is a breaking change so moving it ot v4\n      delete result.pageContext.matchPath\n      delete result.pageContext.mode\n    }\n  }\n\n  const resultJSON = JSON.stringify(result)\n  const resultHash = crypto\n    .createHash(`sha1`)\n    .update(resultJSON)\n    .digest(`base64`)\n\n  const resultHashCache = getResultHashCache()\n  if (\n    resultHash !== (await resultHashCache.get(queryJob.id)) ||\n    (queryJob.isPage &&\n      !pageDataExists(path.join(program.directory, `public`), queryJob.id))\n  ) {\n    await resultHashCache.set(queryJob.id, resultHash)\n\n    if (queryJob.isPage) {\n      // We need to save this temporarily in cache because\n      // this might be incomplete at the moment\n      await savePageQueryResult(program.directory, queryJob.id, resultJSON)\n      store.dispatch({\n        type: `ADD_PENDING_PAGE_DATA_WRITE`,\n        payload: {\n          path: queryJob.id,\n        },\n      })\n    } else {\n      const resultPath = path.join(\n        program.directory,\n        `public`,\n        `page-data`,\n        `sq`,\n        `d`,\n        `${queryJob.hash}.json`\n      )\n      await fs.outputFile(resultPath, resultJSON)\n    }\n  }\n\n  // Broadcast that a page's query has run.\n  store.dispatch(\n    actions.pageQueryRun({\n      path: queryJob.id,\n      componentPath: queryJob.componentPath,\n      isPage: queryJob.isPage,\n      resultHash,\n      queryHash: queryJob.hash,\n    })\n  )\n\n  return result\n}\n"],"mappings":"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"}