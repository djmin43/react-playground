{"version":3,"file":"log-line-function.js","names":["forEach","method","old","console","methodArgs","error","Error","stack","split","indexOf","slice","trace","args","apply","concat","trim"],"sources":["../../src/bootstrap/log-line-function.ts"],"sourcesContent":[";[`log`, `warn`].forEach((method: string): void => {\n  const old = console[method]\n\n  console[method] = (...methodArgs: []): void => {\n    const error: Error = new Error()\n    let stack = error.stack ? error.stack.split(/\\n/) : []\n\n    // Chrome includes a single \"Error\" line, FF doesn't.\n    if (stack[0].indexOf(`Error`) === 0) {\n      stack = stack.slice(1)\n    }\n\n    const [, trace] = stack[1] || ``\n    const args: Array<string> = ([] as Array<string>).slice\n      .apply(methodArgs)\n      .concat([trace.trim()])\n\n    return old.apply(console, args)\n  }\n})\n"],"mappings":";;AAAA;AAAC,CAAE,KAAF,EAAS,MAAT,EAAgBA,OAAhB,CAAyBC,MAAD,IAA0B;EACjD,MAAMC,GAAG,GAAGC,OAAO,CAACF,MAAD,CAAnB;;EAEAE,OAAO,CAACF,MAAD,CAAP,GAAkB,CAAC,GAAGG,UAAJ,KAA6B;IAC7C,MAAMC,KAAY,GAAG,IAAIC,KAAJ,EAArB;IACA,IAAIC,KAAK,GAAGF,KAAK,CAACE,KAAN,GAAcF,KAAK,CAACE,KAAN,CAAYC,KAAZ,CAAkB,IAAlB,CAAd,GAAwC,EAApD,CAF6C,CAI7C;;IACA,IAAID,KAAK,CAAC,CAAD,CAAL,CAASE,OAAT,CAAkB,OAAlB,MAA8B,CAAlC,EAAqC;MACnCF,KAAK,GAAGA,KAAK,CAACG,KAAN,CAAY,CAAZ,CAAR;IACD;;IAED,MAAM,GAAGC,KAAH,IAAYJ,KAAK,CAAC,CAAD,CAAL,IAAa,EAA/B;IACA,MAAMK,IAAmB,GAAI,EAAD,CAAsBF,KAAtB,CACzBG,KADyB,CACnBT,UADmB,EAEzBU,MAFyB,CAElB,CAACH,KAAK,CAACI,IAAN,EAAD,CAFkB,CAA5B;IAIA,OAAOb,GAAG,CAACW,KAAJ,CAAUV,OAAV,EAAmBS,IAAnB,CAAP;EACD,CAfD;AAgBD,CAnBA"}