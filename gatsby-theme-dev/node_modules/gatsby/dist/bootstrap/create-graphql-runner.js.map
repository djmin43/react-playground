{"version":3,"file":"create-graphql-runner.js","names":["createGraphQLRunner","store","reporter","parentSpan","graphqlTracing","undefined","runner","GraphQLRunner","eventTypes","forEach","type","emitter","on","query","context","queryName","then","result","errors","structuredErrors","map","e","file","stackTrace","parse","find","test","getFunctionName","structuredError","errorParser","message","location","start","line","getLineNumber","column","getColumnNumber","filePath","getFileName","error","fromGraphQLFunction","filter","Boolean","length","panicOnBuild"],"sources":["../../src/bootstrap/create-graphql-runner.ts"],"sourcesContent":["import stackTrace from \"stack-trace\"\nimport { Span } from \"opentracing\"\nimport { ExecutionResult, Source } from \"graphql\"\nimport { Store } from \"redux\"\n\nimport { GraphQLRunner } from \"../query/graphql-runner\"\nimport errorParser from \"../query/error-parser\"\nimport { emitter } from \"../redux\"\nimport { Reporter } from \"../..\"\nimport { IGatsbyState } from \"../redux/types\"\nimport { IMatch } from \"../types\"\n\nexport type Runner = (\n  query: string | Source,\n  context: Record<string, any>\n) => Promise<ExecutionResult>\n\nexport const createGraphQLRunner = (\n  store: Store<IGatsbyState>,\n  reporter: Reporter,\n  {\n    parentSpan,\n    graphqlTracing,\n  }: { parentSpan: Span | undefined; graphqlTracing?: boolean } = {\n    parentSpan: undefined,\n    graphqlTracing: false,\n  }\n): Runner => {\n  // TODO: Move tracking of changed state inside GraphQLRunner itself. https://github.com/gatsbyjs/gatsby/issues/20941\n  let runner: GraphQLRunner | undefined = new GraphQLRunner(store, {\n    graphqlTracing,\n  })\n\n  const eventTypes: Array<string> = [\n    `DELETE_CACHE`,\n    `CREATE_NODE`,\n    `DELETE_NODE`,\n    `SET_SCHEMA_COMPOSER`,\n    `SET_SCHEMA`,\n    `ADD_FIELD_TO_NODE`,\n    `ADD_CHILD_NODE_TO_PARENT_NODE`,\n  ]\n\n  eventTypes.forEach(type => {\n    emitter.on(type, () => {\n      runner = undefined\n    })\n  })\n\n  return (query, context): ReturnType<Runner> => {\n    if (!runner) {\n      runner = new GraphQLRunner(store, {\n        graphqlTracing,\n      })\n    }\n    return runner\n      .query(query, context, {\n        queryName: `gatsby-node query`,\n        parentSpan,\n      })\n      .then(result => {\n        if (result.errors) {\n          const structuredErrors = result.errors\n            .map(e => {\n              // Find the file where graphql was called.\n              const file = stackTrace\n                .parse(e)\n                .find(file => /createPages/.test(file.getFunctionName()))\n\n              if (file) {\n                const structuredError = errorParser({\n                  message: e.message,\n                  location: {\n                    start: {\n                      line: file.getLineNumber(),\n                      column: file.getColumnNumber(),\n                    },\n                  },\n                  filePath: file.getFileName(),\n                  error: e,\n                })\n                structuredError.context = {\n                  ...structuredError.context,\n                  fromGraphQLFunction: true,\n                }\n                return structuredError\n              }\n\n              return null\n            })\n            .filter(Boolean as unknown as (match) => match is IMatch)\n\n          if (structuredErrors.length) {\n            // panic on build exits the process\n            reporter.panicOnBuild(structuredErrors)\n          }\n        }\n\n        return result\n      })\n  }\n}\n"],"mappings":";;;;;;;AAAA;;AAKA;;AACA;;AACA;;AAUO,MAAMA,mBAAmB,GAAG,CACjCC,KADiC,EAEjCC,QAFiC,EAGjC;EACEC,UADF;EAEEC;AAFF,IAGgE;EAC9DD,UAAU,EAAEE,SADkD;EAE9DD,cAAc,EAAE;AAF8C,CAN/B,KAUtB;EACX;EACA,IAAIE,MAAiC,GAAG,IAAIC,4BAAJ,CAAkBN,KAAlB,EAAyB;IAC/DG;EAD+D,CAAzB,CAAxC;EAIA,MAAMI,UAAyB,GAAG,CAC/B,cAD+B,EAE/B,aAF+B,EAG/B,aAH+B,EAI/B,qBAJ+B,EAK/B,YAL+B,EAM/B,mBAN+B,EAO/B,+BAP+B,CAAlC;EAUAA,UAAU,CAACC,OAAX,CAAmBC,IAAI,IAAI;IACzBC,cAAA,CAAQC,EAAR,CAAWF,IAAX,EAAiB,MAAM;MACrBJ,MAAM,GAAGD,SAAT;IACD,CAFD;EAGD,CAJD;EAMA,OAAO,CAACQ,KAAD,EAAQC,OAAR,KAAwC;IAC7C,IAAI,CAACR,MAAL,EAAa;MACXA,MAAM,GAAG,IAAIC,4BAAJ,CAAkBN,KAAlB,EAAyB;QAChCG;MADgC,CAAzB,CAAT;IAGD;;IACD,OAAOE,MAAM,CACVO,KADI,CACEA,KADF,EACSC,OADT,EACkB;MACrBC,SAAS,EAAG,mBADS;MAErBZ;IAFqB,CADlB,EAKJa,IALI,CAKCC,MAAM,IAAI;MACd,IAAIA,MAAM,CAACC,MAAX,EAAmB;QACjB,MAAMC,gBAAgB,GAAGF,MAAM,CAACC,MAAP,CACtBE,GADsB,CAClBC,CAAC,IAAI;UACR;UACA,MAAMC,IAAI,GAAGC,mBAAA,CACVC,KADU,CACJH,CADI,EAEVI,IAFU,CAELH,IAAI,IAAI,cAAcI,IAAd,CAAmBJ,IAAI,CAACK,eAAL,EAAnB,CAFH,CAAb;;UAIA,IAAIL,IAAJ,EAAU;YACR,MAAMM,eAAe,GAAG,IAAAC,oBAAA,EAAY;cAClCC,OAAO,EAAET,CAAC,CAACS,OADuB;cAElCC,QAAQ,EAAE;gBACRC,KAAK,EAAE;kBACLC,IAAI,EAAEX,IAAI,CAACY,aAAL,EADD;kBAELC,MAAM,EAAEb,IAAI,CAACc,eAAL;gBAFH;cADC,CAFwB;cAQlCC,QAAQ,EAAEf,IAAI,CAACgB,WAAL,EARwB;cASlCC,KAAK,EAAElB;YAT2B,CAAZ,CAAxB;YAWAO,eAAe,CAACd,OAAhB,GAA0B,EACxB,GAAGc,eAAe,CAACd,OADK;cAExB0B,mBAAmB,EAAE;YAFG,CAA1B;YAIA,OAAOZ,eAAP;UACD;;UAED,OAAO,IAAP;QACD,CA3BsB,EA4BtBa,MA5BsB,CA4BfC,OA5Be,CAAzB;;QA8BA,IAAIvB,gBAAgB,CAACwB,MAArB,EAA6B;UAC3B;UACAzC,QAAQ,CAAC0C,YAAT,CAAsBzB,gBAAtB;QACD;MACF;;MAED,OAAOF,MAAP;IACD,CA5CI,CAAP;EA6CD,CAnDD;AAoDD,CApFM"}