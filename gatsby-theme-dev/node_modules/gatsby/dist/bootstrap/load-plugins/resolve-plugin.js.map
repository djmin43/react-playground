{"version":3,"file":"resolve-plugin.js","names":["resolvePlugin","plugin","rootDir","pluginName","resolve","validLocalPlugin","localPluginPath","checkLocalPlugin","packageJSON","JSON","parse","fs","readFileSync","name","warnOnIncompatiblePeerDependency","id","createPluginId","version","createFileContentHash","getResolvedFieldsForPlugin","requireSource","createRequireFromPath","require","resolvedPath","slash","path","dirname","isAbsolute","err","process","env","gatsby_log_level","reporter","panicOnBuild","Error"],"sources":["../../../src/bootstrap/load-plugins/resolve-plugin.ts"],"sourcesContent":["import path from \"path\"\nimport fs from \"fs\"\nimport { slash, createRequireFromPath } from \"gatsby-core-utils\"\nimport { warnOnIncompatiblePeerDependency } from \"./validate\"\nimport { PackageJson } from \"../../..\"\nimport { IPluginInfo, PluginRef } from \"./types\"\nimport { createPluginId } from \"./utils/create-id\"\nimport { createFileContentHash } from \"./utils/create-hash\"\nimport reporter from \"gatsby-cli/lib/reporter\"\nimport { isString } from \"lodash\"\nimport { checkLocalPlugin } from \"./utils/check-local-plugin\"\nimport { getResolvedFieldsForPlugin } from \"../../utils/parcel/compile-gatsby-files\"\n\n/**\n * @param plugin\n * This should be a plugin spec object where possible but can also be the\n * name of a plugin.\n *\n * When it is a name, it can be a name of a local plugin, the name of a plugin\n * located in node_modules, or a Gatsby internal plugin. In the last case the\n * plugin will be an absolute path.\n * @param rootDir\n * This is the project location, from which are found the plugins\n */\nexport function resolvePlugin(plugin: PluginRef, rootDir: string): IPluginInfo {\n  const pluginName = isString(plugin) ? plugin : plugin.resolve\n\n  // Handle local plugins\n  const { validLocalPlugin, localPluginPath = `` } = checkLocalPlugin(\n    plugin,\n    rootDir\n  )\n\n  if (validLocalPlugin && localPluginPath) {\n    const packageJSON = JSON.parse(\n      fs.readFileSync(`${localPluginPath}/package.json`, `utf-8`)\n    ) as PackageJson\n    const name = packageJSON.name || pluginName\n    warnOnIncompatiblePeerDependency(name, packageJSON)\n\n    return {\n      resolve: localPluginPath,\n      name,\n      id: createPluginId(name),\n      version:\n        packageJSON?.version || createFileContentHash(localPluginPath, `**`),\n      ...getResolvedFieldsForPlugin(rootDir, name),\n    }\n  }\n\n  /**\n   * Here we have an absolute path to an internal plugin, or a name of a module\n   * which should be located in node_modules.\n   */\n  try {\n    const requireSource =\n      rootDir !== null\n        ? createRequireFromPath(`${rootDir}/:internal:`)\n        : require\n\n    // If the path is absolute, resolve the directory of the internal plugin,\n    // otherwise resolve the directory containing the package.json\n    const resolvedPath = slash(\n      path.dirname(\n        requireSource.resolve(\n          path.isAbsolute(pluginName)\n            ? pluginName\n            : `${pluginName}/package.json`\n        )\n      )\n    )\n\n    const packageJSON = JSON.parse(\n      fs.readFileSync(`${resolvedPath}/package.json`, `utf-8`)\n    )\n    warnOnIncompatiblePeerDependency(packageJSON.name, packageJSON)\n\n    return {\n      resolve: resolvedPath,\n      id: createPluginId(packageJSON.name),\n      name: packageJSON.name,\n      version: packageJSON.version,\n    }\n  } catch (err) {\n    if (process.env.gatsby_log_level === `verbose`) {\n      reporter.panicOnBuild(\n        `plugin \"${pluginName} threw the following error:\\n`,\n        err\n      )\n    } else {\n      reporter.panicOnBuild(\n        `There was a problem loading plugin \"${pluginName}\". Perhaps you need to install its package?\\nUse --verbose to see actual error.`\n      )\n    }\n    throw new Error(`unreachable`)\n  }\n}\n"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAGA;;AACA;;AACA;;AAEA;;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,aAAT,CAAuBC,MAAvB,EAA0CC,OAA1C,EAAwE;EAC7E,MAAMC,UAAU,GAAG,wBAASF,MAAT,IAAmBA,MAAnB,GAA4BA,MAAM,CAACG,OAAtD,CAD6E,CAG7E;;EACA,MAAM;IAAEC,gBAAF;IAAoBC,eAAe,GAAI;EAAvC,IAA6C,IAAAC,kCAAA,EACjDN,MADiD,EAEjDC,OAFiD,CAAnD;;EAKA,IAAIG,gBAAgB,IAAIC,eAAxB,EAAyC;IACvC,MAAME,WAAW,GAAGC,IAAI,CAACC,KAAL,CAClBC,WAAA,CAAGC,YAAH,CAAiB,GAAEN,eAAgB,eAAnC,EAAoD,OAApD,CADkB,CAApB;IAGA,MAAMO,IAAI,GAAGL,WAAW,CAACK,IAAZ,IAAoBV,UAAjC;IACA,IAAAW,0CAAA,EAAiCD,IAAjC,EAAuCL,WAAvC;IAEA,OAAO;MACLJ,OAAO,EAAEE,eADJ;MAELO,IAFK;MAGLE,EAAE,EAAE,IAAAC,wBAAA,EAAeH,IAAf,CAHC;MAILI,OAAO,EACL,CAAAT,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAES,OAAb,KAAwB,IAAAC,iCAAA,EAAsBZ,eAAtB,EAAwC,IAAxC,CALrB;MAML,GAAG,IAAAa,8CAAA,EAA2BjB,OAA3B,EAAoCW,IAApC;IANE,CAAP;EAQD;EAED;AACF;AACA;AACA;;;EACE,IAAI;IACF,MAAMO,aAAa,GACjBlB,OAAO,KAAK,IAAZ,GACI,IAAAmB,sCAAA,EAAuB,GAAEnB,OAAQ,aAAjC,CADJ,GAEIoB,OAHN,CADE,CAMF;IACA;;IACA,MAAMC,YAAY,GAAG,IAAAC,sBAAA,EACnBC,aAAA,CAAKC,OAAL,CACEN,aAAa,CAAChB,OAAd,CACEqB,aAAA,CAAKE,UAAL,CAAgBxB,UAAhB,IACIA,UADJ,GAEK,GAAEA,UAAW,eAHpB,CADF,CADmB,CAArB;IAUA,MAAMK,WAAW,GAAGC,IAAI,CAACC,KAAL,CAClBC,WAAA,CAAGC,YAAH,CAAiB,GAAEW,YAAa,eAAhC,EAAiD,OAAjD,CADkB,CAApB;IAGA,IAAAT,0CAAA,EAAiCN,WAAW,CAACK,IAA7C,EAAmDL,WAAnD;IAEA,OAAO;MACLJ,OAAO,EAAEmB,YADJ;MAELR,EAAE,EAAE,IAAAC,wBAAA,EAAeR,WAAW,CAACK,IAA3B,CAFC;MAGLA,IAAI,EAAEL,WAAW,CAACK,IAHb;MAILI,OAAO,EAAET,WAAW,CAACS;IAJhB,CAAP;EAMD,CA7BD,CA6BE,OAAOW,GAAP,EAAY;IACZ,IAAIC,OAAO,CAACC,GAAR,CAAYC,gBAAZ,KAAkC,SAAtC,EAAgD;MAC9CC,iBAAA,CAASC,YAAT,CACG,WAAU9B,UAAW,+BADxB,EAEEyB,GAFF;IAID,CALD,MAKO;MACLI,iBAAA,CAASC,YAAT,CACG,uCAAsC9B,UAAW,iFADpD;IAGD;;IACD,MAAM,IAAI+B,KAAJ,CAAW,aAAX,CAAN;EACD;AACF"}