{"version":3,"file":"internal.js","names":["createPageDependencies","payload","plugin","type","map","path","nodeId","connection","createPageDependency","deleteComponentsDependencies","paths","replaceComponentQuery","query","componentPath","apiFinished","replaceStaticQuery","args","queryExtracted","traceId","setGraphQLDefinitions","definitionsByName","queryExtractionGraphQLError","error","queryExtractedBabelSuccess","queryExtractionBabelError","setProgramStatus","status","pageQueryRun","queryStart","isPage","clearDirtyQueriesListToEmitViaWebsocket","removeStaleJob","contentDigest","setSiteConfig","config","result","gatsbyConfigSchema","validate","normalizedPayload","value","hasUnknownKeys","details","filter","Array","isArray","length","errorMessages","unknown","context","message","key","suggestion","didYouMean","reporter","panic","id","sourceMessage","join","setFunctions","functions","deleteNodeManifests","createJobV2FromInternalJob","internalJob","dispatch","getState","jobContentDigest","currentState","jobsV2","complete","has","Promise","resolve","get","engineContext","getEngineContext","job","requestId","inProgressJobPromise","getInProcessJobPromise","name","enqueuedJobPromise","enqueueJob","then","removeInProgressJob","clearGatsbyImageSourceUrls"],"sources":["../../../src/redux/actions/internal.ts"],"sourcesContent":["import reporter from \"gatsby-cli/lib/reporter\"\n\nimport {\n  IGatsbyConfig,\n  IGatsbyPlugin,\n  ProgramStatus,\n  ICreatePageDependencyAction,\n  IDeleteComponentDependenciesAction,\n  IReplaceComponentQueryAction,\n  IReplaceStaticQueryAction,\n  IQueryExtractedAction,\n  IQueryExtractionGraphQLErrorAction,\n  IQueryExtractedBabelSuccessAction,\n  IQueryExtractionBabelErrorAction,\n  ISetProgramStatusAction,\n  IPageQueryRunAction,\n  IRemoveStaleJobAction,\n  ISetSiteConfig,\n  ISetSiteFunctions,\n  IGatsbyState,\n  IDefinitionMeta,\n  ISetGraphQLDefinitionsAction,\n  IQueryStartAction,\n  IApiFinishedAction,\n  IQueryClearDirtyQueriesListToEmitViaWebsocket,\n  ICreateJobV2FromInternalAction,\n  ICreatePageDependencyActionPayloadType,\n  IDeleteNodeManifests,\n  IClearGatsbyImageSourceUrlAction,\n} from \"../types\"\n\nimport { gatsbyConfigSchema } from \"../../joi-schemas/joi\"\nimport { didYouMean } from \"../../utils/did-you-mean\"\nimport {\n  enqueueJob,\n  InternalJob,\n  removeInProgressJob,\n  getInProcessJobPromise,\n} from \"../../utils/jobs/manager\"\nimport { getEngineContext } from \"../../utils/engine-context\"\n\n/**\n * Create a dependency between a page and data. Probably for\n * internal use only.\n * @private\n */\nexport const createPageDependencies = (\n  payload: Array<ICreatePageDependencyActionPayloadType>,\n  plugin = ``\n): ICreatePageDependencyAction => {\n  return {\n    type: `CREATE_COMPONENT_DEPENDENCY`,\n    plugin,\n    payload: payload.map(({ path, nodeId, connection }) => {\n      return {\n        path,\n        nodeId,\n        connection,\n      }\n    }),\n  }\n}\n\n/**\n * Create a dependency between a page and data. Probably for\n * internal use only.\n *\n * Shorthand for createPageDependencies.\n * @private\n */\nexport const createPageDependency = (\n  payload: ICreatePageDependencyActionPayloadType,\n  plugin = ``\n): ICreatePageDependencyAction => createPageDependencies([payload], plugin)\n\n/**\n * Delete dependencies between an array of pages and data. Probably for\n * internal use only. Used when deleting pages.\n * @private\n */\nexport const deleteComponentsDependencies = (\n  paths: Array<string>\n): IDeleteComponentDependenciesAction => {\n  return {\n    type: `DELETE_COMPONENTS_DEPENDENCIES`,\n    payload: {\n      paths,\n    },\n  }\n}\n\n/**\n * When the query watcher extracts a GraphQL query, it calls\n * this to store the query with its component.\n * @private\n */\nexport const replaceComponentQuery = ({\n  query,\n  componentPath,\n}: {\n  query: string\n  componentPath: string\n}): IReplaceComponentQueryAction => {\n  return {\n    type: `REPLACE_COMPONENT_QUERY`,\n    payload: {\n      query,\n      componentPath,\n    },\n  }\n}\n\nexport const apiFinished = (\n  payload: IApiFinishedAction[\"payload\"]\n): IApiFinishedAction => {\n  return {\n    type: `API_FINISHED`,\n    payload,\n  }\n}\n\n/**\n * When the query watcher extracts a \"static\" GraphQL query from <StaticQuery>\n * components, it calls this to store the query with its component.\n * @private\n */\nexport const replaceStaticQuery = (\n  args: {\n    name: string\n    componentPath: string\n    id: string\n    query: string\n    hash: string\n  },\n  plugin: IGatsbyPlugin | null | undefined = null\n): IReplaceStaticQueryAction => {\n  return {\n    type: `REPLACE_STATIC_QUERY`,\n    plugin,\n    payload: args,\n  }\n}\n\n/**\n *\n * Report that a query has been extracted from a component. Used by\n * query-compiler.js.\n * @private\n */\nexport const queryExtracted = (\n  { componentPath, query }: { componentPath: string; query: string },\n  plugin: IGatsbyPlugin,\n  traceId?: string\n): IQueryExtractedAction => {\n  return {\n    type: `QUERY_EXTRACTED`,\n    plugin,\n    traceId,\n    payload: { componentPath, query },\n  }\n}\n\n/**\n * Set Definitions for fragment extraction, etc.\n *\n * Used by developer tools such as vscode-graphql & graphiql\n *\n * query-compiler.js.\n * @private\n */\nexport const setGraphQLDefinitions = (\n  definitionsByName: Map<string, IDefinitionMeta>\n): ISetGraphQLDefinitionsAction => {\n  return {\n    type: `SET_GRAPHQL_DEFINITIONS`,\n    payload: definitionsByName,\n  }\n}\n\n/**\n *\n * Report that the Relay Compiler found a graphql error when attempting to extract a query\n * @private\n */\nexport const queryExtractionGraphQLError = (\n  { componentPath, error }: { componentPath: string; error: string },\n  plugin: IGatsbyPlugin,\n  traceId?: string\n): IQueryExtractionGraphQLErrorAction => {\n  return {\n    type: `QUERY_EXTRACTION_GRAPHQL_ERROR`,\n    plugin,\n    traceId,\n    payload: { componentPath, error },\n  }\n}\n\n/**\n *\n * Report that babel was able to extract the graphql query.\n * Indicates that the file is free of JS errors.\n * @private\n */\nexport const queryExtractedBabelSuccess = (\n  { componentPath },\n  plugin: IGatsbyPlugin,\n  traceId?: string\n): IQueryExtractedBabelSuccessAction => {\n  return {\n    type: `QUERY_EXTRACTION_BABEL_SUCCESS`,\n    plugin,\n    traceId,\n    payload: { componentPath },\n  }\n}\n\n/**\n *\n * Report that the Relay Compiler found a babel error when attempting to extract a query\n * @private\n */\nexport const queryExtractionBabelError = (\n  { componentPath, error }: { componentPath: string; error: Error },\n  plugin: IGatsbyPlugin,\n  traceId?: string\n): IQueryExtractionBabelErrorAction => {\n  return {\n    type: `QUERY_EXTRACTION_BABEL_ERROR`,\n    plugin,\n    traceId,\n    payload: { componentPath, error },\n  }\n}\n\n/**\n * Set overall program status e.g. `BOOTSTRAPING` or `BOOTSTRAP_FINISHED`.\n * @private\n */\nexport const setProgramStatus = (\n  status: ProgramStatus,\n  plugin: IGatsbyPlugin,\n  traceId?: string\n): ISetProgramStatusAction => {\n  return {\n    type: `SET_PROGRAM_STATUS`,\n    plugin,\n    traceId,\n    payload: status,\n  }\n}\n\n/**\n * Broadcast that a page's query was run.\n * @private\n */\nexport const pageQueryRun = (\n  payload: IPageQueryRunAction[\"payload\"],\n  plugin: IGatsbyPlugin,\n  traceId?: string\n): IPageQueryRunAction => {\n  return {\n    type: `PAGE_QUERY_RUN`,\n    plugin,\n    traceId,\n    payload,\n  }\n}\n\nexport const queryStart = (\n  { path, componentPath, isPage },\n  plugin: IGatsbyPlugin,\n  traceId?: string\n): IQueryStartAction => {\n  return {\n    type: `QUERY_START`,\n    plugin,\n    traceId,\n    payload: { path, componentPath, isPage },\n  }\n}\n\nexport const clearDirtyQueriesListToEmitViaWebsocket =\n  (): IQueryClearDirtyQueriesListToEmitViaWebsocket => {\n    return {\n      type: `QUERY_CLEAR_DIRTY_QUERIES_LIST_TO_EMIT_VIA_WEBSOCKET`,\n    }\n  }\n\n/**\n * Remove jobs which are marked as stale (inputPath doesn't exists)\n * @private\n */\nexport const removeStaleJob = (\n  contentDigest: string,\n  plugin?: IGatsbyPlugin,\n  traceId?: string\n): IRemoveStaleJobAction => {\n  return {\n    type: `REMOVE_STALE_JOB_V2`,\n    plugin,\n    traceId,\n    payload: {\n      contentDigest,\n    },\n  }\n}\n\n/**\n * Set gatsby config\n * @private\n */\nexport const setSiteConfig = (config?: unknown): ISetSiteConfig => {\n  const result = gatsbyConfigSchema.validate(config || {})\n  const normalizedPayload: IGatsbyConfig = result.value\n\n  if (result.error) {\n    const hasUnknownKeys = result.error.details.filter(\n      details => details.type === `object.unknown`\n    )\n\n    if (Array.isArray(hasUnknownKeys) && hasUnknownKeys.length) {\n      const errorMessages = hasUnknownKeys.map(unknown => {\n        const { context, message } = unknown\n        const key = context?.key\n        const suggestion = key && didYouMean(key)\n\n        if (suggestion) {\n          return `${message}. ${suggestion}`\n        }\n\n        return message\n      })\n\n      reporter.panic({\n        id: `10122`,\n        context: {\n          sourceMessage: errorMessages.join(`\\n`),\n        },\n      })\n    }\n\n    reporter.panic({\n      id: `10122`,\n      context: {\n        sourceMessage: result.error.message,\n      },\n    })\n  }\n\n  return {\n    type: `SET_SITE_CONFIG`,\n    payload: normalizedPayload,\n  }\n}\n\n/**\n * Set gatsby functions\n * @private\n */\nexport const setFunctions = (\n  functions: IGatsbyState[\"functions\"]\n): ISetSiteFunctions => {\n  return {\n    type: `SET_SITE_FUNCTIONS`,\n    payload: functions,\n  }\n}\n\nexport const deleteNodeManifests = (): IDeleteNodeManifests => {\n  return {\n    type: `DELETE_NODE_MANIFESTS`,\n  }\n}\n\nexport const createJobV2FromInternalJob =\n  (internalJob: InternalJob): ICreateJobV2FromInternalAction =>\n  (dispatch, getState): Promise<Record<string, unknown>> => {\n    const jobContentDigest = internalJob.contentDigest\n    const currentState = getState()\n\n    // Check if we already ran this job before, if yes we return the result\n    // We have an inflight (in progress) queue inside the jobs manager to make sure\n    // we don't waste resources twice during the process\n    if (\n      currentState.jobsV2 &&\n      currentState.jobsV2.complete.has(jobContentDigest)\n    ) {\n      return Promise.resolve(\n        currentState.jobsV2.complete.get(jobContentDigest)!.result\n      )\n    }\n    const engineContext = getEngineContext()\n\n    // Always set context, even if engineContext is undefined.\n    // We do this because the final list of jobs for a given engine request includes both:\n    //  - jobs with the same requestId\n    //  - jobs without requestId (technically with requestId === \"\")\n    //\n    // See https://nodejs.org/dist/latest-v16.x/docs/api/async_context.html#async_context_troubleshooting_context_loss\n    // on cases when async context could be lost.\n    dispatch({\n      type: `SET_JOB_V2_CONTEXT`,\n      payload: {\n        job: internalJob,\n        requestId: engineContext?.requestId ?? ``,\n      },\n    })\n\n    const inProgressJobPromise = getInProcessJobPromise(jobContentDigest)\n    if (inProgressJobPromise) {\n      return inProgressJobPromise\n    }\n\n    dispatch({\n      type: `CREATE_JOB_V2`,\n      payload: {\n        job: internalJob,\n      },\n      plugin: { name: internalJob.plugin.name },\n    })\n\n    const enqueuedJobPromise = enqueueJob(internalJob)\n    return enqueuedJobPromise.then(result => {\n      // store the result in redux so we have it for the next run\n      dispatch({\n        type: `END_JOB_V2`,\n        plugin: { name: internalJob.plugin.name },\n        payload: {\n          jobContentDigest,\n          result,\n        },\n      })\n\n      // remove the job from our inProgressJobQueue as it's available in our done state.\n      // this is a perf optimisations so we don't grow our memory too much when using gatsby preview\n      removeInProgressJob(jobContentDigest)\n\n      return result\n    })\n  }\n\nexport const clearGatsbyImageSourceUrls =\n  (): IClearGatsbyImageSourceUrlAction => {\n    return {\n      type: `CLEAR_GATSBY_IMAGE_SOURCE_URL`,\n    }\n  }\n"],"mappings":"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"}