{"version":3,"file":"jobs.js","names":["jobsReducer","state","active","done","action","type","payload","id","Error","index","j","mergedJob","createdAt","Date","now","plugin","push","completedAt","oneLine","job","splice","runTime","moment","diff"],"sources":["../../../src/redux/reducers/jobs.ts"],"sourcesContent":["import _ from \"lodash\"\nimport { oneLine } from \"common-tags\"\nimport moment from \"moment\"\n\nimport { IGatsbyState, ActionsUnion } from \"../types\"\n\nexport const jobsReducer = (\n  state: IGatsbyState[\"jobs\"] = { active: [], done: [] },\n  action: ActionsUnion\n): IGatsbyState[\"jobs\"] => {\n  switch (action.type) {\n    case `CREATE_JOB`:\n    case `SET_JOB`: {\n      if (!action.payload.id) {\n        throw new Error(`An ID must be provided when creating or setting job`)\n      }\n      const index = _.findIndex(state.active, j => j.id === action.payload.id)\n      if (index !== -1) {\n        const mergedJob = _.merge(state.active[index], {\n          ...action.payload,\n          createdAt: Date.now(),\n          plugin: action.plugin,\n        })\n\n        state.active[index] = mergedJob\n        return state\n      } else {\n        state.active.push({\n          ...action.payload,\n          createdAt: Date.now(),\n          plugin: action.plugin,\n        })\n        return state\n      }\n    }\n    case `END_JOB`: {\n      if (!action.payload.id) {\n        throw new Error(`An ID must be provided when ending a job`)\n      }\n      const completedAt = Date.now()\n      const index = _.findIndex(state.active, j => j.id === action.payload.id)\n      if (index === -1) {\n        throw new Error(oneLine`\n          The plugin \"${_.get(action, `plugin.name`, `anonymous`)}\"\n          tried to end a job with the id \"${action.payload.id}\"\n          that either hasn't yet been created or has already been ended`)\n      }\n      const job = state.active.splice(index, 1)[0]\n      state.done.push({\n        ...job,\n        completedAt,\n        runTime: moment(completedAt).diff(moment(job.createdAt)),\n      })\n\n      return state\n    }\n  }\n\n  return state\n}\n"],"mappings":";;;;;;;;;;;;;AACA;;AACA;;AAIO,MAAMA,WAAW,GAAG,CACzBC,KAA2B,GAAG;EAAEC,MAAM,EAAE,EAAV;EAAcC,IAAI,EAAE;AAApB,CADL,EAEzBC,MAFyB,KAGA;EACzB,QAAQA,MAAM,CAACC,IAAf;IACE,KAAM,YAAN;IACA,KAAM,SAAN;MAAgB;QACd,IAAI,CAACD,MAAM,CAACE,OAAP,CAAeC,EAApB,EAAwB;UACtB,MAAM,IAAIC,KAAJ,CAAW,qDAAX,CAAN;QACD;;QACD,MAAMC,KAAK,GAAG,yBAAYR,KAAK,CAACC,MAAlB,EAA0BQ,CAAC,IAAIA,CAAC,CAACH,EAAF,KAASH,MAAM,CAACE,OAAP,CAAeC,EAAvD,CAAd;;QACA,IAAIE,KAAK,KAAK,CAAC,CAAf,EAAkB;UAChB,MAAME,SAAS,GAAG,qBAAQV,KAAK,CAACC,MAAN,CAAaO,KAAb,CAAR,EAA6B,EAC7C,GAAGL,MAAM,CAACE,OADmC;YAE7CM,SAAS,EAAEC,IAAI,CAACC,GAAL,EAFkC;YAG7CC,MAAM,EAAEX,MAAM,CAACW;UAH8B,CAA7B,CAAlB;UAMAd,KAAK,CAACC,MAAN,CAAaO,KAAb,IAAsBE,SAAtB;UACA,OAAOV,KAAP;QACD,CATD,MASO;UACLA,KAAK,CAACC,MAAN,CAAac,IAAb,CAAkB,EAChB,GAAGZ,MAAM,CAACE,OADM;YAEhBM,SAAS,EAAEC,IAAI,CAACC,GAAL,EAFK;YAGhBC,MAAM,EAAEX,MAAM,CAACW;UAHC,CAAlB;UAKA,OAAOd,KAAP;QACD;MACF;;IACD,KAAM,SAAN;MAAgB;QACd,IAAI,CAACG,MAAM,CAACE,OAAP,CAAeC,EAApB,EAAwB;UACtB,MAAM,IAAIC,KAAJ,CAAW,0CAAX,CAAN;QACD;;QACD,MAAMS,WAAW,GAAGJ,IAAI,CAACC,GAAL,EAApB;QACA,MAAML,KAAK,GAAG,yBAAYR,KAAK,CAACC,MAAlB,EAA0BQ,CAAC,IAAIA,CAAC,CAACH,EAAF,KAASH,MAAM,CAACE,OAAP,CAAeC,EAAvD,CAAd;;QACA,IAAIE,KAAK,KAAK,CAAC,CAAf,EAAkB;UAChB,MAAM,IAAID,KAAJ,CAAU,IAAAU,mBAAA,CAAQ;AAChC,wBAAwB,mBAAMd,MAAN,EAAe,aAAf,EAA8B,WAA9B,CAA0C;AAClE,4CAA4CA,MAAM,CAACE,OAAP,CAAeC,EAAG;AAC9D,wEAHc,CAAN;QAID;;QACD,MAAMY,GAAG,GAAGlB,KAAK,CAACC,MAAN,CAAakB,MAAb,CAAoBX,KAApB,EAA2B,CAA3B,EAA8B,CAA9B,CAAZ;QACAR,KAAK,CAACE,IAAN,CAAWa,IAAX,CAAgB,EACd,GAAGG,GADW;UAEdF,WAFc;UAGdI,OAAO,EAAE,IAAAC,eAAA,EAAOL,WAAP,EAAoBM,IAApB,CAAyB,IAAAD,eAAA,EAAOH,GAAG,CAACP,SAAX,CAAzB;QAHK,CAAhB;QAMA,OAAOX,KAAP;MACD;EA7CH;;EAgDA,OAAOA,KAAP;AACD,CArDM"}