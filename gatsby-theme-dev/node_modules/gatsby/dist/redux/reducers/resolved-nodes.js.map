{"version":3,"file":"resolved-nodes.js","names":["resolvedNodesCacheReducer","state","Map","action","type","key","nodes","payload","existingResolvedNodes","get","nodeId","resolvedFields","entries","previouslyResolvedNodeFields","set","merge"],"sources":["../../../src/redux/reducers/resolved-nodes.ts"],"sourcesContent":["import merge from \"lodash/merge\"\nimport { IGatsbyState, ActionsUnion } from \"../types\"\n\nexport const resolvedNodesCacheReducer = (\n  state: IGatsbyState[\"resolvedNodesCache\"] = new Map(),\n  action: ActionsUnion\n): IGatsbyState[\"resolvedNodesCache\"] => {\n  switch (action.type) {\n    case `DELETE_CACHE`:\n    case `CREATE_NODE`:\n    case `DELETE_NODE`:\n      return new Map()\n\n    case `SET_RESOLVED_NODES`: {\n      const { key, nodes } = action.payload\n      const existingResolvedNodes = state.get(key)\n      if (existingResolvedNodes) {\n        // merge new resolved fields for given type with previously existing ones\n        for (const [nodeId, resolvedFields] of nodes.entries()) {\n          const previouslyResolvedNodeFields = existingResolvedNodes.get(nodeId)\n          if (previouslyResolvedNodeFields) {\n            // merge new resolved fields for given node id with previously existing ones\n            existingResolvedNodes.set(\n              nodeId,\n              merge(previouslyResolvedNodeFields, resolvedFields)\n            )\n          } else {\n            // we didn't have any resolved fields for this node id, so we can just set new\n            // ones as-is\n            existingResolvedNodes.set(nodeId, resolvedFields)\n          }\n        }\n      } else {\n        // we didn't have resolved fields for this type yet, so\n        // we can just set it\n        state.set(key, nodes)\n      }\n      return state\n    }\n\n    default:\n      return state\n  }\n}\n"],"mappings":";;;;;;;AAAA;;AAGO,MAAMA,yBAAyB,GAAG,CACvCC,KAAyC,GAAG,IAAIC,GAAJ,EADL,EAEvCC,MAFuC,KAGA;EACvC,QAAQA,MAAM,CAACC,IAAf;IACE,KAAM,cAAN;IACA,KAAM,aAAN;IACA,KAAM,aAAN;MACE,OAAO,IAAIF,GAAJ,EAAP;;IAEF,KAAM,oBAAN;MAA2B;QACzB,MAAM;UAAEG,GAAF;UAAOC;QAAP,IAAiBH,MAAM,CAACI,OAA9B;QACA,MAAMC,qBAAqB,GAAGP,KAAK,CAACQ,GAAN,CAAUJ,GAAV,CAA9B;;QACA,IAAIG,qBAAJ,EAA2B;UACzB;UACA,KAAK,MAAM,CAACE,MAAD,EAASC,cAAT,CAAX,IAAuCL,KAAK,CAACM,OAAN,EAAvC,EAAwD;YACtD,MAAMC,4BAA4B,GAAGL,qBAAqB,CAACC,GAAtB,CAA0BC,MAA1B,CAArC;;YACA,IAAIG,4BAAJ,EAAkC;cAChC;cACAL,qBAAqB,CAACM,GAAtB,CACEJ,MADF,EAEE,IAAAK,cAAA,EAAMF,4BAAN,EAAoCF,cAApC,CAFF;YAID,CAND,MAMO;cACL;cACA;cACAH,qBAAqB,CAACM,GAAtB,CAA0BJ,MAA1B,EAAkCC,cAAlC;YACD;UACF;QACF,CAhBD,MAgBO;UACL;UACA;UACAV,KAAK,CAACa,GAAN,CAAUT,GAAV,EAAeC,KAAf;QACD;;QACD,OAAOL,KAAP;MACD;;IAED;MACE,OAAOA,KAAP;EAlCJ;AAoCD,CAxCM"}